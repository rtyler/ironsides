           *******************************************************
                       Semantic Analysis of SPARK Text
                             Examiner GPL Edition

           *******************************************************


          procedure dns_table_pkg.DNS_Table_Type.queryAAAARecords




For path(s) from start to run-time check associated with statement of line 123:

procedure_queryaaaarecords_1.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H3:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
H4:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
H5:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
H6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
H7:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           to_lower(domainname), [i___1]) >= character__first) and (element(
           to_lower(domainname), [i___1]) <= character__last))) .
H8:    hash(to_lower(domainname)) >= 
           rr_type__numbucketsindextype__first .
H9:    hash(to_lower(domainname)) <= 
           rr_type__numbucketsindextype__last .
        ->
C1:    hash(to_lower(domainname)) >= 
           rr_type__numbucketsindextype__first .
C2:    hash(to_lower(domainname)) <= 
           rr_type__numbucketsindextype__last .
 

For path(s) from start to run-time check associated with statement of line 124:

procedure_queryaaaarecords_2.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H3:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
H4:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
H5:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
H6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
H7:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           to_lower(domainname), [i___1]) >= character__first) and (element(
           to_lower(domainname), [i___1]) <= character__last))) .
H8:    hash(to_lower(domainname)) >= 
           rr_type__numbucketsindextype__first .
H9:    hash(to_lower(domainname)) <= 
           rr_type__numbucketsindextype__last .
H10:   hash(to_lower(domainname)) >= 
           rr_type__numbucketsindextype__first .
H11:   hash(to_lower(domainname)) <= 
           rr_type__numbucketsindextype__last .
        ->
C1:    0 >= rr_type__numberofrecordstype__first .
C2:    0 <= rr_type__numberofrecordstype__last .
 

For path(s) from start to assertion of line 126:

procedure_queryaaaarecords_3.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H3:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
H4:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
H5:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
H6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
H7:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           to_lower(domainname), [i___1]) >= character__first) and (element(
           to_lower(domainname), [i___1]) <= character__last))) .
H8:    hash(to_lower(domainname)) >= 
           rr_type__numbucketsindextype__first .
H9:    hash(to_lower(domainname)) <= 
           rr_type__numbucketsindextype__last .
H10:   hash(to_lower(domainname)) >= 
           rr_type__numbucketsindextype__first .
H11:   hash(to_lower(domainname)) <= 
           rr_type__numbucketsindextype__last .
H12:   0 >= rr_type__numberofrecordstype__first .
H13:   0 <= rr_type__numberofrecordstype__last .
        ->
C1:    0 >= 0 .
C2:    0 < rr_type__returnedrecordsindextype__first .
C3:    hash(to_lower(domainname)) >= 1 .
C4:    hash(to_lower(domainname)) <= rr_type__numbuckets .
C5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
C6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
C7:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
C8:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
C9:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
C10:   rr_type__returnedrecordsindextype__first >= 
           rr_type__returnedrecordsindextype__first .
C11:   rr_type__returnedrecordsindextype__first <= 
           rr_type__returnedrecordsindextype__last .
C12:   rr_type__returnedrecordsindextype__first >= 
           rr_type__returnedrecordsindextype__first .
C13:   rr_type__returnedrecordsindextype__first <= 
           rr_type__returnedrecordsindextype__last .
 

For path(s) from assertion of line 126 to assertion of line 126:

procedure_queryaaaarecords_4.
H1:    howmany >= 0 .
H2:    howmany < loop__1__ctr .
H3:    bucket >= 1 .
H4:    bucket <= rr_type__numbuckets .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
H7:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
H8:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
H9:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
H10:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H11:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H12:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H13:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H14:   1 >= rr_type__wirestringtypeindex__first .
H15:   1 <= rr_type__wirestringtypeindex__last .
H16:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H17:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H18:   bucket >= rr_type__numbucketsindextype__first .
H19:   bucket <= rr_type__numbucketsindextype__last .
H20:   not (element(element(element(
           dns_table_type__aaaarecordkeys, [bucket]), [
           loop__1__ctr]), [1]) = ascii__nul) .
H21:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H22:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H23:   bucket >= rr_type__numbucketsindextype__first .
H24:   bucket <= rr_type__numbucketsindextype__last .
H25:   true .
H26:   same(element(element(dns_table_type__aaaarecordkeys, [
           bucket]), [loop__1__ctr]), lower_domainname) .
H27:   howmany + 1 >= rr_type__numberofrecordstype__first .
H28:   howmany + 1 <= rr_type__numberofrecordstype__last .
H29:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H30:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H31:   bucket >= rr_type__numbucketsindextype__first .
H32:   bucket <= rr_type__numbucketsindextype__last .
H33:   howmany + 1 >= rr_type__returnedrecordsindextype__first .
H34:   howmany + 1 <= rr_type__returnedrecordsindextype__last .
H35:   not (loop__1__ctr = rr_type__returnedrecordsindextype__last) .
        ->
C1:    howmany + 1 >= 0 .
C2:    howmany + 1 < loop__1__ctr + 1 .
C3:    bucket >= 1 .
C4:    bucket <= rr_type__numbuckets .
C5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
C6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
C7:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
C8:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
C9:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
C10:   loop__1__ctr + 1 >= rr_type__returnedrecordsindextype__first .
C11:   loop__1__ctr + 1 <= rr_type__returnedrecordsindextype__last .
C12:   loop__1__ctr + 1 >= rr_type__returnedrecordsindextype__first .
C13:   loop__1__ctr + 1 <= rr_type__returnedrecordsindextype__last .
 

procedure_queryaaaarecords_5.
H1:    howmany >= 0 .
H2:    howmany < loop__1__ctr .
H3:    bucket >= 1 .
H4:    bucket <= rr_type__numbuckets .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
H7:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
H8:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
H9:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
H10:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H11:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H12:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H13:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H14:   1 >= rr_type__wirestringtypeindex__first .
H15:   1 <= rr_type__wirestringtypeindex__last .
H16:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H17:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H18:   bucket >= rr_type__numbucketsindextype__first .
H19:   bucket <= rr_type__numbucketsindextype__last .
H20:   not (element(element(element(
           dns_table_type__aaaarecordkeys, [bucket]), [
           loop__1__ctr]), [1]) = ascii__nul) .
H21:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H22:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H23:   bucket >= rr_type__numbucketsindextype__first .
H24:   bucket <= rr_type__numbucketsindextype__last .
H25:   true .
H26:   not (same(element(element(
           dns_table_type__aaaarecordkeys, [bucket]), [
           loop__1__ctr]), lower_domainname)) .
H27:   not (loop__1__ctr = rr_type__returnedrecordsindextype__last) .
        ->
C1:    howmany >= 0 .
C2:    howmany < loop__1__ctr + 1 .
C3:    bucket >= 1 .
C4:    bucket <= rr_type__numbuckets .
C5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
C6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
C7:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
C8:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
C9:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
C10:   loop__1__ctr + 1 >= rr_type__returnedrecordsindextype__first .
C11:   loop__1__ctr + 1 <= rr_type__returnedrecordsindextype__last .
C12:   loop__1__ctr + 1 >= rr_type__returnedrecordsindextype__first .
C13:   loop__1__ctr + 1 <= rr_type__returnedrecordsindextype__last .
 

For path(s) from assertion of line 126 to run-time check associated with statement of line 127:

procedure_queryaaaarecords_6.
H1:    howmany >= 0 .
H2:    howmany < loop__1__ctr .
H3:    bucket >= 1 .
H4:    bucket <= rr_type__numbuckets .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
H7:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
H8:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
H9:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
H10:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H11:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H12:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H13:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
        ->
C1:    1 >= rr_type__wirestringtypeindex__first .
C2:    1 <= rr_type__wirestringtypeindex__last .
C3:    loop__1__ctr >= rr_type__returnedrecordsindextype__first .
C4:    loop__1__ctr <= rr_type__returnedrecordsindextype__last .
C5:    bucket >= rr_type__numbucketsindextype__first .
C6:    bucket <= rr_type__numbucketsindextype__last .
 

For path(s) from assertion of line 126 to run-time check associated with statement of line 129:

procedure_queryaaaarecords_7.
H1:    howmany >= 0 .
H2:    howmany < loop__1__ctr .
H3:    bucket >= 1 .
H4:    bucket <= rr_type__numbuckets .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
H7:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
H8:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
H9:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
H10:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H11:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H12:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H13:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H14:   1 >= rr_type__wirestringtypeindex__first .
H15:   1 <= rr_type__wirestringtypeindex__last .
H16:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H17:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H18:   bucket >= rr_type__numbucketsindextype__first .
H19:   bucket <= rr_type__numbucketsindextype__last .
H20:   not (element(element(element(
           dns_table_type__aaaarecordkeys, [bucket]), [
           loop__1__ctr]), [1]) = ascii__nul) .
        ->
C1:    loop__1__ctr >= rr_type__returnedrecordsindextype__first .
C2:    loop__1__ctr <= rr_type__returnedrecordsindextype__last .
C3:    bucket >= rr_type__numbucketsindextype__first .
C4:    bucket <= rr_type__numbucketsindextype__last .
 

For path(s) from assertion of line 126 to run-time check associated with statement of line 130:

procedure_queryaaaarecords_8.
H1:    howmany >= 0 .
H2:    howmany < loop__1__ctr .
H3:    bucket >= 1 .
H4:    bucket <= rr_type__numbuckets .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
H7:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
H8:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
H9:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
H10:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H11:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H12:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H13:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H14:   1 >= rr_type__wirestringtypeindex__first .
H15:   1 <= rr_type__wirestringtypeindex__last .
H16:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H17:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H18:   bucket >= rr_type__numbucketsindextype__first .
H19:   bucket <= rr_type__numbucketsindextype__last .
H20:   not (element(element(element(
           dns_table_type__aaaarecordkeys, [bucket]), [
           loop__1__ctr]), [1]) = ascii__nul) .
H21:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H22:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H23:   bucket >= rr_type__numbucketsindextype__first .
H24:   bucket <= rr_type__numbucketsindextype__last .
H25:   true .
H26:   same(element(element(dns_table_type__aaaarecordkeys, [
           bucket]), [loop__1__ctr]), lower_domainname) .
        ->
C1:    howmany + 1 >= rr_type__numberofrecordstype__first .
C2:    howmany + 1 <= rr_type__numberofrecordstype__last .
 

For path(s) from assertion of line 126 to run-time check associated with statement of line 132:

procedure_queryaaaarecords_9.
H1:    howmany >= 0 .
H2:    howmany < loop__1__ctr .
H3:    bucket >= 1 .
H4:    bucket <= rr_type__numbuckets .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    for_all(i___3: integer, ((i___3 >= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__first) and (
           i___3 <= 
           rr_type__aaaa_record_type__ipv6addrtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) >= unsigned_types__unsigned16__first) and (element(
           fld_ipv6(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2])), [i___3]) <= unsigned_types__unsigned16__last))))))) .
H7:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= rr_type__classtype__first) and (fld_class(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= rr_type__classtype__last))))) .
H8:    for_all(i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((fld_ttlinseconds(
           fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(element(
           dns_table_type__aaaarecordtable, [i___1]), [
           i___2]))) <= unsigned_types__unsigned32__last))))) .
H9:    for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___2: integer, ((i___2 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___2 <= rr_type__returnedrecordsindextype__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__numbucketsindextype__first) and (i___1 <= 
           rr_type__numbucketsindextype__last)) -> ((element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) >= character__first) and (element(element(element(
           dns_table_type__aaaarecordkeys, [i___1]), [i___2]), [
           i___3]) <= character__last))))))) .
H10:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H11:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H12:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H13:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H14:   1 >= rr_type__wirestringtypeindex__first .
H15:   1 <= rr_type__wirestringtypeindex__last .
H16:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H17:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H18:   bucket >= rr_type__numbucketsindextype__first .
H19:   bucket <= rr_type__numbucketsindextype__last .
H20:   not (element(element(element(
           dns_table_type__aaaarecordkeys, [bucket]), [
           loop__1__ctr]), [1]) = ascii__nul) .
H21:   loop__1__ctr >= rr_type__returnedrecordsindextype__first .
H22:   loop__1__ctr <= rr_type__returnedrecordsindextype__last .
H23:   bucket >= rr_type__numbucketsindextype__first .
H24:   bucket <= rr_type__numbucketsindextype__last .
H25:   true .
H26:   same(element(element(dns_table_type__aaaarecordkeys, [
           bucket]), [loop__1__ctr]), lower_domainname) .
H27:   howmany + 1 >= rr_type__numberofrecordstype__first .
H28:   howmany + 1 <= rr_type__numberofrecordstype__last .
        ->
C1:    loop__1__ctr >= rr_type__returnedrecordsindextype__first .
C2:    loop__1__ctr <= rr_type__returnedrecordsindextype__last .
C3:    bucket >= rr_type__numbucketsindextype__first .
C4:    bucket <= rr_type__numbucketsindextype__last .
C5:    howmany + 1 >= rr_type__returnedrecordsindextype__first .
C6:    howmany + 1 <= rr_type__returnedrecordsindextype__last .
 

For path(s) from assertion of line 126 to finish:

procedure_queryaaaarecords_10.
*** true .          /* trivially true VC removed by Examiner */


procedure_queryaaaarecords_11.
*** true .          /* trivially true VC removed by Examiner */


procedure_queryaaaarecords_12.
*** true .          /* trivially true VC removed by Examiner */


For checks of refinement integrity: 

procedure_queryaaaarecords_13.
*** true .          /* trivially true VC removed by Examiner */


procedure_queryaaaarecords_14.
*** true .          /* trivially true VC removed by Examiner */


