*****************************************************************************
                       Semantic Analysis of SPARK Text
                             Examiner GPL Edition

*****************************************************************************



SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

function Parser_Utilities.isRecord






@@@@@@@@@@  VC: function_isrecord_1.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
***  Proved C1:  element(s, [begidx]) >= character__first
     using hypotheses H2, H3 & H4.
***  Proved C2:  element(s, [begidx]) <= character__last
     using hypotheses H2, H3 & H4.
***  Proved C3:  begidx >= rr_type__linelengthindex__first
     using hypothesis H3.
***  Proved C4:  begidx <= rr_type__linelengthindex__last
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_2.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
***  Proved C1:  ada__characters__handling__to_upper(element(s, [begidx])) >= 
          character__first
     using hypothesis H11.
***  Proved C2:  ada__characters__handling__to_upper(element(s, [begidx])) <= 
          character__last
     using hypothesis H12.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_3.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
***  Proved C1:  element(s, [endidx]) >= character__first
     using hypotheses H2, H5 & H6.
***  Proved C2:  element(s, [endidx]) <= character__last
     using hypotheses H2, H5 & H6.
***  Proved C3:  endidx >= rr_type__linelengthindex__first
     using hypothesis H5.
***  Proved C4:  endidx <= rr_type__linelengthindex__last
     using hypothesis H6.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_4.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
***  Proved C1:  ada__characters__handling__to_upper(element(s, [endidx])) >= 
          character__first
     using hypothesis H19.
***  Proved C2:  ada__characters__handling__to_upper(element(s, [endidx])) <= 
          character__last
     using hypothesis H20.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_5.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          rr_type__linelengthindex__last -> character__first <= element(s, [
          i___1]) and element(s, [i___1]) <= character__last)
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New C1:  endidx - begidx >= 0
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 
          character__first <= element(s, [i___1]) and element(s, [i___1]) <= 
          character__last)
<S>  New C2:  endidx - begidx <= 255
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New C3:  endidx - begidx >= - 2147483648
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New C4:  endidx - begidx <= 2147483647
***  Proved C1:  endidx - begidx >= 0
     using hypothesis H1.
***  Proved C2:  endidx - begidx <= 255
     using hypotheses H3 & H6.
***  Proved C3:  endidx - begidx >= - 2147483648
     using hypothesis H1.
***  Proved C4:  endidx - begidx <= 2147483647
     using hypotheses H3 & H6.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_6.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New C1:  endidx >= - 2147483646
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New C2:  endidx <= 2147483649
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          rr_type__linelengthindex__last -> 0 <= element(s, [i___1]) and 
          element(s, [i___1]) <= 255)
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
***  Proved C1:  endidx >= - 2147483646
     using hypothesis H5.
***  Proved C2:  endidx <= 2147483649
     using hypothesis H6.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_7.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C3:  begidx + 1 >= rr_type__linelengthindex__first
     using hypothesis H3.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New C1:  element(s, [begidx + 1]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 1]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 255
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New C5:  begidx >= - 2147483649
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New C6:  begidx <= 2147483646
***  Proved C1:  element(s, [begidx + 1]) >= 0
     using hypotheses H2, H3, H6 & H61.
***  Proved C2:  element(s, [begidx + 1]) <= 255
     using hypotheses H2, H3, H6 & H61.
***  Proved C4:  begidx <= 255
     using hypotheses H6 & H61.
***  Proved C6:  begidx <= 2147483646
     using hypothesis H4.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
***  Proved C5:  begidx >= - 2147483649
     using hypothesis H3.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_8.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C1:  endidx - 2 >= integer__base__first
     using hypothesis H57.
***  Proved C2:  endidx - 2 <= integer__base__last
     using hypothesis H58.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_9.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
***  Proved C3:  begidx + 1 >= rr_type__linelengthindex__first
     using hypothesis H3.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New C1:  element(s, [begidx + 1]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 1]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 255
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New C5:  begidx >= - 2147483649
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New C6:  begidx <= 2147483646
***  Proved C1:  element(s, [begidx + 1]) >= 0
     using hypotheses H2, H3, H6 & H68.
***  Proved C2:  element(s, [begidx + 1]) <= 255
     using hypotheses H2, H3, H6 & H68.
***  Proved C4:  begidx <= 255
     using hypotheses H6 & H68.
***  Proved C6:  begidx <= 2147483646
     using hypothesis H4.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H59 into:
     >>>  H59:  ada__characters__handling__to_upper(element(s, [begidx])) <> 80 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 82 
          or endidx - 2 < begidx)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
***  Proved C5:  begidx >= - 2147483649
     using hypothesis H3.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_10.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C1:  endidx - 2 >= integer__base__first
     using hypothesis H57.
***  Proved C2:  endidx - 2 <= integer__base__last
     using hypothesis H58.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_11.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
***  Proved C3:  begidx + 1 >= rr_type__linelengthindex__first
     using hypothesis H3.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New C1:  element(s, [begidx + 1]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 1]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 255
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New C5:  begidx >= - 2147483649
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New C6:  begidx <= 2147483646
***  Proved C1:  element(s, [begidx + 1]) >= 0
     using hypotheses H2, H3, H6 & H75.
***  Proved C2:  element(s, [begidx + 1]) <= 255
     using hypotheses H2, H3, H6 & H75.
***  Proved C4:  begidx <= 255
     using hypotheses H6 & H75.
***  Proved C6:  begidx <= 2147483646
     using hypothesis H4.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H59 into:
     >>>  H59:  ada__characters__handling__to_upper(element(s, [begidx])) <> 80 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 82 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H66 into:
     >>>  H66:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 2 < begidx)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
***  Proved C5:  begidx >= - 2147483649
     using hypothesis H3.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_12.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C1:  endidx - 2 >= integer__base__first
     using hypothesis H57.
***  Proved C2:  endidx - 2 <= integer__base__last
     using hypothesis H58.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_13.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
***  Proved C3:  begidx + 1 >= rr_type__linelengthindex__first
     using hypothesis H3.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New C1:  element(s, [begidx + 1]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 1]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 255
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New C5:  begidx >= - 2147483649
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New C6:  begidx <= 2147483646
***  Proved C1:  element(s, [begidx + 1]) >= 0
     using hypotheses H2, H3, H6 & H82.
***  Proved C2:  element(s, [begidx + 1]) <= 255
     using hypotheses H2, H3, H6 & H82.
***  Proved C4:  begidx <= 255
     using hypotheses H6 & H82.
***  Proved C6:  begidx <= 2147483646
     using hypothesis H4.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H59 into:
     >>>  H59:  ada__characters__handling__to_upper(element(s, [begidx])) <> 80 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 82 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H66 into:
     >>>  H66:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H73 into:
     >>>  H73:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 86 
          or endidx - 2 < begidx)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
***  Proved C5:  begidx >= - 2147483649
     using hypothesis H3.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_14.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New C1:  endidx >= - 2147483645
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New C2:  endidx <= 2147483650
***  Proved C2:  endidx <= 2147483650
     using hypothesis H58.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H59 into:
     >>>  H59:  ada__characters__handling__to_upper(element(s, [begidx])) <> 80 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 82 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H66 into:
     >>>  H66:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H73 into:
     >>>  H73:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 86 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H80 into:
     >>>  H80:  ada__characters__handling__to_upper(element(s, [begidx])) <> 84 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 84 
          or endidx - 2 < begidx)
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          rr_type__linelengthindex__last -> 0 <= element(s, [i___1]) and 
          element(s, [i___1]) <= 255)
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
***  Proved C1:  endidx >= - 2147483645
     using hypothesis H5.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_15.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C3:  begidx + 1 >= rr_type__linelengthindex__first
     using hypothesis H3.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New C1:  element(s, [begidx + 1]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 1]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 255
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New H85:  endidx >= - 2147483645
<S>  New C5:  begidx >= - 2147483649
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New C6:  begidx <= 2147483646
***  Proved C1:  element(s, [begidx + 1]) >= 0
     using hypotheses H2, H3, H6 & H89.
***  Proved C2:  element(s, [begidx + 1]) <= 255
     using hypotheses H2, H3, H6 & H89.
***  Proved C4:  begidx <= 255
     using hypotheses H6 & H89.
***  Proved C6:  begidx <= 2147483646
     using hypothesis H4.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H59 into:
     >>>  H59:  ada__characters__handling__to_upper(element(s, [begidx])) <> 80 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 82 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H66 into:
     >>>  H66:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H73 into:
     >>>  H73:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 86 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H80 into:
     >>>  H80:  ada__characters__handling__to_upper(element(s, [begidx])) <> 84 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 84 
          or endidx - 2 < begidx)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
***  Proved C5:  begidx >= - 2147483649
     using hypothesis H3.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_16.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C3:  begidx + 2 >= rr_type__linelengthindex__first
     using hypothesis H3.
***  Proved C5:  begidx + 2 >= integer__base__first
     using hypothesis H94.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New H90:  element(s, [begidx + 1]) >= 0
<S>  New H96:  ada__characters__handling__to_upper(element(s, [begidx + 1])) >= 
          0
<S>  New C1:  element(s, [begidx + 2]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H91:  element(s, [begidx + 1]) <= 255
<S>  New H97:  ada__characters__handling__to_upper(element(s, [begidx + 1])) <= 
          255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 2]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H93:  begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 254
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H95:  begidx <= 2147483646
<S>  New C6:  begidx <= 2147483645
***  Proved C1:  element(s, [begidx + 2]) >= 0
     using hypotheses H2, H6, H89 & H92.
***  Proved C2:  element(s, [begidx + 2]) <= 255
     using hypotheses H2, H6, H89 & H92.
***  Proved C4:  begidx <= 254
     using hypotheses H6 & H89.
***  Proved C6:  begidx <= 2147483645
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_17.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C1:  endidx - 3 >= integer__base__first
     using hypothesis H85.
***  Proved C2:  endidx - 3 <= integer__base__last
     using hypothesis H86.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_18.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
***  Proved C3:  begidx + 1 >= rr_type__linelengthindex__first
     using hypothesis H3.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New C1:  element(s, [begidx + 1]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 1]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 255
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New H85:  endidx >= - 2147483645
<S>  New C5:  begidx >= - 2147483649
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New C6:  begidx <= 2147483646
***  Proved C1:  element(s, [begidx + 1]) >= 0
     using hypotheses H2, H3, H6 & H96.
***  Proved C2:  element(s, [begidx + 1]) <= 255
     using hypotheses H2, H3, H6 & H96.
***  Proved C4:  begidx <= 255
     using hypotheses H6 & H96.
***  Proved C6:  begidx <= 2147483646
     using hypothesis H4.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H59 into:
     >>>  H59:  ada__characters__handling__to_upper(element(s, [begidx])) <> 80 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 82 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H66 into:
     >>>  H66:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H73 into:
     >>>  H73:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 86 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H80 into:
     >>>  H80:  ada__characters__handling__to_upper(element(s, [begidx])) <> 84 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 84 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H87 into:
     >>>  H87:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 3 < begidx)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
***  Proved C5:  begidx >= - 2147483649
     using hypothesis H3.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_19.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
***  Proved C3:  begidx + 2 >= rr_type__linelengthindex__first
     using hypothesis H3.
***  Proved C5:  begidx + 2 >= integer__base__first
     using hypothesis H101.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New H97:  element(s, [begidx + 1]) >= 0
<S>  New H103:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          >= 0
<S>  New C1:  element(s, [begidx + 2]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H98:  element(s, [begidx + 1]) <= 255
<S>  New H104:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 2]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H100:  begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 254
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H102:  begidx <= 2147483646
<S>  New C6:  begidx <= 2147483645
***  Proved C1:  element(s, [begidx + 2]) >= 0
     using hypotheses H2, H6, H96 & H99.
***  Proved C2:  element(s, [begidx + 2]) <= 255
     using hypotheses H2, H6, H96 & H99.
***  Proved C4:  begidx <= 254
     using hypotheses H6 & H96.
***  Proved C6:  begidx <= 2147483645
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_20.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New H85:  endidx >= - 2147483645
<S>  New C1:  endidx >= - 2147483644
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New C2:  endidx <= 2147483651
***  Proved C2:  endidx <= 2147483651
     using hypothesis H58.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H59 into:
     >>>  H59:  ada__characters__handling__to_upper(element(s, [begidx])) <> 80 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 82 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H66 into:
     >>>  H66:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H73 into:
     >>>  H73:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 86 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H80 into:
     >>>  H80:  ada__characters__handling__to_upper(element(s, [begidx])) <> 84 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 84 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H87 into:
     >>>  H87:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 3 < begidx)
>>>  Restructured hypothesis H94 into:
     >>>  H94:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 67 
          or endidx - 3 < begidx)
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          rr_type__linelengthindex__last -> 0 <= element(s, [i___1]) and 
          element(s, [i___1]) <= 255)
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
***  Proved C1:  endidx >= - 2147483644
     using hypothesis H5.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_21.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C3:  begidx + 1 >= rr_type__linelengthindex__first
     using hypothesis H3.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New C1:  element(s, [begidx + 1]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 1]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 255
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New H85:  endidx >= - 2147483645
<S>  New H99:  endidx >= - 2147483644
<S>  New C5:  begidx >= - 2147483649
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H100:  endidx <= 2147483651
<S>  New C6:  begidx <= 2147483646
***  Proved C1:  element(s, [begidx + 1]) >= 0
     using hypotheses H2, H3, H6 & H103.
***  Proved C2:  element(s, [begidx + 1]) <= 255
     using hypotheses H2, H3, H6 & H103.
***  Proved C4:  begidx <= 255
     using hypotheses H6 & H103.
***  Proved C6:  begidx <= 2147483646
     using hypothesis H4.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H59 into:
     >>>  H59:  ada__characters__handling__to_upper(element(s, [begidx])) <> 80 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 82 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H66 into:
     >>>  H66:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H73 into:
     >>>  H73:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 86 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H80 into:
     >>>  H80:  ada__characters__handling__to_upper(element(s, [begidx])) <> 84 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 84 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H87 into:
     >>>  H87:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 3 < begidx)
>>>  Restructured hypothesis H94 into:
     >>>  H94:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 67 
          or endidx - 3 < begidx)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
***  Proved C5:  begidx >= - 2147483649
     using hypothesis H3.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_22.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C3:  begidx + 2 >= rr_type__linelengthindex__first
     using hypothesis H3.
***  Proved C5:  begidx + 2 >= integer__base__first
     using hypothesis H108.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New H104:  element(s, [begidx + 1]) >= 0
<S>  New H110:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          >= 0
<S>  New C1:  element(s, [begidx + 2]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H105:  element(s, [begidx + 1]) <= 255
<S>  New H111:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 2]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H107:  begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 254
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H100:  endidx <= 2147483651
<S>  New H109:  begidx <= 2147483646
<S>  New C6:  begidx <= 2147483645
***  Proved C1:  element(s, [begidx + 2]) >= 0
     using hypotheses H2, H6, H103 & H106.
***  Proved C2:  element(s, [begidx + 2]) <= 255
     using hypotheses H2, H6, H103 & H106.
***  Proved C4:  begidx <= 254
     using hypotheses H6 & H103.
***  Proved C6:  begidx <= 2147483645
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_23.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C3:  begidx + 3 >= rr_type__linelengthindex__first
     using hypothesis H3.
***  Proved C5:  begidx + 3 >= integer__base__first
     using hypothesis H108.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New H104:  element(s, [begidx + 1]) >= 0
<S>  New H110:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          >= 0
<S>  New H112:  element(s, [begidx + 2]) >= 0
<S>  New H118:  ada__characters__handling__to_upper(element(s, [begidx + 2])) 
          >= 0
<S>  New C1:  element(s, [begidx + 3]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H105:  element(s, [begidx + 1]) <= 255
<S>  New H111:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          <= 255
<S>  New H113:  element(s, [begidx + 2]) <= 255
<S>  New H119:  ada__characters__handling__to_upper(element(s, [begidx + 2])) 
          <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 3]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H107:  begidx <= 255
<S>  New H115:  begidx <= 254
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 253
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H100:  endidx <= 2147483651
<S>  New H109:  begidx <= 2147483646
<S>  New H117:  begidx <= 2147483645
<S>  New C6:  begidx <= 2147483644
***  Proved C1:  element(s, [begidx + 3]) >= 0
     using hypotheses H2, H6, H103 & H106.
***  Proved C2:  element(s, [begidx + 3]) <= 255
     using hypotheses H2, H6, H103 & H106.
***  Proved C4:  begidx <= 253
     using hypotheses H6 & H103.
***  Proved C6:  begidx <= 2147483644
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_24.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H102 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H103 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H104 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H105 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C1:  endidx - 4 >= integer__base__first
     using hypothesis H99.
***  Proved C2:  endidx - 4 <= integer__base__last
     using hypothesis H100.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_25.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H102 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H103 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H104 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H105 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H106 has been replaced by "true".  (It is already present, as 
          H99).
---  Hypothesis H107 has been replaced by "true".  (It is already present, as 
          H100).
***  Proved C3:  begidx + 1 >= rr_type__linelengthindex__first
     using hypothesis H3.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New C1:  element(s, [begidx + 1]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 1]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 255
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New H85:  endidx >= - 2147483645
<S>  New H99:  endidx >= - 2147483644
<S>  New C5:  begidx >= - 2147483649
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H100:  endidx <= 2147483651
<S>  New C6:  begidx <= 2147483646
***  Proved C1:  element(s, [begidx + 1]) >= 0
     using hypotheses H2, H3, H6 & H110.
***  Proved C2:  element(s, [begidx + 1]) <= 255
     using hypotheses H2, H3, H6 & H110.
***  Proved C4:  begidx <= 255
     using hypotheses H6 & H110.
***  Proved C6:  begidx <= 2147483646
     using hypothesis H4.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H59 into:
     >>>  H59:  ada__characters__handling__to_upper(element(s, [begidx])) <> 80 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 82 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H66 into:
     >>>  H66:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H73 into:
     >>>  H73:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 86 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H80 into:
     >>>  H80:  ada__characters__handling__to_upper(element(s, [begidx])) <> 84 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 84 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H87 into:
     >>>  H87:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 3 < begidx)
>>>  Restructured hypothesis H94 into:
     >>>  H94:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 67 
          or endidx - 3 < begidx)
>>>  Restructured hypothesis H101 into:
     >>>  H101:  ada__characters__handling__to_upper(element(s, [begidx])) <> 
          67 or (ada__characters__handling__to_upper(element(s, [endidx])) <> 
          69 or endidx - 4 < begidx)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
***  Proved C5:  begidx >= - 2147483649
     using hypothesis H3.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_26.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H102 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H103 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H104 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H105 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H106 has been replaced by "true".  (It is already present, as 
          H99).
---  Hypothesis H107 has been replaced by "true".  (It is already present, as 
          H100).
***  Proved C3:  begidx + 2 >= rr_type__linelengthindex__first
     using hypothesis H3.
***  Proved C5:  begidx + 2 >= integer__base__first
     using hypothesis H115.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New H111:  element(s, [begidx + 1]) >= 0
<S>  New H117:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          >= 0
<S>  New C1:  element(s, [begidx + 2]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H112:  element(s, [begidx + 1]) <= 255
<S>  New H118:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 2]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H114:  begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 254
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H100:  endidx <= 2147483651
<S>  New H116:  begidx <= 2147483646
<S>  New C6:  begidx <= 2147483645
***  Proved C1:  element(s, [begidx + 2]) >= 0
     using hypotheses H2, H6, H110 & H113.
***  Proved C2:  element(s, [begidx + 2]) <= 255
     using hypotheses H2, H6, H110 & H113.
***  Proved C4:  begidx <= 254
     using hypotheses H6 & H110.
***  Proved C6:  begidx <= 2147483645
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_27.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H102 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H103 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H104 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H105 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H106 has been replaced by "true".  (It is already present, as 
          H99).
---  Hypothesis H107 has been replaced by "true".  (It is already present, as 
          H100).
***  Proved C3:  begidx + 3 >= rr_type__linelengthindex__first
     using hypothesis H3.
***  Proved C5:  begidx + 3 >= integer__base__first
     using hypothesis H115.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New H111:  element(s, [begidx + 1]) >= 0
<S>  New H117:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          >= 0
<S>  New H119:  element(s, [begidx + 2]) >= 0
<S>  New H125:  ada__characters__handling__to_upper(element(s, [begidx + 2])) 
          >= 0
<S>  New C1:  element(s, [begidx + 3]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H112:  element(s, [begidx + 1]) <= 255
<S>  New H118:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          <= 255
<S>  New H120:  element(s, [begidx + 2]) <= 255
<S>  New H126:  ada__characters__handling__to_upper(element(s, [begidx + 2])) 
          <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 3]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H114:  begidx <= 255
<S>  New H122:  begidx <= 254
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 253
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H100:  endidx <= 2147483651
<S>  New H116:  begidx <= 2147483646
<S>  New H124:  begidx <= 2147483645
<S>  New C6:  begidx <= 2147483644
***  Proved C1:  element(s, [begidx + 3]) >= 0
     using hypotheses H2, H6, H110 & H113.
***  Proved C2:  element(s, [begidx + 3]) <= 255
     using hypotheses H2, H6, H110 & H113.
***  Proved C4:  begidx <= 253
     using hypotheses H6 & H110.
***  Proved C6:  begidx <= 2147483644
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_28.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H102 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H103 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H104 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H105 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H106 has been replaced by "true".  (It is already present, as 
          H99).
---  Hypothesis H107 has been replaced by "true".  (It is already present, as 
          H100).
---  Hypothesis H109 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H110 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H111 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H112 has been replaced by "true".  (It is already present, as 
          H20).
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New H85:  endidx >= - 2147483645
<S>  New H99:  endidx >= - 2147483644
<S>  New C1:  endidx >= - 2147483643
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H100:  endidx <= 2147483651
<S>  New C2:  endidx <= 2147483652
***  Proved C2:  endidx <= 2147483652
     using hypothesis H58.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H59 into:
     >>>  H59:  ada__characters__handling__to_upper(element(s, [begidx])) <> 80 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 82 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H66 into:
     >>>  H66:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H73 into:
     >>>  H73:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 86 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H80 into:
     >>>  H80:  ada__characters__handling__to_upper(element(s, [begidx])) <> 84 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 84 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H87 into:
     >>>  H87:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 3 < begidx)
>>>  Restructured hypothesis H94 into:
     >>>  H94:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 67 
          or endidx - 3 < begidx)
>>>  Restructured hypothesis H101 into:
     >>>  H101:  ada__characters__handling__to_upper(element(s, [begidx])) <> 
          67 or (ada__characters__handling__to_upper(element(s, [endidx])) <> 
          69 or endidx - 4 < begidx)
>>>  Restructured hypothesis H108 into:
     >>>  H108:  ada__characters__handling__to_upper(element(s, [begidx])) <> 
          82 or (ada__characters__handling__to_upper(element(s, [endidx])) <> 
          71 or endidx - 4 < begidx)
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          rr_type__linelengthindex__last -> 0 <= element(s, [i___1]) and 
          element(s, [i___1]) <= 255)
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
***  Proved C1:  endidx >= - 2147483643
     using hypothesis H5.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_29.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H102 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H103 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H104 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H105 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H106 has been replaced by "true".  (It is already present, as 
          H99).
---  Hypothesis H107 has been replaced by "true".  (It is already present, as 
          H100).
---  Hypothesis H109 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H110 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H111 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H112 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C3:  begidx + 1 >= rr_type__linelengthindex__first
     using hypothesis H3.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New C1:  element(s, [begidx + 1]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 1]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 255
-S-  Applied substitution rule isrecord_rules(4).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H25:  endidx - begidx >= - 2147483648
<S>  New H57:  endidx >= - 2147483646
<S>  New H85:  endidx >= - 2147483645
<S>  New H99:  endidx >= - 2147483644
<S>  New H113:  endidx >= - 2147483643
<S>  New C5:  begidx >= - 2147483649
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H100:  endidx <= 2147483651
<S>  New H114:  endidx <= 2147483652
<S>  New C6:  begidx <= 2147483646
***  Proved C1:  element(s, [begidx + 1]) >= 0
     using hypotheses H2, H3, H6 & H117.
***  Proved C2:  element(s, [begidx + 1]) <= 255
     using hypotheses H2, H3, H6 & H117.
***  Proved C4:  begidx <= 255
     using hypotheses H6 & H117.
***  Proved C6:  begidx <= 2147483646
     using hypothesis H4.
>>>  Restructured hypothesis H31 into:
     >>>  H31:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or endidx - begidx <> 0
>>>  Restructured hypothesis H38 into:
     >>>  H38:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 83 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H45 into:
     >>>  H45:  ada__characters__handling__to_upper(element(s, [begidx])) <> 77 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 88 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H52 into:
     >>>  H52:  ada__characters__handling__to_upper(element(s, [begidx])) <> 82 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 80 
          or endidx - begidx <> 1)
>>>  Restructured hypothesis H59 into:
     >>>  H59:  ada__characters__handling__to_upper(element(s, [begidx])) <> 80 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 82 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H66 into:
     >>>  H66:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H73 into:
     >>>  H73:  ada__characters__handling__to_upper(element(s, [begidx])) <> 83 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 86 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H80 into:
     >>>  H80:  ada__characters__handling__to_upper(element(s, [begidx])) <> 84 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 84 
          or endidx - 2 < begidx)
>>>  Restructured hypothesis H87 into:
     >>>  H87:  ada__characters__handling__to_upper(element(s, [begidx])) <> 65 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 65 
          or endidx - 3 < begidx)
>>>  Restructured hypothesis H94 into:
     >>>  H94:  ada__characters__handling__to_upper(element(s, [begidx])) <> 78 
          or (ada__characters__handling__to_upper(element(s, [endidx])) <> 67 
          or endidx - 3 < begidx)
>>>  Restructured hypothesis H101 into:
     >>>  H101:  ada__characters__handling__to_upper(element(s, [begidx])) <> 
          67 or (ada__characters__handling__to_upper(element(s, [endidx])) <> 
          69 or endidx - 4 < begidx)
>>>  Restructured hypothesis H108 into:
     >>>  H108:  ada__characters__handling__to_upper(element(s, [begidx])) <> 
          82 or (ada__characters__handling__to_upper(element(s, [endidx])) <> 
          71 or endidx - 4 < begidx)
-S-  Applied substitution rule isrecord_rules(17).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 256 -> 0 <= 
          element(s, [i___1]) and element(s, [i___1]) <= 255)
<S>  New H3:  begidx >= 1
<S>  New H5:  endidx >= 1
<S>  New H23:  endidx - begidx >= 0
***  Proved C5:  begidx >= - 2147483649
     using hypothesis H3.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_30.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H102 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H103 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H104 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H105 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H106 has been replaced by "true".  (It is already present, as 
          H99).
---  Hypothesis H107 has been replaced by "true".  (It is already present, as 
          H100).
---  Hypothesis H109 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H110 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H111 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H112 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C3:  begidx + 2 >= rr_type__linelengthindex__first
     using hypothesis H3.
***  Proved C5:  begidx + 2 >= integer__base__first
     using hypothesis H122.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New H118:  element(s, [begidx + 1]) >= 0
<S>  New H124:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          >= 0
<S>  New C1:  element(s, [begidx + 2]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H119:  element(s, [begidx + 1]) <= 255
<S>  New H125:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 2]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H121:  begidx <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 254
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H100:  endidx <= 2147483651
<S>  New H114:  endidx <= 2147483652
<S>  New H123:  begidx <= 2147483646
<S>  New C6:  begidx <= 2147483645
***  Proved C1:  element(s, [begidx + 2]) >= 0
     using hypotheses H2, H6, H117 & H120.
***  Proved C2:  element(s, [begidx + 2]) <= 255
     using hypotheses H2, H6, H117 & H120.
***  Proved C4:  begidx <= 254
     using hypotheses H6 & H117.
***  Proved C6:  begidx <= 2147483645
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_31.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H102 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H103 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H104 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H105 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H106 has been replaced by "true".  (It is already present, as 
          H99).
---  Hypothesis H107 has been replaced by "true".  (It is already present, as 
          H100).
---  Hypothesis H109 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H110 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H111 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H112 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C3:  begidx + 3 >= rr_type__linelengthindex__first
     using hypothesis H3.
***  Proved C5:  begidx + 3 >= integer__base__first
     using hypothesis H122.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New H118:  element(s, [begidx + 1]) >= 0
<S>  New H124:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          >= 0
<S>  New H126:  element(s, [begidx + 2]) >= 0
<S>  New H132:  ada__characters__handling__to_upper(element(s, [begidx + 2])) 
          >= 0
<S>  New C1:  element(s, [begidx + 3]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H119:  element(s, [begidx + 1]) <= 255
<S>  New H125:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          <= 255
<S>  New H127:  element(s, [begidx + 2]) <= 255
<S>  New H133:  ada__characters__handling__to_upper(element(s, [begidx + 2])) 
          <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 3]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H121:  begidx <= 255
<S>  New H129:  begidx <= 254
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 253
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H100:  endidx <= 2147483651
<S>  New H114:  endidx <= 2147483652
<S>  New H123:  begidx <= 2147483646
<S>  New H131:  begidx <= 2147483645
<S>  New C6:  begidx <= 2147483644
***  Proved C1:  element(s, [begidx + 3]) >= 0
     using hypotheses H2, H6, H117 & H120.
***  Proved C2:  element(s, [begidx + 3]) <= 255
     using hypotheses H2, H6, H117 & H120.
***  Proved C4:  begidx <= 253
     using hypotheses H6 & H117.
***  Proved C6:  begidx <= 2147483644
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_32.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= 
          i___1 and i___1 <= rr_type__linelengthindex__last -> character__first 
          <= element(s, [i___1]) and element(s, [i___1]) <= character__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H3).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 65 and endidx - begidx = 0)
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H34 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 78 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          83 and endidx - begidx = 1))
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 77 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          88 and endidx - begidx = 1))
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified H52 on reading formula in, to give:
     %%%  H52:  not (ada__characters__handling__to_upper(element(s, [begidx])) 
          = 82 and (ada__characters__handling__to_upper(element(s, [endidx])) = 
          80 and endidx - begidx = 1))
---  Hypothesis H53 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H54 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H62 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H63 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H64 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H65 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H67 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H68 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H69 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H70 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H74 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H75 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H76 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H77 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H78 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H79 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H81 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H88 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H89 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H90 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H91 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H92 has been replaced by "true".  (It is already present, as 
          H85).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H86).
---  Hypothesis H95 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H96 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H97 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H98 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H102 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H103 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H104 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H105 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H106 has been replaced by "true".  (It is already present, as 
          H99).
---  Hypothesis H107 has been replaced by "true".  (It is already present, as 
          H100).
---  Hypothesis H109 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H110 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H111 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H112 has been replaced by "true".  (It is already present, as 
          H20).
***  Proved C3:  begidx + 4 >= rr_type__linelengthindex__first
     using hypothesis H3.
***  Proved C5:  begidx + 4 >= integer__base__first
     using hypothesis H122.
-S-  Applied substitution rule isrecord_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= character__last)
<S>  New H7:  element(s, [begidx]) >= 0
<S>  New H11:  ada__characters__handling__to_upper(element(s, [begidx])) >= 0
<S>  New H15:  element(s, [endidx]) >= 0
<S>  New H19:  ada__characters__handling__to_upper(element(s, [endidx])) >= 0
<S>  New H118:  element(s, [begidx + 1]) >= 0
<S>  New H124:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          >= 0
<S>  New H126:  element(s, [begidx + 2]) >= 0
<S>  New H132:  ada__characters__handling__to_upper(element(s, [begidx + 2])) 
          >= 0
<S>  New H134:  element(s, [begidx + 3]) >= 0
<S>  New H140:  ada__characters__handling__to_upper(element(s, [begidx + 3])) 
          >= 0
<S>  New C1:  element(s, [begidx + 4]) >= 0
-S-  Applied substitution rule isrecord_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  element(s, [begidx]) <= 255
<S>  New H12:  ada__characters__handling__to_upper(element(s, [begidx])) <= 255
<S>  New H16:  element(s, [endidx]) <= 255
<S>  New H20:  ada__characters__handling__to_upper(element(s, [endidx])) <= 255
<S>  New H119:  element(s, [begidx + 1]) <= 255
<S>  New H125:  ada__characters__handling__to_upper(element(s, [begidx + 1])) 
          <= 255
<S>  New H127:  element(s, [begidx + 2]) <= 255
<S>  New H133:  ada__characters__handling__to_upper(element(s, [begidx + 2])) 
          <= 255
<S>  New H135:  element(s, [begidx + 3]) <= 255
<S>  New H141:  ada__characters__handling__to_upper(element(s, [begidx + 3])) 
          <= 255
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= rr_type__linelengthindex__last -> 0 <= element(s, [i___1]
          ) and element(s, [i___1]) <= 255)
<S>  New C2:  element(s, [begidx + 4]) <= 255
-S-  Applied substitution rule isrecord_rules(18).
     This was achieved by replacing all occurrences of 
          rr_type__linelengthindex__last by:
          256.
<S>  New H4:  begidx <= 256
<S>  New H6:  endidx <= 256
<S>  New H24:  endidx - begidx <= 255
<S>  New H121:  begidx <= 255
<S>  New H129:  begidx <= 254
<S>  New H137:  begidx <= 253
<S>  New H2:  for_all(i___1 : integer, rr_type__linelengthindex__first <= i___1 
          and i___1 <= 256 -> 0 <= element(s, [i___1]) and element(s, [i___1]) 
          <= 255)
<S>  New C4:  begidx <= 252
-S-  Applied substitution rule isrecord_rules(5).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H26:  endidx - begidx <= 2147483647
<S>  New H58:  endidx <= 2147483649
<S>  New H86:  endidx <= 2147483650
<S>  New H100:  endidx <= 2147483651
<S>  New H114:  endidx <= 2147483652
<S>  New H123:  begidx <= 2147483646
<S>  New H131:  begidx <= 2147483645
<S>  New H139:  begidx <= 2147483644
<S>  New C6:  begidx <= 2147483643
***  Proved C1:  element(s, [begidx + 4]) >= 0
     using hypotheses H2, H6, H117 & H120.
***  Proved C2:  element(s, [begidx + 4]) <= 255
     using hypotheses H2, H6, H117 & H120.
***  Proved C4:  begidx <= 252
     using hypotheses H6 & H117.
***  Proved C6:  begidx <= 2147483643
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_33.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_34.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_35.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_36.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_37.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_38.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_39.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_40.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_41.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_42.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_43.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_44.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_45.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_46.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_47.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_48.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_49.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_50.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_51.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_52.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_53.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_54.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_isrecord_55.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.

