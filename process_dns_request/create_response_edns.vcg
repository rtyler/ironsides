           *******************************************************
                       Semantic Analysis of SPARK Text
                             Examiner GPL Edition

           *******************************************************


             procedure Process_Dns_Request.Create_Response_EDNS




For path(s) from start to run-time check associated with statement of line 725:

procedure_create_response_edns_1.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
        ->
C1:    dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
C2:    dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
 

For path(s) from start to run-time check associated with statement of line 726:

procedure_create_response_edns_2.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
        ->
C1:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C2:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C3:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C4:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C5:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
C6:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
C7:    dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
C8:    dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
C9:    dns_types__header_bits div 8 >= system__min_int .
C10:   dns_types__header_bits div 8 <= system__max_int .
C11:   8 <> 0 .
 

For path(s) from start to run-time check associated with statement of line 729:

procedure_create_response_edns_3.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
        ->
C1:    start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
C2:    start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
C3:    dns_types__header_bits div 8 >= system__min_int .
C4:    dns_types__header_bits div 8 <= system__max_int .
C5:    8 <> 0 .
C6:    start_byte + 11 >= integer__base__first .
C7:    start_byte + 11 <= integer__base__last .
C8:    start_byte >= integer__first .
C9:    start_byte <= integer__last .
C10:   input_bytes >= integer__first .
C11:   input_bytes <= integer__last .
C12:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
C13:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
C14:   dns_types__header_bits div 8 >= system__min_int .
C15:   dns_types__header_bits div 8 <= system__max_int .
C16:   8 <> 0 .
C17:   query_end_byte + 11 >= integer__base__first .
C18:   query_end_byte + 11 <= integer__base__last .
C19:   query_end_byte >= integer__first .
C20:   query_end_byte <= integer__last .
 

For path(s) from start to run-time check associated with statement of line 731:

procedure_create_response_edns_4.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
        ->
C1:    element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
C2:    element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
C3:    element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
C4:    element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
C5:    query_end_byte + 1 >= dns_types__packet_bytes_range__first .
C6:    query_end_byte + 1 <= dns_types__packet_bytes_range__last .
C7:    query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
C8:    query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 732:

procedure_create_response_edns_5.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
C2:    element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
C3:    element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
C4:    element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
C5:    query_end_byte + 3 >= dns_types__packet_bytes_range__first .
C6:    query_end_byte + 3 <= dns_types__packet_bytes_range__last .
C7:    query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
C8:    query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
C9:    element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
C10:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
C11:   element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
C12:   element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
C13:   query_end_byte + 2 >= dns_types__packet_bytes_range__first .
C14:   query_end_byte + 2 <= dns_types__packet_bytes_range__last .
C15:   query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
C16:   query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 735:

procedure_create_response_edns_6.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    0 >= character__first .
C2:    0 <= character__last .
 

For path(s) from start to run-time check associated with statement of line 737:

procedure_create_response_edns_7.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
        ->
C1:    element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
C2:    element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
C3:    element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
C4:    element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
C5:    query_end_byte + 5 >= dns_types__packet_bytes_range__first .
C6:    query_end_byte + 5 <= dns_types__packet_bytes_range__last .
C7:    query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
C8:    query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
C9:    element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
C10:   element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
C11:   element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
C12:   element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
C13:   query_end_byte + 4 >= dns_types__packet_bytes_range__first .
C14:   query_end_byte + 4 <= dns_types__packet_bytes_range__last .
C15:   query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
C16:   query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 742:

procedure_create_response_edns_8.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
C2:    element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
C3:    query_end_byte + 8 >= dns_types__packet_bytes_range__first .
C4:    query_end_byte + 8 <= dns_types__packet_bytes_range__last .
C5:    query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
C6:    query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 747:

procedure_create_response_edns_9.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
C2:    dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
C3:    dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
C4:    dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
 

For path(s) from start to run-time check associated with statement of line 750:

procedure_create_response_edns_10.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
        ->
C1:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
C2:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
 

For path(s) from start to run-time check associated with statement of line 753:

procedure_create_response_edns_11.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 1 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 1 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 1 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 1 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 755:

procedure_create_response_edns_12.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 2 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 2 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 2 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 2 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 756:

procedure_create_response_edns_13.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    start_byte + 3 >= dns_types__packet_bytes_range__first .
C2:    start_byte + 3 <= dns_types__packet_bytes_range__last .
C3:    start_byte + 3 >= dns_types__packet_bytes_range__base__first .
C4:    start_byte + 3 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 756:

procedure_create_response_edns_14.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
C2:    from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
C3:    from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
C4:    from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
C5:    from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
C6:    from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
C7:    256 <> 0 .
 

For path(s) from start to run-time check associated with statement of line 758:

procedure_create_response_edns_15.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
        ->
C1:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
C2:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
C3:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
C4:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
C5:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
C6:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
C7:    256 <> 0 .
C8:    start_byte + 4 >= dns_types__packet_bytes_range__first .
C9:    start_byte + 4 <= dns_types__packet_bytes_range__last .
C10:   start_byte + 4 >= dns_types__packet_bytes_range__base__first .
C11:   start_byte + 4 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 760:

procedure_create_response_edns_16.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
C2:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
C3:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
C4:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
C5:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
C6:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
C7:    256 <> 0 .
C8:    start_byte + 5 >= dns_types__packet_bytes_range__first .
C9:    start_byte + 5 <= dns_types__packet_bytes_range__last .
C10:   start_byte + 5 >= dns_types__packet_bytes_range__base__first .
C11:   start_byte + 5 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 762:

procedure_create_response_edns_17.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 6 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 6 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 6 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 6 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 763:

procedure_create_response_edns_18.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 7 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 7 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 7 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 7 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 766:

procedure_create_response_edns_19.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0 .
        ->
C1:    dns_types__dnssecmask >= dns_types__byte__first .
C2:    dns_types__dnssecmask <= dns_types__byte__last .
C3:    start_byte + 8 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 8 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 8 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 8 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 769:

procedure_create_response_edns_20.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  not (bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(
           upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0) .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 8 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 8 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 8 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 8 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 771:

procedure_create_response_edns_21.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0 .
H205:  dns_types__dnssecmask >= dns_types__byte__first .
H206:  dns_types__dnssecmask <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 9 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 9 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 9 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 9 <= dns_types__packet_bytes_range__base__last .
 

procedure_create_response_edns_22.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  not (bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(
           upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0) .
H205:  0 >= dns_types__byte__first .
H206:  0 <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 9 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 9 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 9 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 9 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 773:

procedure_create_response_edns_23.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0 .
H205:  dns_types__dnssecmask >= dns_types__byte__first .
H206:  dns_types__dnssecmask <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
H211:  0 >= dns_types__byte__first .
H212:  0 <= dns_types__byte__last .
H213:  start_byte + 9 >= dns_types__packet_bytes_range__first .
H214:  start_byte + 9 <= dns_types__packet_bytes_range__last .
H215:  start_byte + 9 >= dns_types__packet_bytes_range__base__first .
H216:  start_byte + 9 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 10 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 10 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 10 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 10 <= dns_types__packet_bytes_range__base__last .
 

procedure_create_response_edns_24.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  not (bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(
           upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0) .
H205:  0 >= dns_types__byte__first .
H206:  0 <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
H211:  0 >= dns_types__byte__first .
H212:  0 <= dns_types__byte__last .
H213:  start_byte + 9 >= dns_types__packet_bytes_range__first .
H214:  start_byte + 9 <= dns_types__packet_bytes_range__last .
H215:  start_byte + 9 >= dns_types__packet_bytes_range__base__first .
H216:  start_byte + 9 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 10 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 10 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 10 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 10 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 774:

procedure_create_response_edns_25.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0 .
H205:  dns_types__dnssecmask >= dns_types__byte__first .
H206:  dns_types__dnssecmask <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
H211:  0 >= dns_types__byte__first .
H212:  0 <= dns_types__byte__last .
H213:  start_byte + 9 >= dns_types__packet_bytes_range__first .
H214:  start_byte + 9 <= dns_types__packet_bytes_range__last .
H215:  start_byte + 9 >= dns_types__packet_bytes_range__base__first .
H216:  start_byte + 9 <= dns_types__packet_bytes_range__base__last .
H217:  0 >= dns_types__byte__first .
H218:  0 <= dns_types__byte__last .
H219:  start_byte + 10 >= dns_types__packet_bytes_range__first .
H220:  start_byte + 10 <= dns_types__packet_bytes_range__last .
H221:  start_byte + 10 >= dns_types__packet_bytes_range__base__first .
H222:  start_byte + 10 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 11 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 11 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 11 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 11 <= dns_types__packet_bytes_range__base__last .
 

procedure_create_response_edns_26.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  not (bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(
           upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0) .
H205:  0 >= dns_types__byte__first .
H206:  0 <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
H211:  0 >= dns_types__byte__first .
H212:  0 <= dns_types__byte__last .
H213:  start_byte + 9 >= dns_types__packet_bytes_range__first .
H214:  start_byte + 9 <= dns_types__packet_bytes_range__last .
H215:  start_byte + 9 >= dns_types__packet_bytes_range__base__first .
H216:  start_byte + 9 <= dns_types__packet_bytes_range__base__last .
H217:  0 >= dns_types__byte__first .
H218:  0 <= dns_types__byte__last .
H219:  start_byte + 10 >= dns_types__packet_bytes_range__first .
H220:  start_byte + 10 <= dns_types__packet_bytes_range__last .
H221:  start_byte + 10 >= dns_types__packet_bytes_range__base__first .
H222:  start_byte + 10 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 11 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 11 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 11 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 11 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 776:

procedure_create_response_edns_27.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0 .
H205:  dns_types__dnssecmask >= dns_types__byte__first .
H206:  dns_types__dnssecmask <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
H211:  0 >= dns_types__byte__first .
H212:  0 <= dns_types__byte__last .
H213:  start_byte + 9 >= dns_types__packet_bytes_range__first .
H214:  start_byte + 9 <= dns_types__packet_bytes_range__last .
H215:  start_byte + 9 >= dns_types__packet_bytes_range__base__first .
H216:  start_byte + 9 <= dns_types__packet_bytes_range__base__last .
H217:  0 >= dns_types__byte__first .
H218:  0 <= dns_types__byte__last .
H219:  start_byte + 10 >= dns_types__packet_bytes_range__first .
H220:  start_byte + 10 <= dns_types__packet_bytes_range__last .
H221:  start_byte + 10 >= dns_types__packet_bytes_range__base__first .
H222:  start_byte + 10 <= dns_types__packet_bytes_range__base__last .
H223:  0 >= dns_types__byte__first .
H224:  0 <= dns_types__byte__last .
H225:  start_byte + 11 >= dns_types__packet_bytes_range__first .
H226:  start_byte + 11 <= dns_types__packet_bytes_range__last .
H227:  start_byte + 11 >= dns_types__packet_bytes_range__base__first .
H228:  start_byte + 11 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    additional_count + 1 >= dns_types__unsigned_short__first .
C2:    additional_count + 1 <= dns_types__unsigned_short__last .
 

procedure_create_response_edns_28.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  not (bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(
           upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0) .
H205:  0 >= dns_types__byte__first .
H206:  0 <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
H211:  0 >= dns_types__byte__first .
H212:  0 <= dns_types__byte__last .
H213:  start_byte + 9 >= dns_types__packet_bytes_range__first .
H214:  start_byte + 9 <= dns_types__packet_bytes_range__last .
H215:  start_byte + 9 >= dns_types__packet_bytes_range__base__first .
H216:  start_byte + 9 <= dns_types__packet_bytes_range__base__last .
H217:  0 >= dns_types__byte__first .
H218:  0 <= dns_types__byte__last .
H219:  start_byte + 10 >= dns_types__packet_bytes_range__first .
H220:  start_byte + 10 <= dns_types__packet_bytes_range__last .
H221:  start_byte + 10 >= dns_types__packet_bytes_range__base__first .
H222:  start_byte + 10 <= dns_types__packet_bytes_range__base__last .
H223:  0 >= dns_types__byte__first .
H224:  0 <= dns_types__byte__last .
H225:  start_byte + 11 >= dns_types__packet_bytes_range__first .
H226:  start_byte + 11 <= dns_types__packet_bytes_range__last .
H227:  start_byte + 11 >= dns_types__packet_bytes_range__base__first .
H228:  start_byte + 11 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    additional_count + 1 >= dns_types__unsigned_short__first .
C2:    additional_count + 1 <= dns_types__unsigned_short__last .
 

For path(s) from start to run-time check associated with statement of line 777:

procedure_create_response_edns_29.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0 .
H205:  dns_types__dnssecmask >= dns_types__byte__first .
H206:  dns_types__dnssecmask <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
H211:  0 >= dns_types__byte__first .
H212:  0 <= dns_types__byte__last .
H213:  start_byte + 9 >= dns_types__packet_bytes_range__first .
H214:  start_byte + 9 <= dns_types__packet_bytes_range__last .
H215:  start_byte + 9 >= dns_types__packet_bytes_range__base__first .
H216:  start_byte + 9 <= dns_types__packet_bytes_range__base__last .
H217:  0 >= dns_types__byte__first .
H218:  0 <= dns_types__byte__last .
H219:  start_byte + 10 >= dns_types__packet_bytes_range__first .
H220:  start_byte + 10 <= dns_types__packet_bytes_range__last .
H221:  start_byte + 10 >= dns_types__packet_bytes_range__base__first .
H222:  start_byte + 10 <= dns_types__packet_bytes_range__base__last .
H223:  0 >= dns_types__byte__first .
H224:  0 <= dns_types__byte__last .
H225:  start_byte + 11 >= dns_types__packet_bytes_range__first .
H226:  start_byte + 11 <= dns_types__packet_bytes_range__last .
H227:  start_byte + 11 >= dns_types__packet_bytes_range__base__first .
H228:  start_byte + 11 <= dns_types__packet_bytes_range__base__last .
H229:  additional_count + 1 >= dns_types__unsigned_short__first .
H230:  additional_count + 1 <= dns_types__unsigned_short__last .
        ->
C1:    start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C2:    start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C3:    start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C4:    start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C5:    start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
C6:    start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
C7:    dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
C8:    dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
C9:    dns_types__header_bits div 8 >= system__min_int .
C10:   dns_types__header_bits div 8 <= system__max_int .
C11:   8 <> 0 .
C12:   start_byte + 11 >= dns_types__packet_bytes_range__base__first .
C13:   start_byte + 11 <= dns_types__packet_bytes_range__base__last .
 

procedure_create_response_edns_30.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  not (bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(
           upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0) .
H205:  0 >= dns_types__byte__first .
H206:  0 <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
H211:  0 >= dns_types__byte__first .
H212:  0 <= dns_types__byte__last .
H213:  start_byte + 9 >= dns_types__packet_bytes_range__first .
H214:  start_byte + 9 <= dns_types__packet_bytes_range__last .
H215:  start_byte + 9 >= dns_types__packet_bytes_range__base__first .
H216:  start_byte + 9 <= dns_types__packet_bytes_range__base__last .
H217:  0 >= dns_types__byte__first .
H218:  0 <= dns_types__byte__last .
H219:  start_byte + 10 >= dns_types__packet_bytes_range__first .
H220:  start_byte + 10 <= dns_types__packet_bytes_range__last .
H221:  start_byte + 10 >= dns_types__packet_bytes_range__base__first .
H222:  start_byte + 10 <= dns_types__packet_bytes_range__base__last .
H223:  0 >= dns_types__byte__first .
H224:  0 <= dns_types__byte__last .
H225:  start_byte + 11 >= dns_types__packet_bytes_range__first .
H226:  start_byte + 11 <= dns_types__packet_bytes_range__last .
H227:  start_byte + 11 >= dns_types__packet_bytes_range__base__first .
H228:  start_byte + 11 <= dns_types__packet_bytes_range__base__last .
H229:  additional_count + 1 >= dns_types__unsigned_short__first .
H230:  additional_count + 1 <= dns_types__unsigned_short__last .
        ->
C1:    start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C2:    start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C3:    start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C4:    start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C5:    start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
C6:    start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
C7:    dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
C8:    dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
C9:    dns_types__header_bits div 8 >= system__min_int .
C10:   dns_types__header_bits div 8 <= system__max_int .
C11:   8 <> 0 .
C12:   start_byte + 11 >= dns_types__packet_bytes_range__base__first .
C13:   start_byte + 11 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to finish:

procedure_create_response_edns_31.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0 .
H205:  dns_types__dnssecmask >= dns_types__byte__first .
H206:  dns_types__dnssecmask <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
H211:  0 >= dns_types__byte__first .
H212:  0 <= dns_types__byte__last .
H213:  start_byte + 9 >= dns_types__packet_bytes_range__first .
H214:  start_byte + 9 <= dns_types__packet_bytes_range__last .
H215:  start_byte + 9 >= dns_types__packet_bytes_range__base__first .
H216:  start_byte + 9 <= dns_types__packet_bytes_range__base__last .
H217:  0 >= dns_types__byte__first .
H218:  0 <= dns_types__byte__last .
H219:  start_byte + 10 >= dns_types__packet_bytes_range__first .
H220:  start_byte + 10 <= dns_types__packet_bytes_range__last .
H221:  start_byte + 10 >= dns_types__packet_bytes_range__base__first .
H222:  start_byte + 10 <= dns_types__packet_bytes_range__base__last .
H223:  0 >= dns_types__byte__first .
H224:  0 <= dns_types__byte__last .
H225:  start_byte + 11 >= dns_types__packet_bytes_range__first .
H226:  start_byte + 11 <= dns_types__packet_bytes_range__last .
H227:  start_byte + 11 >= dns_types__packet_bytes_range__base__first .
H228:  start_byte + 11 <= dns_types__packet_bytes_range__base__last .
H229:  additional_count + 1 >= dns_types__unsigned_short__first .
H230:  additional_count + 1 <= dns_types__unsigned_short__last .
H231:  start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H232:  start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H233:  start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H234:  start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H235:  start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H236:  start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H237:  dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H238:  dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H239:  dns_types__header_bits div 8 >= system__min_int .
H240:  dns_types__header_bits div 8 <= system__max_int .
H241:  8 <> 0 .
H242:  start_byte + 11 >= dns_types__packet_bytes_range__base__first .
H243:  start_byte + 11 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__header_bits div 8 + 1 .
C2:    start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_size .
C3:    additional_count + 1 >= additional_count .
C4:    additional_count + 1 <= additional_count + 1 .
C5:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__udp_max_size .
C6:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_size .
 

procedure_create_response_edns_32.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0 .
H118:  fld_code(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt .
H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 
           dns_types__unsigned_short__first .
H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 
           dns_types__unsigned_short__last .
H123:  query_end_byte + 5 >= dns_types__packet_bytes_range__first .
H124:  query_end_byte + 5 <= dns_types__packet_bytes_range__last .
H125:  query_end_byte + 5 >= dns_types__packet_bytes_range__base__first .
H126:  query_end_byte + 5 <= dns_types__packet_bytes_range__base__last .
H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
           dns_types__unsigned_short__base__first .
H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
           dns_types__unsigned_short__base__last .
H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 
           dns_types__unsigned_short__first .
H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 
           dns_types__unsigned_short__last .
H131:  query_end_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  query_end_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  query_end_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  query_end_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 
           dns_types__byte__first .
H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 
           dns_types__byte__last .
H137:  query_end_byte + 8 >= dns_types__packet_bytes_range__first .
H138:  query_end_byte + 8 <= dns_types__packet_bytes_range__last .
H139:  query_end_byte + 8 >= dns_types__packet_bytes_range__base__first .
H140:  query_end_byte + 8 <= dns_types__packet_bytes_range__base__last .
H141:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H142:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H143:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) >= 
           dns_types__packet_length_range__first .
H144:  dns_types__unsigned_short__min(dns_types__packet_size, 
           fld_payload_size(upf_ztop(upf_payload_size(upf_code(upf_root(
           edns_rec, element(fld_bytes(input_packet), [
           query_end_byte + 1])), to_query_type(element(fld_bytes(
           input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]))), element(
           fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8])))) <= 
           dns_types__packet_length_range__last .
H145:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__packet_length_range__first .
H146:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_length_range__last .
H147:  0 >= dns_types__byte__first .
H148:  0 <= dns_types__byte__last .
H149:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H150:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H151:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H152:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H153:  0 >= dns_types__byte__first .
H154:  0 <= dns_types__byte__last .
H155:  start_byte + 2 >= dns_types__packet_bytes_range__first .
H156:  start_byte + 2 <= dns_types__packet_bytes_range__last .
H157:  start_byte + 2 >= dns_types__packet_bytes_range__base__first .
H158:  start_byte + 2 <= dns_types__packet_bytes_range__base__last .
H159:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H160:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H161:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H162:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H163:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H164:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H165:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__byte__first .
H166:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__byte__last .
H167:  from_query_type(dns_types__opt) mod 256 >= 
           dns_types__unsigned_short__base__first .
H168:  from_query_type(dns_types__opt) mod 256 <= 
           dns_types__unsigned_short__base__last .
H169:  256 <> 0 .
H170:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H171:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H172:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__byte__first .
H173:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__byte__last .
H174:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 >= 
           dns_types__packet_length_range__base__first .
H175:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) div 256 <= 
           dns_types__packet_length_range__base__last .
H176:  256 <> 0 .
H177:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H178:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H179:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H180:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H181:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H182:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H183:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__byte__first .
H184:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__byte__last .
H185:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 >= 
           dns_types__packet_length_range__base__first .
H186:  dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) mod 256 <= 
           dns_types__packet_length_range__base__last .
H187:  256 <> 0 .
H188:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H189:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H190:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H191:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H192:  0 >= dns_types__byte__first .
H193:  0 <= dns_types__byte__last .
H194:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H195:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H196:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H197:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H198:  0 >= dns_types__byte__first .
H199:  0 <= dns_types__byte__last .
H200:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H201:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H202:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H203:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H204:  not (bit__and(fld_ztop(upf_ztop(upf_payload_size(upf_code(
           upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))), 
           dns_types__dnssecmask) <> 0) .
H205:  0 >= dns_types__byte__first .
H206:  0 <= dns_types__byte__last .
H207:  start_byte + 8 >= dns_types__packet_bytes_range__first .
H208:  start_byte + 8 <= dns_types__packet_bytes_range__last .
H209:  start_byte + 8 >= dns_types__packet_bytes_range__base__first .
H210:  start_byte + 8 <= dns_types__packet_bytes_range__base__last .
H211:  0 >= dns_types__byte__first .
H212:  0 <= dns_types__byte__last .
H213:  start_byte + 9 >= dns_types__packet_bytes_range__first .
H214:  start_byte + 9 <= dns_types__packet_bytes_range__last .
H215:  start_byte + 9 >= dns_types__packet_bytes_range__base__first .
H216:  start_byte + 9 <= dns_types__packet_bytes_range__base__last .
H217:  0 >= dns_types__byte__first .
H218:  0 <= dns_types__byte__last .
H219:  start_byte + 10 >= dns_types__packet_bytes_range__first .
H220:  start_byte + 10 <= dns_types__packet_bytes_range__last .
H221:  start_byte + 10 >= dns_types__packet_bytes_range__base__first .
H222:  start_byte + 10 <= dns_types__packet_bytes_range__base__last .
H223:  0 >= dns_types__byte__first .
H224:  0 <= dns_types__byte__last .
H225:  start_byte + 11 >= dns_types__packet_bytes_range__first .
H226:  start_byte + 11 <= dns_types__packet_bytes_range__last .
H227:  start_byte + 11 >= dns_types__packet_bytes_range__base__first .
H228:  start_byte + 11 <= dns_types__packet_bytes_range__base__last .
H229:  additional_count + 1 >= dns_types__unsigned_short__first .
H230:  additional_count + 1 <= dns_types__unsigned_short__last .
H231:  start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H232:  start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H233:  start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H234:  start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H235:  start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H236:  start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H237:  dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H238:  dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H239:  dns_types__header_bits div 8 >= system__min_int .
H240:  dns_types__header_bits div 8 <= system__max_int .
H241:  8 <> 0 .
H242:  start_byte + 11 >= dns_types__packet_bytes_range__base__first .
H243:  start_byte + 11 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    start_byte + 11 + dns_types__header_bits div 8 >= 
           dns_types__header_bits div 8 + 1 .
C2:    start_byte + 11 + dns_types__header_bits div 8 <= 
           dns_types__packet_size .
C3:    additional_count + 1 >= additional_count .
C4:    additional_count + 1 <= additional_count + 1 .
C5:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) >= 
           dns_types__udp_max_size .
C6:    dns_types__packet_length_range__max(
           dns_types__udp_max_size, dns_types__unsigned_short__min(
           dns_types__packet_size, fld_payload_size(upf_ztop(
           upf_payload_size(upf_code(upf_root(edns_rec, element(
           fld_bytes(input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3]))), element(fld_bytes(
           input_packet), [query_end_byte + 4]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 5])), element(
           fld_bytes(input_packet), [query_end_byte + 8]))))) <= 
           dns_types__packet_size .
 

procedure_create_response_edns_33.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes .
H90:   start_byte + 11 + dns_types__header_bits div 8 < 
           dns_types__packet_size .
H91:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H92:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H93:   element(fld_bytes(input_packet), [query_end_byte + 1]) >= 
           character__first .
H94:   element(fld_bytes(input_packet), [query_end_byte + 1]) <= 
           character__last .
H95:   query_end_byte + 1 >= dns_types__packet_bytes_range__first .
H96:   query_end_byte + 1 <= dns_types__packet_bytes_range__last .
H97:   query_end_byte + 1 >= dns_types__packet_bytes_range__base__first .
H98:   query_end_byte + 1 <= dns_types__packet_bytes_range__base__last .
H99:   element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__base__first .
H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + element(
           fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__base__last .
H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 
           dns_types__unsigned_short__first .
H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 
           dns_types__unsigned_short__last .
H103:  query_end_byte + 3 >= dns_types__packet_bytes_range__first .
H104:  query_end_byte + 3 <= dns_types__packet_bytes_range__last .
H105:  query_end_byte + 3 >= dns_types__packet_bytes_range__base__first .
H106:  query_end_byte + 3 <= dns_types__packet_bytes_range__base__last .
H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
           dns_types__unsigned_short__base__first .
H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
           dns_types__unsigned_short__base__last .
H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 
           dns_types__unsigned_short__first .
H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 
           dns_types__unsigned_short__last .
H111:  query_end_byte + 2 >= dns_types__packet_bytes_range__first .
H112:  query_end_byte + 2 <= dns_types__packet_bytes_range__last .
H113:  query_end_byte + 2 >= dns_types__packet_bytes_range__base__first .
H114:  query_end_byte + 2 <= dns_types__packet_bytes_range__base__last .
H115:  0 >= character__first .
H116:  0 <= character__last .
H117:  not ((fld_root(upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 0) and (fld_code(
           upf_code(upf_root(edns_rec, element(fld_bytes(
           input_packet), [query_end_byte + 1])), 
           to_query_type(element(fld_bytes(input_packet), [
           query_end_byte + 2]) * 256 + element(fld_bytes(
           input_packet), [query_end_byte + 3])))) = 
           dns_types__opt)) .
        ->
C1:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__header_bits div 8 + 1 .
C2:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_size .
C3:    additional_count >= additional_count .
C4:    additional_count <= additional_count + 1 .
C5:    dns_types__udp_max_size >= dns_types__udp_max_size .
C6:    dns_types__udp_max_size <= dns_types__packet_size .
 

procedure_create_response_edns_34.
H1:    additional_count < dns_types__unsigned_short__last .
H2:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H3:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H4:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H5:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H6:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H7:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H8:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H9:    fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H12:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H13:   true .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H21:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H22:   true .
H23:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H24:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H25:   input_bytes >= dns_types__packet_length_range__first .
H26:   input_bytes <= dns_types__packet_length_range__last .
H27:   query_end_byte >= dns_types__packet_bytes_range__first .
H28:   query_end_byte <= dns_types__packet_bytes_range__last .
H29:   start_byte >= dns_types__packet_bytes_range__first .
H30:   start_byte <= dns_types__packet_bytes_range__last .
H31:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H32:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H33:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H34:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H35:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H36:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H37:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H38:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H39:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H40:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H41:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H42:   true .
H43:   true .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H50:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H51:   true .
H52:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H53:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H54:   additional_count >= dns_types__unsigned_short__first .
H55:   additional_count <= dns_types__unsigned_short__last .
H56:   dns_types__udp_max_size >= 
           dns_types__packet_length_range__first .
H57:   dns_types__udp_max_size <= 
           dns_types__packet_length_range__last .
H58:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H59:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H60:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H61:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H62:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H63:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H64:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__header_bits div 8 >= system__min_int .
H67:   dns_types__header_bits div 8 <= system__max_int .
H68:   8 <> 0 .
H69:   start_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H70:   start_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H71:   dns_types__header_bits div 8 >= system__min_int .
H72:   dns_types__header_bits div 8 <= system__max_int .
H73:   8 <> 0 .
H74:   start_byte + 11 >= integer__base__first .
H75:   start_byte + 11 <= integer__base__last .
H76:   start_byte >= integer__first .
H77:   start_byte <= integer__last .
H78:   input_bytes >= integer__first .
H79:   input_bytes <= integer__last .
H80:   query_end_byte + 11 + dns_types__header_bits div 8 >= 
           integer__base__first .
H81:   query_end_byte + 11 + dns_types__header_bits div 8 <= 
           integer__base__last .
H82:   dns_types__header_bits div 8 >= system__min_int .
H83:   dns_types__header_bits div 8 <= system__max_int .
H84:   8 <> 0 .
H85:   query_end_byte + 11 >= integer__base__first .
H86:   query_end_byte + 11 <= integer__base__last .
H87:   query_end_byte >= integer__first .
H88:   query_end_byte <= integer__last .
H89:   not ((query_end_byte + 11 + dns_types__header_bits div 8 <= 
           input_bytes) and (start_byte + 11 + 
           dns_types__header_bits div 8 < 
           dns_types__packet_size)) .
        ->
C1:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__header_bits div 8 + 1 .
C2:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_size .
C3:    additional_count >= additional_count .
C4:    additional_count <= additional_count + 1 .
C5:    dns_types__udp_max_size >= dns_types__udp_max_size .
C6:    dns_types__udp_max_size <= dns_types__packet_size .
 

