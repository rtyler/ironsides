*****************************************************************************
                       Semantic Analysis of SPARK Text
                             Examiner GPL Edition

*****************************************************************************



SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure Process_Dns_Request.Create_Response_EDNS






@@@@@@@@@@  VC: procedure_create_response_edns_1.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New C1:  512 >= dns_types__packet_length_range__first
<S>  New C2:  512 <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New C1:  true
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_2.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
%%%  Simplified C11 on reading formula in, to give:
     %%%  C11:  true
***  Proved C11:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H56:  dns_types__udp_max_size >= 0
<S>  New C1:  start_byte + dns_types__header_bits div 8 >= 0
<S>  New C3:  start_byte + dns_types__header_bits div 8 >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H57:  dns_types__udp_max_size <= 8192
<S>  New C2:  start_byte + dns_types__header_bits div 8 <= 8192
<S>  New C4:  start_byte + dns_types__header_bits div 8 <= 8192
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New C5:  start_byte + dns_types__header_bits div 8 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New C6:  start_byte + dns_types__header_bits div 8 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New C7:  dns_types__header_bits div 8 >= 1
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New C8:  dns_types__header_bits div 8 <= 8180
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New C9:  dns_types__header_bits div 8 >= - 9223372036854775808
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New C10:  dns_types__header_bits div 8 <= 9223372036854775807
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New C1:  start_byte >= - 12
<S>  New C3:  start_byte >= - 12
<S>  New C2:  start_byte <= 8180
<S>  New C4:  start_byte <= 8180
<S>  New C5:  start_byte >= - 2147483660
<S>  New C6:  start_byte <= 2147483635
<S>  New C7:  true
<S>  New C8:  true
<S>  New C9:  true
<S>  New C10:  true
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  true
<S>  New H57:  true
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
***  Proved C1:  start_byte >= - 12
     using hypothesis H29.
***  Proved C3:  start_byte >= - 12
     using hypothesis H29.
***  Proved C2:  start_byte <= 8180
     using hypothesis H30.
***  Proved C4:  start_byte <= 8180
     using hypothesis H30.
***  Proved C5:  start_byte >= - 2147483660
     using hypothesis H29.
***  Proved C6:  start_byte <= 2147483635
     using hypothesis H30.
***  Proved C7:  true
***  Proved C8:  true
***  Proved C9:  true
***  Proved C10:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_3.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  true
%%%  Simplified C16 on reading formula in, to give:
     %%%  C16:  true
***  Proved C3:  dns_types__header_bits div 8 >= system__min_int
     using hypothesis H66.
***  Proved C4:  dns_types__header_bits div 8 <= system__max_int
     using hypothesis H67.
***  Proved C5:  true
***  Proved C14:  dns_types__header_bits div 8 >= system__min_int
     using hypothesis H66.
***  Proved C15:  dns_types__header_bits div 8 <= system__max_int
     using hypothesis H67.
***  Proved C16:  true
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New C1:  start_byte + 11 + dns_types__header_bits div 8 >= - 2147483648
<S>  New C6:  start_byte >= - 2147483659
<S>  New C12:  query_end_byte + 11 + dns_types__header_bits div 8 >= - 
          2147483648
<S>  New C17:  query_end_byte >= - 2147483659
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New C2:  start_byte + 11 + dns_types__header_bits div 8 <= 2147483647
<S>  New C7:  start_byte <= 2147483636
<S>  New C13:  query_end_byte + 11 + dns_types__header_bits div 8 <= 2147483647
<S>  New C18:  query_end_byte <= 2147483636
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New C8:  start_byte >= - 2147483648
<S>  New C10:  input_bytes >= - 2147483648
<S>  New C19:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New C9:  start_byte <= 2147483647
<S>  New C11:  input_bytes <= 2147483647
<S>  New C20:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte + 12 <= dns_types__packet_bytes_range__base__last
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  12 <= dns_types__packet_bytes_range__last
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New C1:  start_byte + 11 >= - 2147483660
<S>  New C12:  query_end_byte + 11 >= - 2147483660
<S>  New C2:  start_byte + 11 <= 2147483635
<S>  New C13:  query_end_byte + 11 <= 2147483635
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H65:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte <= 2147483635
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified C1 further, to give:
     %%%  C1:  start_byte >= - 2147483671
%%%  Simplified C2 further, to give:
     %%%  C2:  start_byte <= 2147483624
%%%  Simplified C12 further, to give:
     %%%  C12:  query_end_byte >= - 2147483671
%%%  Simplified C13 further, to give:
     %%%  C13:  query_end_byte <= 2147483624
***  Proved C6:  start_byte >= - 2147483659
     using hypothesis H58.
***  Proved C17:  query_end_byte >= - 2147483659
     using hypothesis H27.
***  Proved C7:  start_byte <= 2147483636
     using hypothesis H59.
***  Proved C18:  query_end_byte <= 2147483636
     using hypothesis H28.
***  Proved C8:  start_byte >= - 2147483648
     using hypothesis H58.
***  Proved C10:  input_bytes >= - 2147483648
     using hypothesis H25.
***  Proved C19:  query_end_byte >= - 2147483648
     using hypothesis H27.
***  Proved C9:  start_byte <= 2147483647
     using hypothesis H59.
***  Proved C11:  input_bytes <= 2147483647
     using hypothesis H26.
***  Proved C20:  query_end_byte <= 2147483647
     using hypothesis H28.
***  Proved C1:  start_byte >= - 2147483671
     using hypothesis H58.
***  Proved C2:  start_byte <= 2147483624
     using hypothesis H59.
***  Proved C12:  query_end_byte >= - 2147483671
     using hypothesis H27.
***  Proved C13:  query_end_byte <= 2147483624
     using hypothesis H28.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_4.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
***  Proved C5:  query_end_byte + 1 >= dns_types__packet_bytes_range__first
     using hypothesis H27.
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New C1:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New C3:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New C2:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New C4:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New C6:  query_end_byte <= 8179
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H62:  start_byte + dns_types__header_bits div 8 >= - 2147483648
<S>  New C7:  query_end_byte >= - 2147483649
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New C8:  query_end_byte <= 2147483646
***  Proved C8:  query_end_byte <= 2147483646
     using hypothesis H28.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte >= - 2147483660
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C7:  query_end_byte >= - 2147483649
     using hypothesis H87.
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H18 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H42 (true-hypothesis).
---  Eliminated hypothesis H43 (true-hypothesis).
---  Eliminated hypothesis H44 (true-hypothesis).
---  Eliminated hypothesis H45 (true-hypothesis).
---  Eliminated hypothesis H46 (true-hypothesis).
---  Eliminated hypothesis H47 (true-hypothesis).
---  Eliminated hypothesis H48 (true-hypothesis).
---  Eliminated hypothesis H51 (true-hypothesis).
---  Eliminated hypothesis H60 (true-hypothesis).
---  Eliminated hypothesis H61 (true-hypothesis).
---  Eliminated hypothesis H68 (true-hypothesis).
---  Eliminated hypothesis H71 (true-hypothesis).
---  Eliminated hypothesis H72 (true-hypothesis).
---  Eliminated hypothesis H73 (true-hypothesis).
---  Eliminated hypothesis H82 (true-hypothesis).
---  Eliminated hypothesis H83 (true-hypothesis).
---  Eliminated hypothesis H84 (true-hypothesis).
---  Eliminated hypothesis H65 (true-hypothesis).
---  Eliminated hypothesis H66 (true-hypothesis).
---  Eliminated hypothesis H67 (true-hypothesis).
---  Eliminated hypothesis H56 (true-hypothesis).
---  Eliminated hypothesis H57 (true-hypothesis).
---  Eliminated hypothesis H64 (true-hypothesis).
---  Eliminated hypothesis H59 (duplicate of H30).
---  Eliminated hypothesis H25 (redundant, given H27 & H89).
---  Eliminated hypothesis H28 (redundant, given H26 & H89).
---  Eliminated hypothesis H30 (redundant, given H90).
---  Eliminated hypothesis H55 (redundant, given H1).
---  Eliminated hypothesis H58 (redundant, given H29).
---  Eliminated hypothesis H62 (redundant, given H29).
---  Eliminated hypothesis H63 (redundant, given H70).
---  Eliminated hypothesis H69 (redundant, given H29).
---  Eliminated hypothesis H70 (redundant, given H90).
---  Eliminated hypothesis H74 (redundant, given H29).
---  Eliminated hypothesis H75 (redundant, given H90).
---  Eliminated hypothesis H76 (redundant, given H29).
---  Eliminated hypothesis H77 (redundant, given H90).
---  Eliminated hypothesis H78 (redundant, given H27 & H89).
---  Eliminated hypothesis H79 (redundant, given H26).
---  Eliminated hypothesis H80 (redundant, given H27).
---  Eliminated hypothesis H81 (redundant, given H26 & H89).
---  Eliminated hypothesis H85 (redundant, given H27).
---  Eliminated hypothesis H86 (redundant, given H26 & H89).
---  Eliminated hypothesis H87 (redundant, given H27).
---  Eliminated hypothesis H88 (redundant, given H26 & H89).
---  Eliminated conclusion C3, which is a duplicate of C1.
---  Eliminated conclusion C4, which is a duplicate of C2.
     +++  New H91:  integer__size >= 0
     +++  New H92:  character__size >= 0
     +++  New H93:  dns_types__packet_length_range__size >= 0
     +++  New H94:  dns_types__packet_bytes_range__size >= 0
     +++  New H95:  dns_types__edns_record__size >= 0
     +++  New H96:  dns_types__dns_packet__size >= 0


@@@@@@@@@@  VC: procedure_create_response_edns_5.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
***  Proved C5:  query_end_byte + 3 >= dns_types__packet_bytes_range__first
     using hypothesis H27.
***  Proved C7:  query_end_byte + 3 >= 
          dns_types__packet_bytes_range__base__first
     using hypothesis H97.
***  Proved C13:  query_end_byte + 2 >= dns_types__packet_bytes_range__first
     using hypothesis H27.
***  Proved C15:  query_end_byte + 2 >= 
          dns_types__packet_bytes_range__base__first
     using hypothesis H97.
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New C1:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New C9:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= - 
          2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New C2:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New C10:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New C3:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New C11:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New C4:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New C12:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New C6:  query_end_byte <= 8177
<S>  New C14:  query_end_byte <= 8178
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New C8:  query_end_byte <= 2147483644
<S>  New C16:  query_end_byte <= 2147483645
***  Proved C8:  query_end_byte <= 2147483644
     using hypothesis H28.
***  Proved C16:  query_end_byte <= 2147483645
     using hypothesis H28.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H18 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H42 (true-hypothesis).
---  Eliminated hypothesis H43 (true-hypothesis).
---  Eliminated hypothesis H44 (true-hypothesis).
---  Eliminated hypothesis H45 (true-hypothesis).
---  Eliminated hypothesis H46 (true-hypothesis).
---  Eliminated hypothesis H47 (true-hypothesis).
---  Eliminated hypothesis H48 (true-hypothesis).
---  Eliminated hypothesis H51 (true-hypothesis).
---  Eliminated hypothesis H60 (true-hypothesis).
---  Eliminated hypothesis H61 (true-hypothesis).
---  Eliminated hypothesis H68 (true-hypothesis).
---  Eliminated hypothesis H71 (true-hypothesis).
---  Eliminated hypothesis H72 (true-hypothesis).
---  Eliminated hypothesis H73 (true-hypothesis).
---  Eliminated hypothesis H82 (true-hypothesis).
---  Eliminated hypothesis H83 (true-hypothesis).
---  Eliminated hypothesis H84 (true-hypothesis).
---  Eliminated hypothesis H93 (true-hypothesis).
---  Eliminated hypothesis H94 (true-hypothesis).
---  Eliminated hypothesis H65 (true-hypothesis).
---  Eliminated hypothesis H66 (true-hypothesis).
---  Eliminated hypothesis H67 (true-hypothesis).
---  Eliminated hypothesis H56 (true-hypothesis).
---  Eliminated hypothesis H57 (true-hypothesis).
---  Eliminated hypothesis H64 (true-hypothesis).
---  Eliminated hypothesis H59 (duplicate of H30).
---  Eliminated hypothesis H25 (redundant, given H27 & H89).
---  Eliminated hypothesis H28 (redundant, given H96).
---  Eliminated hypothesis H30 (redundant, given H90).
---  Eliminated hypothesis H55 (redundant, given H1).
---  Eliminated hypothesis H58 (redundant, given H29).
---  Eliminated hypothesis H62 (redundant, given H29).
---  Eliminated hypothesis H63 (redundant, given H70).
---  Eliminated hypothesis H69 (redundant, given H29).
---  Eliminated hypothesis H70 (redundant, given H90).
---  Eliminated hypothesis H74 (redundant, given H29).
---  Eliminated hypothesis H75 (redundant, given H90).
---  Eliminated hypothesis H76 (redundant, given H29).
---  Eliminated hypothesis H77 (redundant, given H90).
---  Eliminated hypothesis H78 (redundant, given H27 & H89).
---  Eliminated hypothesis H79 (redundant, given H26).
---  Eliminated hypothesis H80 (redundant, given H27).
---  Eliminated hypothesis H81 (redundant, given H96).
---  Eliminated hypothesis H85 (redundant, given H27).
---  Eliminated hypothesis H86 (redundant, given H96).
---  Eliminated hypothesis H87 (redundant, given H27).
---  Eliminated hypothesis H88 (redundant, given H96).
---  Eliminated hypothesis H95 (redundant, given H27).
---  Eliminated hypothesis H96 (redundant, given H26 & H89).
---  Eliminated hypothesis H97 (redundant, given H27).
---  Eliminated hypothesis H98 (redundant, given H26 & H89).
     +++  New H99:  integer__size >= 0
     +++  New H100:  character__size >= 0
     +++  New H101:  dns_types__packet_length_range__size >= 0
     +++  New H102:  dns_types__packet_bytes_range__size >= 0
     +++  New H103:  dns_types__edns_record__size >= 0
     +++  New H104:  dns_types__dns_packet__size >= 0


@@@@@@@@@@  VC: procedure_create_response_edns_6.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New C1:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_7.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
***  Proved C5:  query_end_byte + 5 >= dns_types__packet_bytes_range__first
     using hypothesis H27.
***  Proved C7:  query_end_byte + 5 >= 
          dns_types__packet_bytes_range__base__first
     using hypothesis H97.
***  Proved C13:  query_end_byte + 4 >= dns_types__packet_bytes_range__first
     using hypothesis H27.
***  Proved C15:  query_end_byte + 4 >= 
          dns_types__packet_bytes_range__base__first
     using hypothesis H97.
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New C1:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New C3:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New C11:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New C2:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New C4:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New C12:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New C6:  query_end_byte <= 8175
<S>  New C14:  query_end_byte <= 8176
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New C8:  query_end_byte <= 2147483642
<S>  New C16:  query_end_byte <= 2147483643
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New C9:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= - 
          2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New C10:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
***  Proved C8:  query_end_byte <= 2147483642
     using hypothesis H28.
***  Proved C16:  query_end_byte <= 2147483643
     using hypothesis H28.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H18 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H42 (true-hypothesis).
---  Eliminated hypothesis H43 (true-hypothesis).
---  Eliminated hypothesis H44 (true-hypothesis).
---  Eliminated hypothesis H45 (true-hypothesis).
---  Eliminated hypothesis H46 (true-hypothesis).
---  Eliminated hypothesis H47 (true-hypothesis).
---  Eliminated hypothesis H48 (true-hypothesis).
---  Eliminated hypothesis H51 (true-hypothesis).
---  Eliminated hypothesis H60 (true-hypothesis).
---  Eliminated hypothesis H61 (true-hypothesis).
---  Eliminated hypothesis H68 (true-hypothesis).
---  Eliminated hypothesis H71 (true-hypothesis).
---  Eliminated hypothesis H72 (true-hypothesis).
---  Eliminated hypothesis H73 (true-hypothesis).
---  Eliminated hypothesis H82 (true-hypothesis).
---  Eliminated hypothesis H83 (true-hypothesis).
---  Eliminated hypothesis H84 (true-hypothesis).
---  Eliminated hypothesis H93 (true-hypothesis).
---  Eliminated hypothesis H94 (true-hypothesis).
---  Eliminated hypothesis H65 (true-hypothesis).
---  Eliminated hypothesis H66 (true-hypothesis).
---  Eliminated hypothesis H67 (true-hypothesis).
---  Eliminated hypothesis H115 (true-hypothesis).
---  Eliminated hypothesis H116 (true-hypothesis).
---  Eliminated hypothesis H56 (true-hypothesis).
---  Eliminated hypothesis H57 (true-hypothesis).
---  Eliminated hypothesis H64 (true-hypothesis).
---  Eliminated hypothesis H59 (duplicate of H30).
---  Eliminated hypothesis H25 (redundant, given H27 & H89).
---  Eliminated hypothesis H28 (redundant, given H96).
---  Eliminated hypothesis H30 (redundant, given H90).
---  Eliminated hypothesis H55 (redundant, given H1).
---  Eliminated hypothesis H58 (redundant, given H29).
---  Eliminated hypothesis H62 (redundant, given H29).
---  Eliminated hypothesis H63 (redundant, given H70).
---  Eliminated hypothesis H69 (redundant, given H29).
---  Eliminated hypothesis H70 (redundant, given H90).
---  Eliminated hypothesis H74 (redundant, given H29).
---  Eliminated hypothesis H75 (redundant, given H90).
---  Eliminated hypothesis H76 (redundant, given H29).
---  Eliminated hypothesis H77 (redundant, given H90).
---  Eliminated hypothesis H78 (redundant, given H27 & H89).
---  Eliminated hypothesis H79 (redundant, given H26).
---  Eliminated hypothesis H80 (redundant, given H27).
---  Eliminated hypothesis H81 (redundant, given H96).
---  Eliminated hypothesis H85 (redundant, given H27).
---  Eliminated hypothesis H86 (redundant, given H96).
---  Eliminated hypothesis H87 (redundant, given H27).
---  Eliminated hypothesis H88 (redundant, given H96).
---  Eliminated hypothesis H91 (redundant, given H117).
---  Eliminated hypothesis H92 (redundant, given H117).
---  Eliminated hypothesis H95 (redundant, given H27).
---  Eliminated hypothesis H96 (redundant, given H104).
---  Eliminated hypothesis H97 (redundant, given H27).
---  Eliminated hypothesis H98 (redundant, given H104).
---  Eliminated hypothesis H103 (redundant, given H27).
---  Eliminated hypothesis H104 (redundant, given H26 & H89).
---  Eliminated hypothesis H105 (redundant, given H27).
---  Eliminated hypothesis H106 (redundant, given H112).
---  Eliminated hypothesis H107 (redundant, given H109).
---  Eliminated hypothesis H108 (redundant, given H110).
---  Eliminated hypothesis H111 (redundant, given H27).
---  Eliminated hypothesis H112 (redundant, given H26 & H89).
---  Eliminated hypothesis H113 (redundant, given H27).
---  Eliminated hypothesis H114 (redundant, given H26 & H89).
     +++  New H119:  integer__size >= 0
     +++  New H120:  character__size >= 0
     +++  New H121:  dns_types__packet_length_range__size >= 0
     +++  New H122:  dns_types__packet_bytes_range__size >= 0
     +++  New H123:  dns_types__edns_record__size >= 0
     +++  New H124:  dns_types__dns_packet__size >= 0


@@@@@@@@@@  VC: procedure_create_response_edns_8.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
***  Proved C3:  query_end_byte + 8 >= dns_types__packet_bytes_range__first
     using hypothesis H27.
***  Proved C5:  query_end_byte + 8 >= 
          dns_types__packet_bytes_range__base__first
     using hypothesis H97.
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New C1:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
<S>  New C2:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> 0 <= element(fld_bytes(input_packet), [
          i___1]) and element(fld_bytes(input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> 0 <= element(fld_bytes(output_packet), [
          i___1]) and element(fld_bytes(output_packet), [i___1]) <= 255)
<S>  New C4:  query_end_byte <= 8172
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New C6:  query_end_byte <= 2147483639
***  Proved C6:  query_end_byte <= 2147483639
     using hypothesis H28.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H18 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H42 (true-hypothesis).
---  Eliminated hypothesis H43 (true-hypothesis).
---  Eliminated hypothesis H44 (true-hypothesis).
---  Eliminated hypothesis H45 (true-hypothesis).
---  Eliminated hypothesis H46 (true-hypothesis).
---  Eliminated hypothesis H47 (true-hypothesis).
---  Eliminated hypothesis H48 (true-hypothesis).
---  Eliminated hypothesis H51 (true-hypothesis).
---  Eliminated hypothesis H60 (true-hypothesis).
---  Eliminated hypothesis H61 (true-hypothesis).
---  Eliminated hypothesis H68 (true-hypothesis).
---  Eliminated hypothesis H71 (true-hypothesis).
---  Eliminated hypothesis H72 (true-hypothesis).
---  Eliminated hypothesis H73 (true-hypothesis).
---  Eliminated hypothesis H82 (true-hypothesis).
---  Eliminated hypothesis H83 (true-hypothesis).
---  Eliminated hypothesis H84 (true-hypothesis).
---  Eliminated hypothesis H93 (true-hypothesis).
---  Eliminated hypothesis H94 (true-hypothesis).
---  Eliminated hypothesis H65 (true-hypothesis).
---  Eliminated hypothesis H66 (true-hypothesis).
---  Eliminated hypothesis H67 (true-hypothesis).
---  Eliminated hypothesis H115 (true-hypothesis).
---  Eliminated hypothesis H116 (true-hypothesis).
---  Eliminated hypothesis H56 (true-hypothesis).
---  Eliminated hypothesis H57 (true-hypothesis).
---  Eliminated hypothesis H64 (true-hypothesis).
---  Eliminated hypothesis H59 (duplicate of H30).
---  Eliminated hypothesis H25 (redundant, given H27 & H89).
---  Eliminated hypothesis H28 (redundant, given H96).
---  Eliminated hypothesis H30 (redundant, given H90).
---  Eliminated hypothesis H55 (redundant, given H1).
---  Eliminated hypothesis H58 (redundant, given H29).
---  Eliminated hypothesis H62 (redundant, given H29).
---  Eliminated hypothesis H63 (redundant, given H70).
---  Eliminated hypothesis H69 (redundant, given H29).
---  Eliminated hypothesis H70 (redundant, given H90).
---  Eliminated hypothesis H74 (redundant, given H29).
---  Eliminated hypothesis H75 (redundant, given H90).
---  Eliminated hypothesis H76 (redundant, given H29).
---  Eliminated hypothesis H77 (redundant, given H90).
---  Eliminated hypothesis H78 (redundant, given H27 & H89).
---  Eliminated hypothesis H79 (redundant, given H26).
---  Eliminated hypothesis H80 (redundant, given H27).
---  Eliminated hypothesis H81 (redundant, given H96).
---  Eliminated hypothesis H85 (redundant, given H27).
---  Eliminated hypothesis H86 (redundant, given H96).
---  Eliminated hypothesis H87 (redundant, given H27).
---  Eliminated hypothesis H88 (redundant, given H96).
---  Eliminated hypothesis H91 (redundant, given H117).
---  Eliminated hypothesis H92 (redundant, given H117).
---  Eliminated hypothesis H95 (redundant, given H27).
---  Eliminated hypothesis H96 (redundant, given H104).
---  Eliminated hypothesis H97 (redundant, given H27).
---  Eliminated hypothesis H98 (redundant, given H104).
---  Eliminated hypothesis H103 (redundant, given H27).
---  Eliminated hypothesis H104 (redundant, given H124).
---  Eliminated hypothesis H105 (redundant, given H27).
---  Eliminated hypothesis H106 (redundant, given H112).
---  Eliminated hypothesis H107 (redundant, given H109).
---  Eliminated hypothesis H108 (redundant, given H110).
---  Eliminated hypothesis H111 (redundant, given H27).
---  Eliminated hypothesis H112 (redundant, given H124).
---  Eliminated hypothesis H113 (redundant, given H27).
---  Eliminated hypothesis H114 (redundant, given H124).
---  Eliminated hypothesis H123 (redundant, given H27).
---  Eliminated hypothesis H124 (redundant, given H26 & H89).
---  Eliminated hypothesis H125 (redundant, given H27).
---  Eliminated hypothesis H126 (redundant, given H132).
---  Eliminated hypothesis H127 (redundant, given H129).
---  Eliminated hypothesis H128 (redundant, given H130).
---  Eliminated hypothesis H131 (redundant, given H27).
---  Eliminated hypothesis H132 (redundant, given H26 & H89).
---  Eliminated hypothesis H133 (redundant, given H27).
---  Eliminated hypothesis H134 (redundant, given H26 & H89).
     +++  New H135:  integer__size >= 0
     +++  New H136:  character__size >= 0
     +++  New H137:  dns_types__packet_length_range__size >= 0
     +++  New H138:  dns_types__packet_bytes_range__size >= 0
     +++  New H139:  dns_types__edns_record__size >= 0
     +++  New H140:  dns_types__dns_packet__size >= 0


@@@@@@@@@@  VC: procedure_create_response_edns_9.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H56:  dns_types__udp_max_size >= 0
<S>  New H58:  start_byte + dns_types__header_bits div 8 >= 0
<S>  New C1:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 0
<S>  New C3:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H57:  dns_types__udp_max_size <= 8192
<S>  New H59:  start_byte + dns_types__header_bits div 8 <= 8192
<S>  New C2:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 8192
<S>  New C4:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 8192
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New C1:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New C3:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New C2:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New C4:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte >= - 12
<S>  New H59:  start_byte <= 8180
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte + 12 <= dns_types__packet_bytes_range__base__last
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  12 <= dns_types__packet_bytes_range__last
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  true
<S>  New H57:  true
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H65:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H63:  start_byte <= 2147483635
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C1:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
     using hypothesis H119.
***  Proved C3:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
     using hypothesis H119.
***  Proved C2:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
***  Proved C4:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_10.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
***  Proved C1:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
     using hypotheses H56 & H141.
***  Proved C2:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
     using hypotheses H57 & H142.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_11.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
***  Proved C3:  start_byte + 1 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New C1:  true
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
<S>  New C2:  true
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> 0 <= element(fld_bytes(input_packet), [
          i___1]) and element(fld_bytes(input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> 0 <= element(fld_bytes(output_packet), [
          i___1]) and element(fld_bytes(output_packet), [i___1]) <= 255)
<S>  New C4:  start_byte <= 8179
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H62:  start_byte + dns_types__header_bits div 8 >= - 2147483648
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New C5:  start_byte >= - 2147483649
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New C6:  start_byte <= 2147483646
***  Proved C1:  true
***  Proved C2:  true
***  Proved C6:  start_byte <= 2147483646
     using hypothesis H30.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte >= - 2147483660
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8179
     using hypothesis H90.
***  Proved C5:  start_byte >= - 2147483649
     using hypothesis H76.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_12.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
***  Proved C1:  0 >= dns_types__byte__first
     using hypothesis H147.
***  Proved C2:  0 <= dns_types__byte__last
     using hypothesis H148.
***  Proved C3:  start_byte + 2 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C5:  start_byte + 2 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New C4:  start_byte <= 8178
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New C6:  start_byte <= 2147483645
***  Proved C6:  start_byte <= 2147483645
     using hypothesis H30.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8178
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_13.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
***  Proved C1:  start_byte + 3 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C3:  start_byte + 3 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New C2:  start_byte <= 8177
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New C4:  start_byte <= 2147483644
***  Proved C4:  start_byte <= 2147483644
     using hypothesis H30.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C2:  start_byte <= 8177
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_14.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  true
***  Proved C1:  from_query_type(dns_types__opt) mod 256 >= 
          dns_types__byte__first
     using hypothesis H147.
***  Proved C3:  from_query_type(dns_types__opt) mod 256 >= 
          dns_types__byte__first
     using hypothesis H147.
***  Proved C7:  true
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 255)
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New C2:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New C4:  from_query_type(dns_types__opt) mod 256 <= 255
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New C5:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New C6:  from_query_type(dns_types__opt) mod 256 <= 2147483647
***  Proved C2:  from_query_type(dns_types__opt) mod 256 <= 255
***  Proved C4:  from_query_type(dns_types__opt) mod 256 <= 255
***  Proved C5:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
***  Proved C6:  from_query_type(dns_types__opt) mod 256 <= 2147483647
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_15.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  true
***  Proved C7:  true
***  Proved C8:  start_byte + 4 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C10:  start_byte + 4 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New C1:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 0
<S>  New C3:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 0
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
<S>  New C2:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 255
<S>  New C4:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 255
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New C5:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= - 
          2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New C6:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> 0 <= element(fld_bytes(input_packet), [
          i___1]) and element(fld_bytes(input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> 0 <= element(fld_bytes(output_packet), [
          i___1]) and element(fld_bytes(output_packet), [i___1]) <= 255)
<S>  New C9:  start_byte <= 8176
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New C11:  start_byte <= 2147483643
***  Proved C11:  start_byte <= 2147483643
     using hypothesis H30.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New C1:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New C3:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New C2:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New C4:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New C5:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New C6:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New C1:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New C3:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New C2:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New C4:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New C5:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New C6:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C9:  start_byte <= 8176
     using hypothesis H90.
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H18 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H42 (true-hypothesis).
---  Eliminated hypothesis H43 (true-hypothesis).
---  Eliminated hypothesis H44 (true-hypothesis).
---  Eliminated hypothesis H45 (true-hypothesis).
---  Eliminated hypothesis H46 (true-hypothesis).
---  Eliminated hypothesis H47 (true-hypothesis).
---  Eliminated hypothesis H48 (true-hypothesis).
---  Eliminated hypothesis H51 (true-hypothesis).
---  Eliminated hypothesis H60 (true-hypothesis).
---  Eliminated hypothesis H61 (true-hypothesis).
---  Eliminated hypothesis H68 (true-hypothesis).
---  Eliminated hypothesis H71 (true-hypothesis).
---  Eliminated hypothesis H72 (true-hypothesis).
---  Eliminated hypothesis H73 (true-hypothesis).
---  Eliminated hypothesis H82 (true-hypothesis).
---  Eliminated hypothesis H83 (true-hypothesis).
---  Eliminated hypothesis H84 (true-hypothesis).
---  Eliminated hypothesis H93 (true-hypothesis).
---  Eliminated hypothesis H94 (true-hypothesis).
---  Eliminated hypothesis H143 (true-hypothesis).
---  Eliminated hypothesis H144 (true-hypothesis).
---  Eliminated hypothesis H147 (true-hypothesis).
---  Eliminated hypothesis H148 (true-hypothesis).
---  Eliminated hypothesis H153 (true-hypothesis).
---  Eliminated hypothesis H154 (true-hypothesis).
---  Eliminated hypothesis H165 (true-hypothesis).
---  Eliminated hypothesis H166 (true-hypothesis).
---  Eliminated hypothesis H169 (true-hypothesis).
---  Eliminated hypothesis H65 (true-hypothesis).
---  Eliminated hypothesis H66 (true-hypothesis).
---  Eliminated hypothesis H67 (true-hypothesis).
---  Eliminated hypothesis H115 (true-hypothesis).
---  Eliminated hypothesis H116 (true-hypothesis).
---  Eliminated hypothesis H56 (true-hypothesis).
---  Eliminated hypothesis H57 (true-hypothesis).
---  Eliminated hypothesis H64 (true-hypothesis).
---  Eliminated hypothesis H59 (duplicate of H30).
---  Eliminated hypothesis H25 (redundant, given H27 & H89).
---  Eliminated hypothesis H28 (redundant, given H96).
---  Eliminated hypothesis H30 (redundant, given H90).
---  Eliminated hypothesis H55 (redundant, given H1).
---  Eliminated hypothesis H58 (redundant, given H29).
---  Eliminated hypothesis H62 (redundant, given H29).
---  Eliminated hypothesis H63 (redundant, given H70).
---  Eliminated hypothesis H69 (redundant, given H29).
---  Eliminated hypothesis H70 (redundant, given H90).
---  Eliminated hypothesis H74 (redundant, given H29).
---  Eliminated hypothesis H75 (redundant, given H90).
---  Eliminated hypothesis H76 (redundant, given H29).
---  Eliminated hypothesis H77 (redundant, given H90).
---  Eliminated hypothesis H78 (redundant, given H27 & H89).
---  Eliminated hypothesis H79 (redundant, given H26).
---  Eliminated hypothesis H80 (redundant, given H27).
---  Eliminated hypothesis H81 (redundant, given H96).
---  Eliminated hypothesis H85 (redundant, given H27).
---  Eliminated hypothesis H86 (redundant, given H96).
---  Eliminated hypothesis H87 (redundant, given H27).
---  Eliminated hypothesis H88 (redundant, given H96).
---  Eliminated hypothesis H91 (redundant, given H117).
---  Eliminated hypothesis H92 (redundant, given H117).
---  Eliminated hypothesis H95 (redundant, given H27).
---  Eliminated hypothesis H96 (redundant, given H104).
---  Eliminated hypothesis H97 (redundant, given H27).
---  Eliminated hypothesis H98 (redundant, given H104).
---  Eliminated hypothesis H103 (redundant, given H27).
---  Eliminated hypothesis H104 (redundant, given H124).
---  Eliminated hypothesis H105 (redundant, given H27).
---  Eliminated hypothesis H106 (redundant, given H112).
---  Eliminated hypothesis H107 (redundant, given H109).
---  Eliminated hypothesis H108 (redundant, given H110).
---  Eliminated hypothesis H111 (redundant, given H27).
---  Eliminated hypothesis H112 (redundant, given H124).
---  Eliminated hypothesis H113 (redundant, given H27).
---  Eliminated hypothesis H114 (redundant, given H124).
---  Eliminated hypothesis H123 (redundant, given H27).
---  Eliminated hypothesis H124 (redundant, given H138).
---  Eliminated hypothesis H125 (redundant, given H27).
---  Eliminated hypothesis H126 (redundant, given H132).
---  Eliminated hypothesis H127 (redundant, given H129).
---  Eliminated hypothesis H128 (redundant, given H130).
---  Eliminated hypothesis H131 (redundant, given H27).
---  Eliminated hypothesis H132 (redundant, given H138).
---  Eliminated hypothesis H133 (redundant, given H27).
---  Eliminated hypothesis H134 (redundant, given H138).
---  Eliminated hypothesis H137 (redundant, given H27).
---  Eliminated hypothesis H138 (redundant, given H26 & H89).
---  Eliminated hypothesis H139 (redundant, given H27).
---  Eliminated hypothesis H140 (redundant, given H26 & H89).
---  Eliminated hypothesis H149 (redundant, given H29).
---  Eliminated hypothesis H150 (redundant, given H90).
---  Eliminated hypothesis H151 (redundant, given H29).
---  Eliminated hypothesis H152 (redundant, given H90).
---  Eliminated hypothesis H155 (redundant, given H29).
---  Eliminated hypothesis H156 (redundant, given H90).
---  Eliminated hypothesis H157 (redundant, given H29).
---  Eliminated hypothesis H158 (redundant, given H90).
---  Eliminated hypothesis H159 (redundant, given H29).
---  Eliminated hypothesis H160 (redundant, given H90).
---  Eliminated hypothesis H161 (redundant, given H29).
---  Eliminated hypothesis H162 (redundant, given H90).
---  Eliminated hypothesis H167 (redundant, given H163).
---  Eliminated hypothesis H168 (redundant, given H164).
---  Eliminated conclusion C3, which is a duplicate of C1.
---  Eliminated conclusion C4, which is a duplicate of C2.
***  Proved C1:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
     using hypothesis H145.
***  Proved C2:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
     using hypothesis H146.
***  Proved C5:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
     using hypothesis H145.
***  Proved C6:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
     using hypothesis H146.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_16.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  true
***  Proved C1:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
     using hypothesis H147.
***  Proved C3:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
     using hypothesis H147.
***  Proved C7:  true
***  Proved C8:  start_byte + 5 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C10:  start_byte + 5 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 255)
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 255
<S>  New C2:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 255
<S>  New C4:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 255
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= - 
          2147483648
<S>  New C5:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= - 
          2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 2147483647
<S>  New C6:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
<S>  New C9:  start_byte <= 8175
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New C11:  start_byte <= 2147483642
***  Proved C2:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 255
***  Proved C4:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 255
***  Proved C5:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= - 
          2147483648
***  Proved C6:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 2147483647
***  Proved C11:  start_byte <= 2147483642
     using hypothesis H30.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 255)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 255)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C9:  start_byte <= 8175
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_17.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
***  Proved C1:  0 >= dns_types__byte__first
     using hypothesis H147.
***  Proved C2:  0 <= dns_types__byte__last
     using hypothesis H148.
***  Proved C3:  start_byte + 6 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C5:  start_byte + 6 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New C4:  start_byte <= 8174
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New C6:  start_byte <= 2147483641
***  Proved C6:  start_byte <= 2147483641
     using hypothesis H30.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8174
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_18.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
***  Proved C1:  0 >= dns_types__byte__first
     using hypothesis H147.
***  Proved C2:  0 <= dns_types__byte__last
     using hypothesis H148.
***  Proved C3:  start_byte + 7 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C5:  start_byte + 7 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New C4:  start_byte <= 8173
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New C6:  start_byte <= 2147483640
***  Proved C6:  start_byte <= 2147483640
     using hypothesis H30.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8173
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_19.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) <> 0
***  Proved C3:  start_byte + 8 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C5:  start_byte + 8 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) <> 0
<S>  New C1:  128 >= dns_types__byte__first
<S>  New C2:  128 <= dns_types__byte__last
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 0
<S>  New C1:  true
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 255
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
<S>  New C2:  true
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> 0 <= element(fld_bytes(input_packet), [
          i___1]) and element(fld_bytes(input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> 0 <= element(fld_bytes(output_packet), [
          i___1]) and element(fld_bytes(output_packet), [i___1]) <= 255)
<S>  New C4:  start_byte <= 8172
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New C6:  start_byte <= 2147483639
***  Proved C1:  true
***  Proved C2:  true
***  Proved C6:  start_byte <= 2147483639
     using hypothesis H30.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8172
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_20.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  not bit__and(element(fld_bytes(input_packet), [query_end_byte 
          + 8]), dns_types__dnssecmask) <> 0
***  Proved C1:  0 >= dns_types__byte__first
     using hypothesis H147.
***  Proved C2:  0 <= dns_types__byte__last
     using hypothesis H148.
***  Proved C3:  start_byte + 8 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C5:  start_byte + 8 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New C4:  start_byte <= 8172
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New C6:  start_byte <= 2147483639
***  Proved C6:  start_byte <= 2147483639
     using hypothesis H30.
>>>  Restructured hypothesis H204 into:
     >>>  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) = 0
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) = 0
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8172
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_21.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) <> 0
***  Proved C1:  0 >= dns_types__byte__first
     using hypothesis H147.
***  Proved C2:  0 <= dns_types__byte__last
     using hypothesis H148.
***  Proved C3:  start_byte + 9 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C5:  start_byte + 9 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New H208:  start_byte <= 8172
<S>  New C4:  start_byte <= 8171
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New H210:  start_byte <= 2147483639
<S>  New C6:  start_byte <= 2147483638
***  Proved C6:  start_byte <= 2147483638
     using hypothesis H30.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) <> 0
<S>  New H205:  128 >= dns_types__byte__first
<S>  New H206:  128 <= dns_types__byte__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H207:  start_byte >= - 7
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H209:  start_byte >= - 2147483656
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H205:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H206:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8171
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_22.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  not bit__and(element(fld_bytes(input_packet), [query_end_byte 
          + 8]), dns_types__dnssecmask) <> 0
---  Hypothesis H205 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H206 has been replaced by "true".  (It is already present, as 
          H148).
***  Proved C1:  0 >= dns_types__byte__first
     using hypothesis H147.
***  Proved C2:  0 <= dns_types__byte__last
     using hypothesis H148.
***  Proved C3:  start_byte + 9 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C5:  start_byte + 9 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New H208:  start_byte <= 8172
<S>  New C4:  start_byte <= 8171
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New H210:  start_byte <= 2147483639
<S>  New C6:  start_byte <= 2147483638
***  Proved C6:  start_byte <= 2147483638
     using hypothesis H30.
>>>  Restructured hypothesis H204 into:
     >>>  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) = 0
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) = 0
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H207:  start_byte >= - 7
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H209:  start_byte >= - 2147483656
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8171
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_23.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) <> 0
---  Hypothesis H211 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H212 has been replaced by "true".  (It is already present, as 
          H148).
***  Proved C1:  0 >= dns_types__byte__first
     using hypothesis H147.
***  Proved C2:  0 <= dns_types__byte__last
     using hypothesis H148.
***  Proved C3:  start_byte + 10 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C5:  start_byte + 10 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New H208:  start_byte <= 8172
<S>  New H214:  start_byte <= 8171
<S>  New C4:  start_byte <= 8170
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New H210:  start_byte <= 2147483639
<S>  New H216:  start_byte <= 2147483638
<S>  New C6:  start_byte <= 2147483637
***  Proved C6:  start_byte <= 2147483637
     using hypothesis H30.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) <> 0
<S>  New H205:  128 >= dns_types__byte__first
<S>  New H206:  128 <= dns_types__byte__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H207:  start_byte >= - 7
<S>  New H213:  start_byte >= - 8
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H209:  start_byte >= - 2147483656
<S>  New H215:  start_byte >= - 2147483657
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H205:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H206:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8170
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_24.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  not bit__and(element(fld_bytes(input_packet), [query_end_byte 
          + 8]), dns_types__dnssecmask) <> 0
---  Hypothesis H205 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H206 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H211 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H212 has been replaced by "true".  (It is already present, as 
          H148).
***  Proved C1:  0 >= dns_types__byte__first
     using hypothesis H147.
***  Proved C2:  0 <= dns_types__byte__last
     using hypothesis H148.
***  Proved C3:  start_byte + 10 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C5:  start_byte + 10 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New H208:  start_byte <= 8172
<S>  New H214:  start_byte <= 8171
<S>  New C4:  start_byte <= 8170
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New H210:  start_byte <= 2147483639
<S>  New H216:  start_byte <= 2147483638
<S>  New C6:  start_byte <= 2147483637
***  Proved C6:  start_byte <= 2147483637
     using hypothesis H30.
>>>  Restructured hypothesis H204 into:
     >>>  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) = 0
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) = 0
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H207:  start_byte >= - 7
<S>  New H213:  start_byte >= - 8
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H209:  start_byte >= - 2147483656
<S>  New H215:  start_byte >= - 2147483657
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8170
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_25.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) <> 0
---  Hypothesis H211 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H212 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H217 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H218 has been replaced by "true".  (It is already present, as 
          H148).
***  Proved C1:  0 >= dns_types__byte__first
     using hypothesis H147.
***  Proved C2:  0 <= dns_types__byte__last
     using hypothesis H148.
***  Proved C3:  start_byte + 11 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C5:  start_byte + 11 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New H208:  start_byte <= 8172
<S>  New H214:  start_byte <= 8171
<S>  New H220:  start_byte <= 8170
<S>  New C4:  start_byte <= 8169
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New H210:  start_byte <= 2147483639
<S>  New H216:  start_byte <= 2147483638
<S>  New H222:  start_byte <= 2147483637
<S>  New C6:  start_byte <= 2147483636
***  Proved C6:  start_byte <= 2147483636
     using hypothesis H30.
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) <> 0
<S>  New H205:  128 >= dns_types__byte__first
<S>  New H206:  128 <= dns_types__byte__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H207:  start_byte >= - 7
<S>  New H213:  start_byte >= - 8
<S>  New H219:  start_byte >= - 9
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H209:  start_byte >= - 2147483656
<S>  New H215:  start_byte >= - 2147483657
<S>  New H221:  start_byte >= - 2147483658
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H205:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H206:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8169
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_26.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  not bit__and(element(fld_bytes(input_packet), [query_end_byte 
          + 8]), dns_types__dnssecmask) <> 0
---  Hypothesis H205 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H206 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H211 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H212 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H217 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H218 has been replaced by "true".  (It is already present, as 
          H148).
***  Proved C1:  0 >= dns_types__byte__first
     using hypothesis H147.
***  Proved C2:  0 <= dns_types__byte__last
     using hypothesis H148.
***  Proved C3:  start_byte + 11 >= dns_types__packet_bytes_range__first
     using hypothesis H29.
***  Proved C5:  start_byte + 11 >= dns_types__packet_bytes_range__base__first
     using hypothesis H151.
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(input_packet), [i___1]) and element(fld_bytes(input_packet)
          , [i___1]) <= dns_types__byte__last)
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= 8180 -> dns_types__byte__first <= element(
          fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H65:  dns_types__header_bits div 8 <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New H208:  start_byte <= 8172
<S>  New H214:  start_byte <= 8171
<S>  New H220:  start_byte <= 8170
<S>  New C4:  start_byte <= 8169
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New H210:  start_byte <= 2147483639
<S>  New H216:  start_byte <= 2147483638
<S>  New H222:  start_byte <= 2147483637
<S>  New C6:  start_byte <= 2147483636
***  Proved C6:  start_byte <= 2147483636
     using hypothesis H30.
>>>  Restructured hypothesis H204 into:
     >>>  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) = 0
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  true
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) = 0
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H207:  start_byte >= - 7
<S>  New H213:  start_byte >= - 8
<S>  New H219:  start_byte >= - 9
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H209:  start_byte >= - 2147483656
<S>  New H215:  start_byte >= - 2147483657
<S>  New H221:  start_byte >= - 2147483658
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C4:  start_byte <= 8169
     using hypothesis H90.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_27.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) <> 0
---  Hypothesis H211 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H212 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H217 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H218 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H223 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H224 has been replaced by "true".  (It is already present, as 
          H148).
***  Proved C1:  additional_count + 1 >= dns_types__unsigned_short__first
     using hypothesis H54.
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
<S>  New C2:  additional_count <= 65534
***  Proved C2:  additional_count <= 65534
     using hypothesis H1.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_28.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  not bit__and(element(fld_bytes(input_packet), [query_end_byte 
          + 8]), dns_types__dnssecmask) <> 0
---  Hypothesis H205 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H206 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H211 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H212 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H217 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H218 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H223 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H224 has been replaced by "true".  (It is already present, as 
          H148).
***  Proved C1:  additional_count + 1 >= dns_types__unsigned_short__first
     using hypothesis H54.
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
<S>  New C2:  additional_count <= 65534
***  Proved C2:  additional_count <= 65534
     using hypothesis H1.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_29.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) <> 0
---  Hypothesis H211 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H212 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H217 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H218 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H223 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H224 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified C11 on reading formula in, to give:
     %%%  C11:  true
***  Proved C7:  dns_types__header_bits div 8 >= 
          dns_types__packet_bytes_range__first
     using hypothesis H64.
***  Proved C8:  dns_types__header_bits div 8 <= 
          dns_types__packet_bytes_range__last
     using hypothesis H65.
***  Proved C9:  dns_types__header_bits div 8 >= system__min_int
     using hypothesis H66.
***  Proved C10:  dns_types__header_bits div 8 <= system__max_int
     using hypothesis H67.
***  Proved C11:  true
***  Proved C12:  start_byte + 11 >= dns_types__packet_bytes_range__base__first
     using hypothesis H227.
***  Proved C13:  start_byte + 11 <= dns_types__packet_bytes_range__base__last
     using hypothesis H228.
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H56:  dns_types__udp_max_size >= 0
<S>  New H58:  start_byte + dns_types__header_bits div 8 >= 0
<S>  New H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 0
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 0
<S>  New C1:  start_byte + 11 + dns_types__header_bits div 8 >= 0
<S>  New C3:  start_byte + 11 + dns_types__header_bits div 8 >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H57:  dns_types__udp_max_size <= 8192
<S>  New H59:  start_byte + dns_types__header_bits div 8 <= 8192
<S>  New H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 8192
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 8192
<S>  New C2:  start_byte + 11 + dns_types__header_bits div 8 <= 8192
<S>  New C4:  start_byte + 11 + dns_types__header_bits div 8 <= 8192
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H62:  start_byte + dns_types__header_bits div 8 >= - 2147483648
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H209:  start_byte >= - 2147483656
<S>  New H215:  start_byte >= - 2147483657
<S>  New H221:  start_byte >= - 2147483658
<S>  New H227:  start_byte >= - 2147483659
<S>  New C5:  start_byte + 11 + dns_types__header_bits div 8 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New H210:  start_byte <= 2147483639
<S>  New H216:  start_byte <= 2147483638
<S>  New H222:  start_byte <= 2147483637
<S>  New H228:  start_byte <= 2147483636
<S>  New C6:  start_byte + 11 + dns_types__header_bits div 8 <= 2147483647
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte >= - 12
<S>  New H59:  start_byte <= 8180
<S>  New H62:  start_byte >= - 2147483660
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  12 <= dns_types__packet_bytes_range__last
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
<S>  New C1:  start_byte + 11 >= - 12
<S>  New C3:  start_byte + 11 >= - 12
<S>  New C2:  start_byte + 11 <= 8180
<S>  New C4:  start_byte + 11 <= 8180
<S>  New C5:  start_byte + 11 >= - 2147483660
<S>  New C6:  start_byte + 11 <= 2147483635
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  true
<S>  New H57:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) <> 0
<S>  New H205:  128 >= dns_types__byte__first
<S>  New H206:  128 <= dns_types__byte__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H207:  start_byte >= - 7
<S>  New H213:  start_byte >= - 8
<S>  New H219:  start_byte >= - 9
<S>  New H225:  start_byte >= - 10
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New H208:  start_byte <= 8172
<S>  New H214:  start_byte <= 8171
<S>  New H220:  start_byte <= 8170
<S>  New H226:  start_byte <= 8169
<S>  New H65:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H205:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H206:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
<S>  New H229:  additional_count >= - 1
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
<S>  New H230:  additional_count <= 65534
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
%%%  Simplified C1 further, to give:
     %%%  C1:  start_byte >= - 23
%%%  Simplified C2 further, to give:
     %%%  C2:  start_byte <= 8169
%%%  Simplified C3 further, to give:
     %%%  C3:  start_byte >= - 23
%%%  Simplified C4 further, to give:
     %%%  C4:  start_byte <= 8169
%%%  Simplified C5 further, to give:
     %%%  C5:  start_byte >= - 2147483671
%%%  Simplified C6 further, to give:
     %%%  C6:  start_byte <= 2147483624
***  Proved C1:  start_byte >= - 23
     using hypothesis H58.
***  Proved C2:  start_byte <= 8169
     using hypothesis H226.
***  Proved C3:  start_byte >= - 23
     using hypothesis H58.
***  Proved C4:  start_byte <= 8169
     using hypothesis H226.
***  Proved C5:  start_byte >= - 2147483671
     using hypothesis H69.
***  Proved C6:  start_byte <= 2147483624
     using hypothesis H70.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_30.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  not bit__and(element(fld_bytes(input_packet), [query_end_byte 
          + 8]), dns_types__dnssecmask) <> 0
---  Hypothesis H205 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H206 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H211 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H212 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H217 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H218 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H223 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H224 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified C11 on reading formula in, to give:
     %%%  C11:  true
***  Proved C7:  dns_types__header_bits div 8 >= 
          dns_types__packet_bytes_range__first
     using hypothesis H64.
***  Proved C8:  dns_types__header_bits div 8 <= 
          dns_types__packet_bytes_range__last
     using hypothesis H65.
***  Proved C9:  dns_types__header_bits div 8 >= system__min_int
     using hypothesis H66.
***  Proved C10:  dns_types__header_bits div 8 <= system__max_int
     using hypothesis H67.
***  Proved C11:  true
***  Proved C12:  start_byte + 11 >= dns_types__packet_bytes_range__base__first
     using hypothesis H227.
***  Proved C13:  start_byte + 11 <= dns_types__packet_bytes_range__base__last
     using hypothesis H228.
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H56:  dns_types__udp_max_size >= 0
<S>  New H58:  start_byte + dns_types__header_bits div 8 >= 0
<S>  New H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 0
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 0
<S>  New C1:  start_byte + 11 + dns_types__header_bits div 8 >= 0
<S>  New C3:  start_byte + 11 + dns_types__header_bits div 8 >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H57:  dns_types__udp_max_size <= 8192
<S>  New H59:  start_byte + dns_types__header_bits div 8 <= 8192
<S>  New H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 8192
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 8192
<S>  New C2:  start_byte + 11 + dns_types__header_bits div 8 <= 8192
<S>  New C4:  start_byte + 11 + dns_types__header_bits div 8 <= 8192
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H62:  start_byte + dns_types__header_bits div 8 >= - 2147483648
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H209:  start_byte >= - 2147483656
<S>  New H215:  start_byte >= - 2147483657
<S>  New H221:  start_byte >= - 2147483658
<S>  New H227:  start_byte >= - 2147483659
<S>  New C5:  start_byte + 11 + dns_types__header_bits div 8 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte + dns_types__header_bits div 8 <= 2147483647
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New H210:  start_byte <= 2147483639
<S>  New H216:  start_byte <= 2147483638
<S>  New H222:  start_byte <= 2147483637
<S>  New H228:  start_byte <= 2147483636
<S>  New C6:  start_byte + 11 + dns_types__header_bits div 8 <= 2147483647
>>>  Restructured hypothesis H204 into:
     >>>  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) = 0
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte >= - 12
<S>  New H59:  start_byte <= 8180
<S>  New H62:  start_byte >= - 2147483660
<S>  New H63:  start_byte <= 2147483635
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  12 <= dns_types__packet_bytes_range__last
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
<S>  New C1:  start_byte + 11 >= - 12
<S>  New C3:  start_byte + 11 >= - 12
<S>  New C2:  start_byte + 11 <= 8180
<S>  New C4:  start_byte + 11 <= 8180
<S>  New C5:  start_byte + 11 >= - 2147483660
<S>  New C6:  start_byte + 11 <= 2147483635
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  true
<S>  New H57:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) = 0
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H207:  start_byte >= - 7
<S>  New H213:  start_byte >= - 8
<S>  New H219:  start_byte >= - 9
<S>  New H225:  start_byte >= - 10
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New H208:  start_byte <= 8172
<S>  New H214:  start_byte <= 8171
<S>  New H220:  start_byte <= 8170
<S>  New H226:  start_byte <= 8169
<S>  New H65:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
<S>  New H229:  additional_count >= - 1
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
<S>  New H230:  additional_count <= 65534
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
%%%  Simplified C1 further, to give:
     %%%  C1:  start_byte >= - 23
%%%  Simplified C2 further, to give:
     %%%  C2:  start_byte <= 8169
%%%  Simplified C3 further, to give:
     %%%  C3:  start_byte >= - 23
%%%  Simplified C4 further, to give:
     %%%  C4:  start_byte <= 8169
%%%  Simplified C5 further, to give:
     %%%  C5:  start_byte >= - 2147483671
%%%  Simplified C6 further, to give:
     %%%  C6:  start_byte <= 2147483624
***  Proved C1:  start_byte >= - 23
     using hypothesis H58.
***  Proved C2:  start_byte <= 8169
     using hypothesis H226.
***  Proved C3:  start_byte >= - 23
     using hypothesis H58.
***  Proved C4:  start_byte <= 8169
     using hypothesis H226.
***  Proved C5:  start_byte >= - 2147483671
     using hypothesis H69.
***  Proved C6:  start_byte <= 2147483624
     using hypothesis H70.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_31.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) <> 0
---  Hypothesis H211 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H212 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H217 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H218 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H223 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H224 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H233 has been replaced by "true".  (It is already present, as 
          H231).
---  Hypothesis H234 has been replaced by "true".  (It is already present, as 
          H232).
---  Hypothesis H237 has been replaced by "true".  (It is already present, as 
          H64).
---  Hypothesis H238 has been replaced by "true".  (It is already present, as 
          H65).
---  Hypothesis H239 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H240 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H241 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H242 has been replaced by "true".  (It is already present, as 
          H227).
---  Hypothesis H243 has been replaced by "true".  (It is already present, as 
          H228).
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  true
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__udp_max_size
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_size
***  Proved C2:  start_byte + 11 + dns_types__header_bits div 8 <= 
          dns_types__packet_size
     using hypothesis H90.
***  Proved C3:  additional_count + 1 >= additional_count
***  Proved C4:  true
***  Proved C5:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__udp_max_size
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
<S>  New C6:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte + 12 <= dns_types__packet_bytes_range__base__last
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  12 <= dns_types__packet_bytes_range__last
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
<S>  New H231:  start_byte + 11 + 12 >= dns_types__packet_length_range__first
<S>  New H232:  start_byte + 11 + 12 <= dns_types__packet_length_range__last
<S>  New H235:  start_byte + 11 + 12 >= 
          dns_types__packet_bytes_range__base__first
<S>  New H236:  start_byte + 11 + 12 <= 
          dns_types__packet_bytes_range__base__last
<S>  New C1:  start_byte + 11 >= 1
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
<S>  New C6:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) <> 0
<S>  New H205:  128 >= dns_types__byte__first
<S>  New H206:  128 <= dns_types__byte__last
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H231:  start_byte >= - 23
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H232:  start_byte <= 8169
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H207:  start_byte >= - 7
<S>  New H213:  start_byte >= - 8
<S>  New H219:  start_byte >= - 9
<S>  New H225:  start_byte >= - 10
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New H208:  start_byte <= 8172
<S>  New H214:  start_byte <= 8171
<S>  New H220:  start_byte <= 8170
<S>  New H226:  start_byte <= 8169
<S>  New H65:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H209:  start_byte >= - 2147483656
<S>  New H215:  start_byte >= - 2147483657
<S>  New H221:  start_byte >= - 2147483658
<S>  New H227:  start_byte >= - 2147483659
<S>  New H62:  start_byte >= - 2147483660
<S>  New H235:  start_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New H210:  start_byte <= 2147483639
<S>  New H216:  start_byte <= 2147483638
<S>  New H222:  start_byte <= 2147483637
<S>  New H228:  start_byte <= 2147483636
<S>  New H63:  start_byte <= 2147483635
<S>  New H236:  start_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H205:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H206:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
<S>  New H229:  additional_count >= - 1
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
<S>  New H230:  additional_count <= 65534
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
%%%  Simplified C1 further, to give:
     %%%  C1:  start_byte >= - 10
***  Proved C6:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
     using hypothesis H146.
***  Proved C1:  start_byte >= - 10
     using hypothesis H225.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_32.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) = 0
%%%  Simplified H118 on reading formula in, to give:
     %%%  H118:  to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt
%%%  Simplified H141 on reading formula in, to give:
     %%%  H141:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
%%%  Simplified H142 on reading formula in, to give:
     %%%  H142:  dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
---  Hypothesis H143 has been replaced by "true".  (It is already present, as 
          H141).
---  Hypothesis H144 has been replaced by "true".  (It is already present, as 
          H142).
%%%  Simplified H145 on reading formula in, to give:
     %%%  H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__packet_length_range__first
%%%  Simplified H146 on reading formula in, to give:
     %%%  H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_length_range__last
---  Hypothesis H153 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H154 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H165 has been replaced by "true".  (It is already present, as 
          H163).
---  Hypothesis H166 has been replaced by "true".  (It is already present, as 
          H164).
%%%  Simplified H169 on reading formula in, to give:
     %%%  H169:  true
%%%  Simplified H170 on reading formula in, to give:
     %%%  H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__byte__first
%%%  Simplified H171 on reading formula in, to give:
     %%%  H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__byte__last
---  Hypothesis H172 has been replaced by "true".  (It is already present, as 
          H170).
---  Hypothesis H173 has been replaced by "true".  (It is already present, as 
          H171).
%%%  Simplified H174 on reading formula in, to give:
     %%%  H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H175 on reading formula in, to give:
     %%%  H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H176 has been replaced by "true".  (It is already present, as 
          H169).
%%%  Simplified H181 on reading formula in, to give:
     %%%  H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__byte__first
%%%  Simplified H182 on reading formula in, to give:
     %%%  H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__byte__last
---  Hypothesis H183 has been replaced by "true".  (It is already present, as 
          H181).
---  Hypothesis H184 has been replaced by "true".  (It is already present, as 
          H182).
%%%  Simplified H185 on reading formula in, to give:
     %%%  H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
%%%  Simplified H186 on reading formula in, to give:
     %%%  H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
---  Hypothesis H187 has been replaced by "true".  (It is already present, as 
          H169).
---  Hypothesis H192 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H193 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H198 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H199 has been replaced by "true".  (It is already present, as 
          H148).
%%%  Simplified H204 on reading formula in, to give:
     %%%  H204:  not bit__and(element(fld_bytes(input_packet), [query_end_byte 
          + 8]), dns_types__dnssecmask) <> 0
---  Hypothesis H205 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H206 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H211 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H212 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H217 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H218 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H223 has been replaced by "true".  (It is already present, as 
          H147).
---  Hypothesis H224 has been replaced by "true".  (It is already present, as 
          H148).
---  Hypothesis H233 has been replaced by "true".  (It is already present, as 
          H231).
---  Hypothesis H234 has been replaced by "true".  (It is already present, as 
          H232).
---  Hypothesis H237 has been replaced by "true".  (It is already present, as 
          H64).
---  Hypothesis H238 has been replaced by "true".  (It is already present, as 
          H65).
---  Hypothesis H239 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H240 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H241 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H242 has been replaced by "true".  (It is already present, as 
          H227).
---  Hypothesis H243 has been replaced by "true".  (It is already present, as 
          H228).
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  true
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__udp_max_size
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) <= 
          dns_types__packet_size
***  Proved C2:  start_byte + 11 + dns_types__header_bits div 8 <= 
          dns_types__packet_size
     using hypothesis H90.
***  Proved C3:  additional_count + 1 >= additional_count
***  Proved C4:  true
***  Proved C5:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(dns_types__packet_size, element(
          fld_bytes(input_packet), [query_end_byte + 4]) * 256 + element(
          fld_bytes(input_packet), [query_end_byte + 5]))) >= 
          dns_types__udp_max_size
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 
          dns_types__packet_length_range__first
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 
          dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
<S>  New C6:  dns_types__packet_length_range__max(dns_types__udp_max_size, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
>>>  Restructured hypothesis H204 into:
     >>>  H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , dns_types__dnssecmask) = 0
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte + 12 <= dns_types__packet_bytes_range__base__last
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  12 <= dns_types__packet_bytes_range__last
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
<S>  New H231:  start_byte + 11 + 12 >= dns_types__packet_length_range__first
<S>  New H232:  start_byte + 11 + 12 <= dns_types__packet_length_range__last
<S>  New H235:  start_byte + 11 + 12 >= 
          dns_types__packet_bytes_range__base__first
<S>  New H236:  start_byte + 11 + 12 <= 
          dns_types__packet_bytes_range__base__last
<S>  New C1:  start_byte + 11 >= 1
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= dns_types__packet_length_range__first
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= dns_types__packet_length_range__last
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= dns_types__byte__first
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= dns_types__byte__last
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 
          dns_types__packet_length_range__base__last
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= dns_types__byte__first
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= dns_types__byte__last
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 
          dns_types__packet_length_range__base__first
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 
          dns_types__packet_length_range__base__last
<S>  New C6:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(4).
     This was achieved by replacing all occurrences of dns_types__dnssecmask by:
          128.
<S>  New H204:  bit__and(element(fld_bytes(input_packet), [query_end_byte + 8])
          , 128) = 0
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H141:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) >= 0
<S>  New H58:  start_byte >= - 12
<S>  New H231:  start_byte >= - 23
<S>  New H56:  true
<S>  New H145:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) >= 0
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H142:  dns_types__unsigned_short__min(8192, element(fld_bytes(
          input_packet), [query_end_byte + 4]) * 256 + element(fld_bytes(
          input_packet), [query_end_byte + 5])) <= 8192
<S>  New H59:  start_byte <= 8180
<S>  New H232:  start_byte <= 8169
<S>  New H57:  true
<S>  New H146:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
-S-  Applied substitution rule create_respo_rules(28).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__first by:
          - 2147483648.
<S>  New H174:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= - 2147483648
<S>  New H185:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(29).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__base__last by:
          2147483647.
<S>  New H175:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 2147483647
<S>  New H186:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H123:  query_end_byte >= - 4
<S>  New H131:  query_end_byte >= - 3
<S>  New H137:  query_end_byte >= - 7
<S>  New H149:  start_byte >= 0
<S>  New H155:  start_byte >= - 1
<S>  New H159:  start_byte >= - 2
<S>  New H177:  start_byte >= - 3
<S>  New H188:  start_byte >= - 4
<S>  New H194:  start_byte >= - 5
<S>  New H200:  start_byte >= - 6
<S>  New H207:  start_byte >= - 7
<S>  New H213:  start_byte >= - 8
<S>  New H219:  start_byte >= - 9
<S>  New H225:  start_byte >= - 10
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H124:  query_end_byte <= 8175
<S>  New H132:  query_end_byte <= 8176
<S>  New H138:  query_end_byte <= 8172
<S>  New H150:  start_byte <= 8179
<S>  New H156:  start_byte <= 8178
<S>  New H160:  start_byte <= 8177
<S>  New H178:  start_byte <= 8176
<S>  New H189:  start_byte <= 8175
<S>  New H195:  start_byte <= 8174
<S>  New H201:  start_byte <= 8173
<S>  New H208:  start_byte <= 8172
<S>  New H214:  start_byte <= 8171
<S>  New H220:  start_byte <= 8170
<S>  New H226:  start_byte <= 8169
<S>  New H65:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H125:  query_end_byte >= - 2147483653
<S>  New H133:  query_end_byte >= - 2147483652
<S>  New H139:  query_end_byte >= - 2147483656
<S>  New H151:  start_byte >= - 2147483649
<S>  New H157:  start_byte >= - 2147483650
<S>  New H161:  start_byte >= - 2147483651
<S>  New H179:  start_byte >= - 2147483652
<S>  New H190:  start_byte >= - 2147483653
<S>  New H196:  start_byte >= - 2147483654
<S>  New H202:  start_byte >= - 2147483655
<S>  New H209:  start_byte >= - 2147483656
<S>  New H215:  start_byte >= - 2147483657
<S>  New H221:  start_byte >= - 2147483658
<S>  New H227:  start_byte >= - 2147483659
<S>  New H62:  start_byte >= - 2147483660
<S>  New H235:  start_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H126:  query_end_byte <= 2147483642
<S>  New H134:  query_end_byte <= 2147483643
<S>  New H140:  query_end_byte <= 2147483639
<S>  New H152:  start_byte <= 2147483646
<S>  New H158:  start_byte <= 2147483645
<S>  New H162:  start_byte <= 2147483644
<S>  New H180:  start_byte <= 2147483643
<S>  New H191:  start_byte <= 2147483642
<S>  New H197:  start_byte <= 2147483641
<S>  New H203:  start_byte <= 2147483640
<S>  New H210:  start_byte <= 2147483639
<S>  New H216:  start_byte <= 2147483638
<S>  New H222:  start_byte <= 2147483637
<S>  New H228:  start_byte <= 2147483636
<S>  New H63:  start_byte <= 2147483635
<S>  New H236:  start_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H135:  element(fld_bytes(input_packet), [query_end_byte + 8]) >= 0
<S>  New H147:  true
<S>  New H163:  from_query_type(dns_types__opt) mod 256 >= 0
<S>  New H170:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 >= 0
<S>  New H181:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 >= 0
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H136:  element(fld_bytes(input_packet), [query_end_byte + 8]) <= 255
<S>  New H148:  true
<S>  New H164:  from_query_type(dns_types__opt) mod 256 <= 255
<S>  New H171:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) div 256 <= 255
<S>  New H182:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) mod 256 <= 255
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
<S>  New H119:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H121:  element(fld_bytes(input_packet), [query_end_byte + 5]) >= 0
<S>  New H129:  element(fld_bytes(input_packet), [query_end_byte + 4]) >= 0
<S>  New H229:  additional_count >= - 1
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
<S>  New H120:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H122:  element(fld_bytes(input_packet), [query_end_byte + 5]) <= 65535
<S>  New H130:  element(fld_bytes(input_packet), [query_end_byte + 4]) <= 65535
<S>  New H230:  additional_count <= 65534
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
<S>  New H127:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 >= 
          - 2147483648
<S>  New H167:  from_query_type(dns_types__opt) mod 256 >= - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
<S>  New H128:  element(fld_bytes(input_packet), [query_end_byte + 4]) * 256 <= 
          2147483647
<S>  New H168:  from_query_type(dns_types__opt) mod 256 <= 2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
%%%  Simplified C1 further, to give:
     %%%  C1:  start_byte >= - 10
***  Proved C6:  dns_types__packet_length_range__max(512, 
          dns_types__unsigned_short__min(8192, element(fld_bytes(input_packet), 
          [query_end_byte + 4]) * 256 + element(fld_bytes(input_packet), [
          query_end_byte + 5]))) <= 8192
     using hypothesis H146.
***  Proved C1:  start_byte >= - 10
     using hypothesis H225.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_33.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H93 has been replaced by "true".  (It is already present, as 
          H91).
---  Hypothesis H94 has been replaced by "true".  (It is already present, as 
          H92).
%%%  Simplified H117 on reading formula in, to give:
     %%%  H117:  not (element(fld_bytes(input_packet), [query_end_byte + 1]) = 
          0 and to_query_type(element(fld_bytes(input_packet), [query_end_byte 
          + 2]) * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) 
          = dns_types__opt)
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  true
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  true
***  Proved C3:  true
***  Proved C4:  additional_count <= additional_count + 1
***  Proved C5:  true
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H90:  start_byte + 11 + dns_types__header_bits div 8 < 8192
<S>  New C2:  start_byte + dns_types__header_bits div 8 <= 8192
<S>  New C6:  dns_types__udp_max_size <= 8192
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New C6:  true
***  Proved C6:  true
>>>  Restructured hypothesis H117 into:
     >>>  H117:  element(fld_bytes(input_packet), [query_end_byte + 1]) <> 0 or 
          to_query_type(element(fld_bytes(input_packet), [query_end_byte + 2]) 
          * 256 + element(fld_bytes(input_packet), [query_end_byte + 3])) <> 
          dns_types__opt
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte + 12 <= dns_types__packet_bytes_range__base__last
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  12 <= dns_types__packet_bytes_range__last
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  query_end_byte + 11 + 12 <= input_bytes
<S>  New H90:  start_byte + 11 < 8180
<S>  New C1:  start_byte >= 1
<S>  New C2:  start_byte <= 8180
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(21).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H91:  element(fld_bytes(input_packet), [query_end_byte + 1]) >= 0
<S>  New H115:  true
-S-  Applied substitution rule create_respo_rules(22).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H92:  element(fld_bytes(input_packet), [query_end_byte + 1]) <= 255
<S>  New H116:  true
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H56:  true
<S>  New H58:  start_byte >= - 12
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H57:  true
<S>  New H59:  start_byte <= 8180
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H95:  query_end_byte >= 0
<S>  New H103:  query_end_byte >= - 2
<S>  New H111:  query_end_byte >= - 1
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H96:  query_end_byte <= 8179
<S>  New H104:  query_end_byte <= 8177
<S>  New H112:  query_end_byte <= 8178
<S>  New H65:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H97:  query_end_byte >= - 2147483649
<S>  New H105:  query_end_byte >= - 2147483651
<S>  New H113:  query_end_byte >= - 2147483650
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H98:  query_end_byte <= 2147483646
<S>  New H106:  query_end_byte <= 2147483644
<S>  New H114:  query_end_byte <= 2147483645
<S>  New H63:  start_byte <= 2147483635
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
<S>  New H101:  element(fld_bytes(input_packet), [query_end_byte + 3]) >= 0
<S>  New H109:  element(fld_bytes(input_packet), [query_end_byte + 2]) >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
<S>  New H102:  element(fld_bytes(input_packet), [query_end_byte + 3]) <= 65535
<S>  New H110:  element(fld_bytes(input_packet), [query_end_byte + 2]) <= 65535
-S-  Applied substitution rule create_respo_rules(46).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__first by:
          - 2147483648.
<S>  New H99:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) >= - 2147483648
<S>  New H107:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 >= 
          - 2147483648
-S-  Applied substitution rule create_respo_rules(47).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__base__last by:
          2147483647.
<S>  New H100:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 + 
          element(fld_bytes(input_packet), [query_end_byte + 3]) <= 2147483647
<S>  New H108:  element(fld_bytes(input_packet), [query_end_byte + 2]) * 256 <= 
          2147483647
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  query_end_byte + 23 <= input_bytes
%%%  Simplified H90 further, to give:
     %%%  H90:  start_byte < 8169
***  Proved C1:  start_byte >= 1
     using hypothesis H29.
***  Proved C2:  start_byte <= 8180
     using hypothesis H59.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_create_response_edns_34.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, dns_types__packet_bytes_range__first <= 
          i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dns_types__response_code__first <= fld_rcode(fld_header(
          input_packet))
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          input_packet))
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, dns_types__packet_bytes_range__first 
          <= i___1 and i___1 <= dns_types__packet_bytes_range__last -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  dns_types__response_code__first <= fld_rcode(fld_header(
          output_packet))
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  dns_types__opcode_type__first <= fld_opcode(fld_header(
          output_packet))
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
---  Hypothesis H61 has been replaced by "true".  (It is already present, as 
          H59).
%%%  Simplified H68 on reading formula in, to give:
     %%%  H68:  true
---  Hypothesis H71 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H72 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H73 has been replaced by "true".  (It is already present, as 
          H68).
---  Hypothesis H82 has been replaced by "true".  (It is already present, as 
          H66).
---  Hypothesis H83 has been replaced by "true".  (It is already present, as 
          H67).
---  Hypothesis H84 has been replaced by "true".  (It is already present, as 
          H68).
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  true
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  true
***  Proved C3:  true
***  Proved C4:  additional_count <= additional_count + 1
***  Proved C5:  true
-S-  Applied substitution rule create_respo_rules(1).
     This was achieved by replacing all occurrences of dns_types__packet_size 
          by:
          8192.
<S>  New H89:  not (query_end_byte + 11 + dns_types__header_bits div 8 <= 
          input_bytes and start_byte + 11 + dns_types__header_bits div 8 < 8192)
<S>  New C2:  start_byte + dns_types__header_bits div 8 <= 8192
<S>  New C6:  dns_types__udp_max_size <= 8192
-S-  Applied substitution rule create_respo_rules(3).
     This was achieved by replacing all occurrences of dns_types__udp_max_size 
          by:
          512.
<S>  New H56:  512 >= dns_types__packet_length_range__first
<S>  New H57:  512 <= dns_types__packet_length_range__last
<S>  New C6:  true
***  Proved C6:  true
>>>  Restructured hypothesis H89 into:
     >>>  H89:  input_bytes < query_end_byte + 11 + dns_types__header_bits div 
          8 or 8192 <= start_byte + 11 + dns_types__header_bits div 8
-S-  Applied substitution rule create_respo_rules(2).
     This was achieved by replacing all occurrences of dns_types__header_bits 
          by:
          96.
<S>  New H58:  start_byte + 12 >= dns_types__packet_length_range__first
<S>  New H59:  start_byte + 12 <= dns_types__packet_length_range__last
<S>  New H62:  start_byte + 12 >= dns_types__packet_bytes_range__base__first
<S>  New H63:  start_byte + 12 <= dns_types__packet_bytes_range__base__last
<S>  New H64:  12 >= dns_types__packet_bytes_range__first
<S>  New H65:  12 <= dns_types__packet_bytes_range__last
<S>  New H66:  12 >= system__min_int
<S>  New H67:  12 <= system__max_int
<S>  New H69:  start_byte + 11 + 12 >= integer__base__first
<S>  New H70:  start_byte + 11 + 12 <= integer__base__last
<S>  New H80:  query_end_byte + 11 + 12 >= integer__base__first
<S>  New H81:  query_end_byte + 11 + 12 <= integer__base__last
<S>  New H89:  input_bytes < query_end_byte + 11 + 12 or 8180 <= start_byte + 11
<S>  New C1:  start_byte >= 1
<S>  New C2:  start_byte <= 8180
-S-  Applied substitution rule create_respo_rules(5).
     This was achieved by replacing all occurrences of system__min_int by:
          - 9223372036854775808.
<S>  New H66:  true
-S-  Applied substitution rule create_respo_rules(6).
     This was achieved by replacing all occurrences of system__max_int by:
          9223372036854775807.
<S>  New H67:  true
-S-  Applied substitution rule create_respo_rules(16).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H76:  start_byte >= - 2147483648
<S>  New H78:  input_bytes >= - 2147483648
<S>  New H87:  query_end_byte >= - 2147483648
-S-  Applied substitution rule create_respo_rules(17).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H77:  start_byte <= 2147483647
<S>  New H79:  input_bytes <= 2147483647
<S>  New H88:  query_end_byte <= 2147483647
-S-  Applied substitution rule create_respo_rules(18).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New H74:  start_byte >= - 2147483659
<S>  New H85:  query_end_byte >= - 2147483659
<S>  New H69:  start_byte >= - 2147483671
<S>  New H80:  query_end_byte >= - 2147483671
-S-  Applied substitution rule create_respo_rules(19).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New H75:  start_byte <= 2147483636
<S>  New H86:  query_end_byte <= 2147483636
<S>  New H70:  start_byte <= 2147483624
<S>  New H81:  query_end_byte <= 2147483624
-S-  Applied substitution rule create_respo_rules(26).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__first by:
          0.
<S>  New H25:  input_bytes >= 0
<S>  New H56:  true
<S>  New H58:  start_byte >= - 12
-S-  Applied substitution rule create_respo_rules(27).
     This was achieved by replacing all occurrences of 
          dns_types__packet_length_range__last by:
          8192.
<S>  New H26:  input_bytes <= 8192
<S>  New H57:  true
<S>  New H59:  start_byte <= 8180
-S-  Applied substitution rule create_respo_rules(31).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H27:  query_end_byte >= 1
<S>  New H29:  start_byte >= 1
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          dns_types__packet_bytes_range__last -> dns_types__byte__first <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
<S>  New H64:  true
-S-  Applied substitution rule create_respo_rules(32).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__last by:
          8180.
<S>  New H28:  query_end_byte <= 8180
<S>  New H30:  start_byte <= 8180
<S>  New H65:  true
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(input_packet), [i___1]) 
          and element(fld_bytes(input_packet), [i___1]) <= 
          dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 
          dns_types__byte__first <= element(fld_bytes(output_packet), [i___1]) 
          and element(fld_bytes(output_packet), [i___1]) <= 
          dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(33).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__first by:
          - 2147483648.
<S>  New H62:  start_byte >= - 2147483660
-S-  Applied substitution rule create_respo_rules(34).
     This was achieved by replacing all occurrences of 
          dns_types__packet_bytes_range__base__last by:
          2147483647.
<S>  New H63:  start_byte <= 2147483635
-S-  Applied substitution rule create_respo_rules(37).
     This was achieved by replacing all occurrences of dns_types__byte__first 
          by:
          0.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= dns_types__byte__last)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= dns_types__byte__last)
-S-  Applied substitution rule create_respo_rules(38).
     This was achieved by replacing all occurrences of dns_types__byte__last by:
          255.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(input_packet), [i___1]) and element(fld_bytes(
          input_packet), [i___1]) <= 255)
<S>  New H31:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 8180 -> 0 <= 
          element(fld_bytes(output_packet), [i___1]) and element(fld_bytes(
          output_packet), [i___1]) <= 255)
-S-  Applied substitution rule create_respo_rules(44).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__first by:
          0.
<S>  New H3:  fld_arcount(fld_header(input_packet)) >= 0
<S>  New H5:  fld_nscount(fld_header(input_packet)) >= 0
<S>  New H7:  fld_ancount(fld_header(input_packet)) >= 0
<S>  New H9:  fld_qdcount(fld_header(input_packet)) >= 0
<S>  New H23:  fld_messageid(fld_header(input_packet)) >= 0
<S>  New H32:  fld_arcount(fld_header(output_packet)) >= 0
<S>  New H34:  fld_nscount(fld_header(output_packet)) >= 0
<S>  New H36:  fld_ancount(fld_header(output_packet)) >= 0
<S>  New H38:  fld_qdcount(fld_header(output_packet)) >= 0
<S>  New H52:  fld_messageid(fld_header(output_packet)) >= 0
<S>  New H54:  additional_count >= 0
-S-  Applied substitution rule create_respo_rules(45).
     This was achieved by replacing all occurrences of 
          dns_types__unsigned_short__last by:
          65535.
<S>  New H1:  additional_count < 65535
<S>  New H4:  fld_arcount(fld_header(input_packet)) <= 65535
<S>  New H6:  fld_nscount(fld_header(input_packet)) <= 65535
<S>  New H8:  fld_ancount(fld_header(input_packet)) <= 65535
<S>  New H10:  fld_qdcount(fld_header(input_packet)) <= 65535
<S>  New H24:  fld_messageid(fld_header(input_packet)) <= 65535
<S>  New H33:  fld_arcount(fld_header(output_packet)) <= 65535
<S>  New H35:  fld_nscount(fld_header(output_packet)) <= 65535
<S>  New H37:  fld_ancount(fld_header(output_packet)) <= 65535
<S>  New H39:  fld_qdcount(fld_header(output_packet)) <= 65535
<S>  New H53:  fld_messageid(fld_header(output_packet)) <= 65535
<S>  New H55:  additional_count <= 65535
-S-  Applied substitution rule create_respo_rules(50).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__first by:
          dns_types__query.
<S>  New H20:  dns_types__query <= fld_opcode(fld_header(input_packet))
<S>  New H49:  dns_types__query <= fld_opcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(51).
     This was achieved by replacing all occurrences of 
          dns_types__opcode_type__last by:
          dns_types__status.
<S>  New H21:  fld_opcode(fld_header(input_packet)) <= dns_types__status
<S>  New H50:  fld_opcode(fld_header(output_packet)) <= dns_types__status
-S-  Applied substitution rule create_respo_rules(76).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__first by:
          dns_types__no_error.
<S>  New H11:  dns_types__no_error <= fld_rcode(fld_header(input_packet))
<S>  New H40:  dns_types__no_error <= fld_rcode(fld_header(output_packet))
-S-  Applied substitution rule create_respo_rules(77).
     This was achieved by replacing all occurrences of 
          dns_types__response_code__last by:
          dns_types__refused.
<S>  New H12:  fld_rcode(fld_header(input_packet)) <= dns_types__refused
<S>  New H41:  fld_rcode(fld_header(output_packet)) <= dns_types__refused
%%%  Simplified H89 further, to give:
     %%%  H89:  input_bytes < query_end_byte + 23 or 8169 <= start_byte
***  Proved C1:  start_byte >= 1
     using hypothesis H29.
***  Proved C2:  start_byte <= 8180
     using hypothesis H59.
***  PROVED VC.

