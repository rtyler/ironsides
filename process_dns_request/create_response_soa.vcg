           *******************************************************
                       Semantic Analysis of SPARK Text
                             Examiner GPL Edition

           *******************************************************


             procedure Process_Dns_Request.Create_Response_SOA




For path(s) from start to run-time check associated with statement of line 558:

procedure_create_response_soa_1.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
        ->
C1:    start_byte >= dns_types__packet_bytes_range__first .
C2:    start_byte <= dns_types__packet_bytes_range__last .
 

For path(s) from start to run-time check associated with statement of line 560:

procedure_create_response_soa_2.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
        ->
C1:    num_found__1 >= rr_type__numberofrecordstype__first .
C2:    num_found__1 <= rr_type__numberofrecordstype__last .
 

For path(s) from start to run-time check associated with statement of line 566:

procedure_create_response_soa_3.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
        ->
C1:    1 >= natural__first .
C2:    1 <= natural__last .
 

For path(s) from start to run-time check associated with statement of line 567:

procedure_create_response_soa_4.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
        ->
C1:    1 >= rr_type__returnedrecordsindextype__first .
C2:    1 <= rr_type__returnedrecordsindextype__last .
 

For path(s) from start to run-time check associated with statement of line 567:

procedure_create_response_soa_5.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
        ->
C1:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
C2:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
 

For path(s) from start to run-time check associated with statement of line 568:

procedure_create_response_soa_6.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
        ->
C1:    1 >= rr_type__returnedrecordsindextype__first .
C2:    1 <= rr_type__returnedrecordsindextype__last .
 

For path(s) from start to run-time check associated with statement of line 568:

procedure_create_response_soa_7.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
        ->
C1:    rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
C2:    rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
 

For path(s) from start to run-time check associated with statement of line 569:

procedure_create_response_soa_8.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
        ->
C1:    dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
C2:    dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
C3:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
C4:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
C5:    dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
C6:    dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
C7:    32 + dns_types__header_bits div 8 >= system__min_int .
C8:    32 + dns_types__header_bits div 8 <= system__max_int .
C9:    dns_types__header_bits div 8 >= system__min_int .
C10:   dns_types__header_bits div 8 <= system__max_int .
C11:   8 <> 0 .
C12:   start_byte >= integer__first .
C13:   start_byte <= integer__last .
 

For path(s) from start to precondition check associated with statement of line 572:

procedure_create_response_soa_9.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
        ->
C1:    (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus >= 
           unsigned_types__unsigned16__first .
C2:    (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus <= 
           unsigned_types__unsigned16__last .
C3:    start_byte + 1 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 1 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 1 <= dns_types__packet_bytes_range__last - 1 .
C6:    qname_location >= unsigned_types__unsigned16__first .
C7:    qname_location <= unsigned_types__unsigned16__last .
C8:    start_byte + 1 >= dns_types__packet_bytes_range__base__first .
C9:    start_byte + 1 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 574:

procedure_create_response_soa_10.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
H111:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus >= 
           unsigned_types__unsigned16__first .
H112:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus <= 
           unsigned_types__unsigned16__last .
H113:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H114:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H115:  start_byte + 1 <= dns_types__packet_bytes_range__last - 1 .
H116:  qname_location >= unsigned_types__unsigned16__first .
H117:  qname_location <= unsigned_types__unsigned16__last .
H118:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H119:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H120:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__2), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__2), [i___1]) <= dns_types__byte__last))) .
H121:  fld_header(output_packet__2) = fld_header(
           output_packet) .
H122:  output_packet__2 = upf_bytes(output_packet, fld_bytes(
           output_packet__2)) .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 3 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 3 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 3 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 3 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 575:

procedure_create_response_soa_11.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
H111:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus >= 
           unsigned_types__unsigned16__first .
H112:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus <= 
           unsigned_types__unsigned16__last .
H113:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H114:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H115:  start_byte + 1 <= dns_types__packet_bytes_range__last - 1 .
H116:  qname_location >= unsigned_types__unsigned16__first .
H117:  qname_location <= unsigned_types__unsigned16__last .
H118:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H119:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H120:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__2), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__2), [i___1]) <= dns_types__byte__last))) .
H121:  fld_header(output_packet__2) = fld_header(
           output_packet) .
H122:  output_packet__2 = upf_bytes(output_packet, fld_bytes(
           output_packet__2)) .
H123:  0 >= dns_types__byte__first .
H124:  0 <= dns_types__byte__last .
H125:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H126:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H127:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H128:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    6 >= dns_types__byte__first .
C2:    6 <= dns_types__byte__last .
C3:    start_byte + 4 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 4 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 4 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 4 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 577:

procedure_create_response_soa_12.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
H111:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus >= 
           unsigned_types__unsigned16__first .
H112:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus <= 
           unsigned_types__unsigned16__last .
H113:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H114:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H115:  start_byte + 1 <= dns_types__packet_bytes_range__last - 1 .
H116:  qname_location >= unsigned_types__unsigned16__first .
H117:  qname_location <= unsigned_types__unsigned16__last .
H118:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H119:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H120:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__2), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__2), [i___1]) <= dns_types__byte__last))) .
H121:  fld_header(output_packet__2) = fld_header(
           output_packet) .
H122:  output_packet__2 = upf_bytes(output_packet, fld_bytes(
           output_packet__2)) .
H123:  0 >= dns_types__byte__first .
H124:  0 <= dns_types__byte__last .
H125:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H126:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H127:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H128:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H129:  6 >= dns_types__byte__first .
H130:  6 <= dns_types__byte__last .
H131:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
C3:    start_byte + 5 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 5 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 5 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 5 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 578:

procedure_create_response_soa_13.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
H111:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus >= 
           unsigned_types__unsigned16__first .
H112:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus <= 
           unsigned_types__unsigned16__last .
H113:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H114:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H115:  start_byte + 1 <= dns_types__packet_bytes_range__last - 1 .
H116:  qname_location >= unsigned_types__unsigned16__first .
H117:  qname_location <= unsigned_types__unsigned16__last .
H118:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H119:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H120:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__2), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__2), [i___1]) <= dns_types__byte__last))) .
H121:  fld_header(output_packet__2) = fld_header(
           output_packet) .
H122:  output_packet__2 = upf_bytes(output_packet, fld_bytes(
           output_packet__2)) .
H123:  0 >= dns_types__byte__first .
H124:  0 <= dns_types__byte__last .
H125:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H126:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H127:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H128:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H129:  6 >= dns_types__byte__first .
H130:  6 <= dns_types__byte__last .
H131:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  0 >= dns_types__byte__first .
H136:  0 <= dns_types__byte__last .
H137:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H138:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H139:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H140:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    1 >= dns_types__byte__first .
C2:    1 <= dns_types__byte__last .
C3:    start_byte + 6 >= dns_types__packet_bytes_range__first .
C4:    start_byte + 6 <= dns_types__packet_bytes_range__last .
C5:    start_byte + 6 >= dns_types__packet_bytes_range__base__first .
C6:    start_byte + 6 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to precondition check associated with statement of line 579:

procedure_create_response_soa_14.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
H111:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus >= 
           unsigned_types__unsigned16__first .
H112:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus <= 
           unsigned_types__unsigned16__last .
H113:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H114:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H115:  start_byte + 1 <= dns_types__packet_bytes_range__last - 1 .
H116:  qname_location >= unsigned_types__unsigned16__first .
H117:  qname_location <= unsigned_types__unsigned16__last .
H118:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H119:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H120:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__2), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__2), [i___1]) <= dns_types__byte__last))) .
H121:  fld_header(output_packet__2) = fld_header(
           output_packet) .
H122:  output_packet__2 = upf_bytes(output_packet, fld_bytes(
           output_packet__2)) .
H123:  0 >= dns_types__byte__first .
H124:  0 <= dns_types__byte__last .
H125:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H126:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H127:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H128:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H129:  6 >= dns_types__byte__first .
H130:  6 <= dns_types__byte__last .
H131:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  0 >= dns_types__byte__first .
H136:  0 <= dns_types__byte__last .
H137:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H138:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H139:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H140:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H141:  1 >= dns_types__byte__first .
H142:  1 <= dns_types__byte__last .
H143:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H144:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H145:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H146:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H147:  start_byte >= dns_types__packet_bytes_range__first .
H148:  start_byte <= dns_types__packet_bytes_range__last .
H149:  1 >= natural__first .
H150:  1 <= natural__last .
H151:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H152:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H153:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H154:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H155:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H156:  for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H157:  for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H158:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H159:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H160:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H161:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H162:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H163:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
        ->
C1:    rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
C2:    rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
C3:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
C4:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
C5:    start_byte + 7 >= dns_types__packet_bytes_range__first .
C6:    start_byte + 7 <= dns_types__packet_bytes_range__last .
C7:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           0 .
C8:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
C9:    rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           0 .
C10:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
C11:   start_byte + 7 <= dns_types__packet_bytes_range__last - 26 - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
C12:   1 >= rr_type__returnedrecordsindextype__first .
C13:   1 <= rr_type__returnedrecordsindextype__last .
C14:   start_byte + 7 >= dns_types__packet_bytes_range__base__first .
C15:   start_byte + 7 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 581:

procedure_create_response_soa_15.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
H111:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus >= 
           unsigned_types__unsigned16__first .
H112:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus <= 
           unsigned_types__unsigned16__last .
H113:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H114:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H115:  start_byte + 1 <= dns_types__packet_bytes_range__last - 1 .
H116:  qname_location >= unsigned_types__unsigned16__first .
H117:  qname_location <= unsigned_types__unsigned16__last .
H118:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H119:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H120:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__2), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__2), [i___1]) <= dns_types__byte__last))) .
H121:  fld_header(output_packet__2) = fld_header(
           output_packet) .
H122:  output_packet__2 = upf_bytes(output_packet, fld_bytes(
           output_packet__2)) .
H123:  0 >= dns_types__byte__first .
H124:  0 <= dns_types__byte__last .
H125:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H126:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H127:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H128:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H129:  6 >= dns_types__byte__first .
H130:  6 <= dns_types__byte__last .
H131:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  0 >= dns_types__byte__first .
H136:  0 <= dns_types__byte__last .
H137:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H138:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H139:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H140:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H141:  1 >= dns_types__byte__first .
H142:  1 <= dns_types__byte__last .
H143:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H144:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H145:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H146:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H147:  start_byte >= dns_types__packet_bytes_range__first .
H148:  start_byte <= dns_types__packet_bytes_range__last .
H149:  1 >= natural__first .
H150:  1 <= natural__last .
H151:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H152:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H153:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H154:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H155:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H156:  for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H157:  for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H158:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H159:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H160:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H161:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H162:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H163:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H164:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H165:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H166:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H167:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H168:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H169:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H170:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           0 .
H171:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H172:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           0 .
H173:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H174:  start_byte + 7 <= dns_types__packet_bytes_range__last - 26 - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H175:  1 >= rr_type__returnedrecordsindextype__first .
H176:  1 <= rr_type__returnedrecordsindextype__last .
H177:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H178:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H179:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__3), [i___1]) <= dns_types__byte__last))) .
H180:  fld_header(output_packet__3) = fld_header(upf_bytes(upf_bytes(
           upf_bytes(upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0)), update(fld_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0))), [start_byte + 6], 1))) .
H181:  output_packet__3 = upf_bytes(upf_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0)), update(fld_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0))), [start_byte + 6], 1)), fld_bytes(
           output_packet__3)) .
H182:  start_byte >= dns_types__packet_bytes_range__first .
H183:  start_byte <= dns_types__packet_bytes_range__last .
H184:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H185:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H186:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H187:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
        ->
C1:    start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) >= 
           dns_types__packet_bytes_range__first .
C2:    start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) <= 
           dns_types__packet_bytes_range__last .
C3:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           dns_types__packet_bytes_range__first .
C4:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           dns_types__packet_bytes_range__last .
C5:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
C6:    rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
C7:    start_byte + 32 >= dns_types__packet_bytes_range__base__first .
C8:    start_byte + 32 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 585:

procedure_create_response_soa_16.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
H111:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus >= 
           unsigned_types__unsigned16__first .
H112:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus <= 
           unsigned_types__unsigned16__last .
H113:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H114:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H115:  start_byte + 1 <= dns_types__packet_bytes_range__last - 1 .
H116:  qname_location >= unsigned_types__unsigned16__first .
H117:  qname_location <= unsigned_types__unsigned16__last .
H118:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H119:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H120:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__2), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__2), [i___1]) <= dns_types__byte__last))) .
H121:  fld_header(output_packet__2) = fld_header(
           output_packet) .
H122:  output_packet__2 = upf_bytes(output_packet, fld_bytes(
           output_packet__2)) .
H123:  0 >= dns_types__byte__first .
H124:  0 <= dns_types__byte__last .
H125:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H126:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H127:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H128:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H129:  6 >= dns_types__byte__first .
H130:  6 <= dns_types__byte__last .
H131:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  0 >= dns_types__byte__first .
H136:  0 <= dns_types__byte__last .
H137:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H138:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H139:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H140:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H141:  1 >= dns_types__byte__first .
H142:  1 <= dns_types__byte__last .
H143:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H144:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H145:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H146:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H147:  start_byte >= dns_types__packet_bytes_range__first .
H148:  start_byte <= dns_types__packet_bytes_range__last .
H149:  1 >= natural__first .
H150:  1 <= natural__last .
H151:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H152:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H153:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H154:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H155:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H156:  for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H157:  for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H158:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H159:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H160:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H161:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H162:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H163:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H164:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H165:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H166:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H167:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H168:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H169:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H170:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           0 .
H171:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H172:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           0 .
H173:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H174:  start_byte + 7 <= dns_types__packet_bytes_range__last - 26 - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H175:  1 >= rr_type__returnedrecordsindextype__first .
H176:  1 <= rr_type__returnedrecordsindextype__last .
H177:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H178:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H179:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__3), [i___1]) <= dns_types__byte__last))) .
H180:  fld_header(output_packet__3) = fld_header(upf_bytes(upf_bytes(
           upf_bytes(upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0)), update(fld_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0))), [start_byte + 6], 1))) .
H181:  output_packet__3 = upf_bytes(upf_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0)), update(fld_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0))), [start_byte + 6], 1)), fld_bytes(
           output_packet__3)) .
H182:  start_byte >= dns_types__packet_bytes_range__first .
H183:  start_byte <= dns_types__packet_bytes_range__last .
H184:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H185:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H186:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H187:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H188:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) >= 
           dns_types__packet_bytes_range__first .
H189:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) <= 
           dns_types__packet_bytes_range__last .
H190:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           dns_types__packet_bytes_range__first .
H191:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           dns_types__packet_bytes_range__last .
H192:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H193:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H194:  start_byte + 32 >= dns_types__packet_bytes_range__base__first .
H195:  start_byte + 32 <= dns_types__packet_bytes_range__base__last .
H196:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) >= 
           dns_types__packet_bytes_range__first .
H197:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) <= 
           dns_types__packet_bytes_range__last .
        ->
C1:    start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C2:    start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C3:    start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C4:    start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C5:    start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
C6:    start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
C7:    dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
C8:    dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
C9:    dns_types__header_bits div 8 >= system__min_int .
C10:   dns_types__header_bits div 8 <= system__max_int .
C11:   8 <> 0 .
 

procedure_create_response_soa_17.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  not (start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1]))))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
        ->
C1:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C2:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C3:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C4:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C5:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
C6:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
C7:    dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
C8:    dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
C9:    dns_types__header_bits div 8 >= system__min_int .
C10:   dns_types__header_bits div 8 <= system__max_int .
C11:   8 <> 0 .
 

procedure_create_response_soa_18.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   not (num_found__1 >= 1) .
H51:   start_byte >= dns_types__packet_bytes_range__first .
H52:   start_byte <= dns_types__packet_bytes_range__last .
        ->
C1:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C2:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C3:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
C4:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
C5:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
C6:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
C7:    dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
C8:    dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
C9:    dns_types__header_bits div 8 >= system__min_int .
C10:   dns_types__header_bits div 8 <= system__max_int .
C11:   8 <> 0 .
 

For path(s) from start to run-time check associated with statement of line 586:

procedure_create_response_soa_19.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
H111:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus >= 
           unsigned_types__unsigned16__first .
H112:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus <= 
           unsigned_types__unsigned16__last .
H113:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H114:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H115:  start_byte + 1 <= dns_types__packet_bytes_range__last - 1 .
H116:  qname_location >= unsigned_types__unsigned16__first .
H117:  qname_location <= unsigned_types__unsigned16__last .
H118:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H119:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H120:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__2), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__2), [i___1]) <= dns_types__byte__last))) .
H121:  fld_header(output_packet__2) = fld_header(
           output_packet) .
H122:  output_packet__2 = upf_bytes(output_packet, fld_bytes(
           output_packet__2)) .
H123:  0 >= dns_types__byte__first .
H124:  0 <= dns_types__byte__last .
H125:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H126:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H127:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H128:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H129:  6 >= dns_types__byte__first .
H130:  6 <= dns_types__byte__last .
H131:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  0 >= dns_types__byte__first .
H136:  0 <= dns_types__byte__last .
H137:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H138:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H139:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H140:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H141:  1 >= dns_types__byte__first .
H142:  1 <= dns_types__byte__last .
H143:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H144:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H145:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H146:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H147:  start_byte >= dns_types__packet_bytes_range__first .
H148:  start_byte <= dns_types__packet_bytes_range__last .
H149:  1 >= natural__first .
H150:  1 <= natural__last .
H151:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H152:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H153:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H154:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H155:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H156:  for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H157:  for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H158:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H159:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H160:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H161:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H162:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H163:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H164:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H165:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H166:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H167:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H168:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H169:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H170:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           0 .
H171:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H172:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           0 .
H173:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H174:  start_byte + 7 <= dns_types__packet_bytes_range__last - 26 - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H175:  1 >= rr_type__returnedrecordsindextype__first .
H176:  1 <= rr_type__returnedrecordsindextype__last .
H177:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H178:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H179:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__3), [i___1]) <= dns_types__byte__last))) .
H180:  fld_header(output_packet__3) = fld_header(upf_bytes(upf_bytes(
           upf_bytes(upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0)), update(fld_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0))), [start_byte + 6], 1))) .
H181:  output_packet__3 = upf_bytes(upf_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0)), update(fld_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0))), [start_byte + 6], 1)), fld_bytes(
           output_packet__3)) .
H182:  start_byte >= dns_types__packet_bytes_range__first .
H183:  start_byte <= dns_types__packet_bytes_range__last .
H184:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H185:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H186:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H187:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H188:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) >= 
           dns_types__packet_bytes_range__first .
H189:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) <= 
           dns_types__packet_bytes_range__last .
H190:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           dns_types__packet_bytes_range__first .
H191:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           dns_types__packet_bytes_range__last .
H192:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H193:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H194:  start_byte + 32 >= dns_types__packet_bytes_range__base__first .
H195:  start_byte + 32 <= dns_types__packet_bytes_range__base__last .
H196:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) >= 
           dns_types__packet_bytes_range__first .
H197:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) <= 
           dns_types__packet_bytes_range__last .
H198:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H199:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H200:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H201:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H202:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H203:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H204:  dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H205:  dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H206:  dns_types__header_bits div 8 >= system__min_int .
H207:  dns_types__header_bits div 8 <= system__max_int .
H208:  8 <> 0 .
H209:  num_found__1 >= rr_type__numberofrecordstype__first .
H210:  num_found__1 <= rr_type__numberofrecordstype__last .
        ->
C1:    answer_count + num_found__1 >= 
           dns_types__unsigned_short__first .
C2:    answer_count + num_found__1 <= 
           dns_types__unsigned_short__last .
C3:    num_found__1 >= dns_types__unsigned_short__first .
C4:    num_found__1 <= dns_types__unsigned_short__last .
 

procedure_create_response_soa_20.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  not (start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1]))))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
H111:  start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H112:  start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H113:  start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H114:  start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H115:  start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H116:  start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H117:  dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H118:  dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H119:  dns_types__header_bits div 8 >= system__min_int .
H120:  dns_types__header_bits div 8 <= system__max_int .
H121:  8 <> 0 .
H122:  num_found__1 >= rr_type__numberofrecordstype__first .
H123:  num_found__1 <= rr_type__numberofrecordstype__last .
        ->
C1:    answer_count + num_found__1 >= 
           dns_types__unsigned_short__first .
C2:    answer_count + num_found__1 <= 
           dns_types__unsigned_short__last .
C3:    num_found__1 >= dns_types__unsigned_short__first .
C4:    num_found__1 <= dns_types__unsigned_short__last .
 

procedure_create_response_soa_21.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   not (num_found__1 >= 1) .
H51:   start_byte >= dns_types__packet_bytes_range__first .
H52:   start_byte <= dns_types__packet_bytes_range__last .
H53:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H54:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H55:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H56:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H57:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H58:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H59:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H60:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H61:   dns_types__header_bits div 8 >= system__min_int .
H62:   dns_types__header_bits div 8 <= system__max_int .
H63:   8 <> 0 .
H64:   num_found__1 >= rr_type__numberofrecordstype__first .
H65:   num_found__1 <= rr_type__numberofrecordstype__last .
        ->
C1:    answer_count + num_found__1 >= 
           dns_types__unsigned_short__first .
C2:    answer_count + num_found__1 <= 
           dns_types__unsigned_short__last .
C3:    num_found__1 >= dns_types__unsigned_short__first .
C4:    num_found__1 <= dns_types__unsigned_short__last .
 

For path(s) from start to finish:

procedure_create_response_soa_22.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
H111:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus >= 
           unsigned_types__unsigned16__first .
H112:  (qname_location + 49152) mod 
           unsigned_types__unsigned16__modulus <= 
           unsigned_types__unsigned16__last .
H113:  start_byte + 1 >= dns_types__packet_bytes_range__first .
H114:  start_byte + 1 <= dns_types__packet_bytes_range__last .
H115:  start_byte + 1 <= dns_types__packet_bytes_range__last - 1 .
H116:  qname_location >= unsigned_types__unsigned16__first .
H117:  qname_location <= unsigned_types__unsigned16__last .
H118:  start_byte + 1 >= dns_types__packet_bytes_range__base__first .
H119:  start_byte + 1 <= dns_types__packet_bytes_range__base__last .
H120:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__2), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__2), [i___1]) <= dns_types__byte__last))) .
H121:  fld_header(output_packet__2) = fld_header(
           output_packet) .
H122:  output_packet__2 = upf_bytes(output_packet, fld_bytes(
           output_packet__2)) .
H123:  0 >= dns_types__byte__first .
H124:  0 <= dns_types__byte__last .
H125:  start_byte + 3 >= dns_types__packet_bytes_range__first .
H126:  start_byte + 3 <= dns_types__packet_bytes_range__last .
H127:  start_byte + 3 >= dns_types__packet_bytes_range__base__first .
H128:  start_byte + 3 <= dns_types__packet_bytes_range__base__last .
H129:  6 >= dns_types__byte__first .
H130:  6 <= dns_types__byte__last .
H131:  start_byte + 4 >= dns_types__packet_bytes_range__first .
H132:  start_byte + 4 <= dns_types__packet_bytes_range__last .
H133:  start_byte + 4 >= dns_types__packet_bytes_range__base__first .
H134:  start_byte + 4 <= dns_types__packet_bytes_range__base__last .
H135:  0 >= dns_types__byte__first .
H136:  0 <= dns_types__byte__last .
H137:  start_byte + 5 >= dns_types__packet_bytes_range__first .
H138:  start_byte + 5 <= dns_types__packet_bytes_range__last .
H139:  start_byte + 5 >= dns_types__packet_bytes_range__base__first .
H140:  start_byte + 5 <= dns_types__packet_bytes_range__base__last .
H141:  1 >= dns_types__byte__first .
H142:  1 <= dns_types__byte__last .
H143:  start_byte + 6 >= dns_types__packet_bytes_range__first .
H144:  start_byte + 6 <= dns_types__packet_bytes_range__last .
H145:  start_byte + 6 >= dns_types__packet_bytes_range__base__first .
H146:  start_byte + 6 <= dns_types__packet_bytes_range__base__last .
H147:  start_byte >= dns_types__packet_bytes_range__first .
H148:  start_byte <= dns_types__packet_bytes_range__last .
H149:  1 >= natural__first .
H150:  1 <= natural__last .
H151:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H152:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H153:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H154:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H155:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H156:  for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H157:  for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H158:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H159:  for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H160:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H161:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H162:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H163:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H164:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H165:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H166:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H167:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H168:  start_byte + 7 >= dns_types__packet_bytes_range__first .
H169:  start_byte + 7 <= dns_types__packet_bytes_range__last .
H170:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           0 .
H171:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H172:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           0 .
H173:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H174:  start_byte + 7 <= dns_types__packet_bytes_range__last - 26 - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) .
H175:  1 >= rr_type__returnedrecordsindextype__first .
H176:  1 <= rr_type__returnedrecordsindextype__last .
H177:  start_byte + 7 >= dns_types__packet_bytes_range__base__first .
H178:  start_byte + 7 <= dns_types__packet_bytes_range__base__last .
H179:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__3), [i___1]) <= dns_types__byte__last))) .
H180:  fld_header(output_packet__3) = fld_header(upf_bytes(upf_bytes(
           upf_bytes(upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0)), update(fld_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0))), [start_byte + 6], 1))) .
H181:  output_packet__3 = upf_bytes(upf_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0)), update(fld_bytes(upf_bytes(upf_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0)), update(fld_bytes(
           upf_bytes(output_packet__2, update(fld_bytes(
           output_packet__2), [start_byte + 3], 0))), [
           start_byte + 4], 6)), update(fld_bytes(upf_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0)), update(fld_bytes(upf_bytes(
           output_packet__2, update(fld_bytes(output_packet__2), [
           start_byte + 3], 0))), [start_byte + 4], 6))), [
           start_byte + 5], 0))), [start_byte + 6], 1)), fld_bytes(
           output_packet__3)) .
H182:  start_byte >= dns_types__packet_bytes_range__first .
H183:  start_byte <= dns_types__packet_bytes_range__last .
H184:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H185:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H186:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H187:  rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H188:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) >= 
           dns_types__packet_bytes_range__first .
H189:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) <= 
           dns_types__packet_bytes_range__last .
H190:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           dns_types__packet_bytes_range__first .
H191:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           dns_types__packet_bytes_range__last .
H192:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H193:  rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H194:  start_byte + 32 >= dns_types__packet_bytes_range__base__first .
H195:  start_byte + 32 <= dns_types__packet_bytes_range__base__last .
H196:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) >= 
           dns_types__packet_bytes_range__first .
H197:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) <= 
           dns_types__packet_bytes_range__last .
H198:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H199:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H200:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H201:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H202:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H203:  start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H204:  dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H205:  dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H206:  dns_types__header_bits div 8 >= system__min_int .
H207:  dns_types__header_bits div 8 <= system__max_int .
H208:  8 <> 0 .
H209:  num_found__1 >= rr_type__numberofrecordstype__first .
H210:  num_found__1 <= rr_type__numberofrecordstype__last .
H211:  answer_count + num_found__1 >= 
           dns_types__unsigned_short__first .
H212:  answer_count + num_found__1 <= 
           dns_types__unsigned_short__last .
H213:  num_found__1 >= dns_types__unsigned_short__first .
H214:  num_found__1 <= dns_types__unsigned_short__last .
        ->
C1:    start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 >= 
           dns_types__header_bits div 8 + 1 .
C2:    start_byte + 32 + (rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) + rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))) + dns_types__header_bits div 8 <= 
           dns_types__packet_size .
C3:    answer_count + num_found__1 <= answer_count + 
           rr_type__maxnumrecords .
 

procedure_create_response_soa_23.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   num_found__1 >= 1 .
H51:   1 >= natural__first .
H52:   1 <= natural__last .
H53:   1 >= natural__first .
H54:   1 <= natural__last .
H55:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H56:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H57:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H58:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H59:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H60:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H61:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H62:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H63:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H64:   1 >= rr_type__returnedrecordsindextype__first .
H65:   1 <= rr_type__returnedrecordsindextype__last .
H66:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H67:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H68:   (rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(
           fld_nameserver(element(replies__1, [1])), [
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1])))]) = 0) and (for_all(q_: integer, ((q_ >= 1) and (
           q_ <= rr_type__wirenamelength(fld_nameserver(element(
           replies__1, [1]))) - 1)) -> (element(fld_nameserver(element(
           replies__1, [1])), [q_]) <> 0)))) .
H69:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H70:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H71:   1 >= natural__first .
H72:   1 <= natural__last .
H73:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H74:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H75:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H76:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H77:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H78:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H79:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H80:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H81:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H82:   1 >= rr_type__returnedrecordsindextype__first .
H83:   1 <= rr_type__returnedrecordsindextype__last .
H84:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H85:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H86:   (rr_type__wirenamelength(fld_email(element(replies__1, [1]))) = 
           rr_type__maxdomainnamelength + 1) or ((element(fld_email(element(
           replies__1, [1])), [rr_type__wirenamelength(fld_email(element(
           replies__1, [1])))]) = 0) and (for_all(q_: 
           integer, ((q_ >= 1) and (q_ <= 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) - 
           1)) -> (element(fld_email(element(replies__1, [1])), [
           q_]) <> 0)))) .
H87:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H88:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H89:   start_byte >= dns_types__packet_bytes_range__first .
H90:   start_byte <= dns_types__packet_bytes_range__last .
H91:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H92:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H93:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           rr_type__wirestringtypeindex__first .
H94:   rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           rr_type__wirestringtypeindex__last .
H95:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) >= integer__base__first .
H96:   dns_types__packet_size - (32 + dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1])))) <= integer__base__last .
H97:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) >= 
           integer__base__first .
H98:   rr_type__wirenamelength(fld_nameserver(element(replies__1, [1]))) + 
           rr_type__wirenamelength(fld_email(element(replies__1, [1]))) <= 
           integer__base__last .
H99:   dns_types__packet_size - (32 + dns_types__header_bits div 8) >= system__min_int .
H100:  dns_types__packet_size - (32 + dns_types__header_bits div 8) <= system__max_int .
H101:  32 + dns_types__header_bits div 8 >= system__min_int .
H102:  32 + dns_types__header_bits div 8 <= system__max_int .
H103:  dns_types__header_bits div 8 >= system__min_int .
H104:  dns_types__header_bits div 8 <= system__max_int .
H105:  8 <> 0 .
H106:  start_byte >= integer__first .
H107:  start_byte <= integer__last .
H108:  not (start_byte < dns_types__packet_size - (32 + 
           dns_types__header_bits div 8) - (
           rr_type__wirenamelength(fld_nameserver(element(replies__1, [
           1]))) + rr_type__wirenamelength(fld_email(element(replies__1, [
           1]))))) .
H109:  start_byte >= dns_types__packet_bytes_range__first .
H110:  start_byte <= dns_types__packet_bytes_range__last .
H111:  start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H112:  start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H113:  start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H114:  start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H115:  start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H116:  start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H117:  dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H118:  dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H119:  dns_types__header_bits div 8 >= system__min_int .
H120:  dns_types__header_bits div 8 <= system__max_int .
H121:  8 <> 0 .
H122:  num_found__1 >= rr_type__numberofrecordstype__first .
H123:  num_found__1 <= rr_type__numberofrecordstype__last .
H124:  answer_count + num_found__1 >= 
           dns_types__unsigned_short__first .
H125:  answer_count + num_found__1 <= 
           dns_types__unsigned_short__last .
H126:  num_found__1 >= dns_types__unsigned_short__first .
H127:  num_found__1 <= dns_types__unsigned_short__last .
        ->
C1:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__header_bits div 8 + 1 .
C2:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_size .
C3:    answer_count + num_found__1 <= answer_count + 
           rr_type__maxnumrecords .
 

procedure_create_response_soa_24.
H1:    start_byte <= dns_types__packet_size .
H2:    answer_count <= dns_types__unsigned_short__last - 
           rr_type__maxnumrecords .
H3:    start_byte >= dns_types__packet_bytes_range__first .
H4:    start_byte <= dns_types__packet_bytes_range__last .
H5:    for_all(i___1: integer, ((i___1 >= 
           rr_type__wirestringtypeindex__first) and (i___1 <= 
           rr_type__wirestringtypeindex__last)) -> ((element(
           domainname, [i___1]) >= character__first) and (element(
           domainname, [i___1]) <= character__last))) .
H6:    qname_location >= dns_types__qname_ptr_range__first .
H7:    qname_location <= dns_types__qname_ptr_range__last .
H8:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H9:    fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H10:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H11:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H12:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H13:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H14:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H15:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H16:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H17:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H18:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   true .
H24:   true .
H25:   true .
H26:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H27:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H28:   true .
H29:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H30:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H31:   answer_count >= dns_types__unsigned_short__first .
H32:   answer_count <= dns_types__unsigned_short__last .
H33:   start_byte >= dns_types__packet_bytes_range__first .
H34:   start_byte <= dns_types__packet_bytes_range__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_minimum(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_minimum(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H36:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_expiry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_expiry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H37:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_retry(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_retry(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H38:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_refresh(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_refresh(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H39:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_serialnumber(element(replies__1, [i___1])) >= 
           unsigned_types__unsigned32__first) and (fld_serialnumber(element(
           replies__1, [i___1])) <= 
           unsigned_types__unsigned32__last))) .
H40:   for_all(i___3: integer, ((i___3 >= 
           rr_type__wirestringtypeindex__first) and (i___3 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_email(element(replies__1, [i___1])), [i___3]) >= 
           character__first) and (element(fld_email(element(replies__1, [
           i___1])), [i___3]) <= character__last))))) .
H41:   for_all(i___2: integer, ((i___2 >= 
           rr_type__wirestringtypeindex__first) and (i___2 <= 
           rr_type__wirestringtypeindex__last)) -> (for_all(
           i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((element(
           fld_nameserver(element(replies__1, [i___1])), [
           i___2]) >= character__first) and (element(fld_nameserver(element(
           replies__1, [i___1])), [i___2]) <= character__last))))) .
H42:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_class(fld_inherit(element(replies__1, [i___1]))) >= 
           rr_type__classtype__first) and (fld_class(fld_inherit(element(
           replies__1, [i___1]))) <= rr_type__classtype__last))) .
H43:   for_all(i___1: integer, ((i___1 >= 
           rr_type__returnedrecordsindextype__first) and (
           i___1 <= rr_type__returnedrecordsindextype__last)) -> ((
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) >= unsigned_types__unsigned32__first) and (
           fld_ttlinseconds(fld_inherit(element(replies__1, [
           i___1]))) <= unsigned_types__unsigned32__last))) .
H44:   num_found__1 >= rr_type__numberofrecordstype__first .
H45:   num_found__1 <= rr_type__numberofrecordstype__last .
H46:   num_found__1 >= rr_type__numberofrecordstype__first .
H47:   num_found__1 <= rr_type__numberofrecordstype__last .
H48:   num_found__1 >= rr_type__numberofrecordstype__first .
H49:   num_found__1 <= rr_type__numberofrecordstype__last .
H50:   not (num_found__1 >= 1) .
H51:   start_byte >= dns_types__packet_bytes_range__first .
H52:   start_byte <= dns_types__packet_bytes_range__last .
H53:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H54:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H55:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_length_range__first .
H56:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_length_range__last .
H57:   start_byte + dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__base__first .
H58:   start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__base__last .
H59:   dns_types__header_bits div 8 >= 
           dns_types__packet_bytes_range__first .
H60:   dns_types__header_bits div 8 <= 
           dns_types__packet_bytes_range__last .
H61:   dns_types__header_bits div 8 >= system__min_int .
H62:   dns_types__header_bits div 8 <= system__max_int .
H63:   8 <> 0 .
H64:   num_found__1 >= rr_type__numberofrecordstype__first .
H65:   num_found__1 <= rr_type__numberofrecordstype__last .
H66:   answer_count + num_found__1 >= 
           dns_types__unsigned_short__first .
H67:   answer_count + num_found__1 <= 
           dns_types__unsigned_short__last .
H68:   num_found__1 >= dns_types__unsigned_short__first .
H69:   num_found__1 <= dns_types__unsigned_short__last .
        ->
C1:    start_byte + dns_types__header_bits div 8 >= 
           dns_types__header_bits div 8 + 1 .
C2:    start_byte + dns_types__header_bits div 8 <= 
           dns_types__packet_size .
C3:    answer_count + num_found__1 <= answer_count + 
           rr_type__maxnumrecords .
 

