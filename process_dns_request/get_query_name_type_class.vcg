           *******************************************************
                       Semantic Analysis of SPARK Text
                             Examiner GPL Edition

           *******************************************************


          procedure Process_Dns_Request.Get_Query_Name_Type_Class




For path(s) from start to run-time check associated with statement of line 206:

procedure_get_query_name_type_class_1.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
        ->
C1:    32 >= character__first .
C2:    32 <= character__last .
 

For path(s) from start to run-time check associated with statement of line 207:

procedure_get_query_name_type_class_2.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
        ->
C1:    (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
C2:    input_bytes - 5 >= integer__first .
C3:    input_bytes - 5 <= integer__last .
C4:    input_bytes - 5 >= dns_types__packet_length_range__base__first .
C5:    input_bytes - 5 <= dns_types__packet_length_range__base__last .
C6:    dns_types__packet_bytes_range__first >= integer__first .
C7:    dns_types__packet_bytes_range__first <= integer__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 207:

procedure_get_query_name_type_class_3.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
        ->
C1:    (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
C2:    input_bytes - 5 >= integer__first .
C3:    input_bytes - 5 <= integer__last .
C4:    input_bytes - 5 >= dns_types__packet_length_range__base__first .
C5:    input_bytes - 5 <= dns_types__packet_length_range__base__last .
C6:    byte + 1 >= integer__first .
C7:    byte + 1 <= integer__last .
 

For path(s) from start to assertion of line 209:

procedure_get_query_name_type_class_4.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   dns_types__packet_bytes_range__first <= input_bytes - 5 .
H38:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first]) <> 0 .
H39:   rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last .
        ->
C1:    rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
C2:    rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last .
C3:    dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first .
C4:    dns_types__packet_bytes_range__first <= input_bytes - 5 .
C5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
C6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
C7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
C8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
C9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
C10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
C11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
C12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
C13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
C14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
C15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
C16:   true .
C17:   true .
C18:   true .
C19:   true .
C20:   true .
C21:   true .
C22:   true .
C23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
C24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
C25:   true .
C26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
C27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
C28:   input_bytes >= dns_types__packet_length_range__first .
C29:   input_bytes <= dns_types__packet_length_range__last .
C30:   input_bytes >= dns_types__header_bits div 8 + 1 .
C31:   input_bytes < 1000 .
 

For path(s) from assertion of line 209 to assertion of line 209:

procedure_get_query_name_type_class_5.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   byte + 1 <= input_bytes - 5 .
H52:   element(fld_bytes(input_packet), [byte + 1]) <> 0 .
H53:   i + 1 < rr_type__wirestringtypeindex__last .
        ->
C1:    i + 1 >= rr_type__wirestringtypeindex__first .
C2:    i + 1 < rr_type__wirestringtypeindex__last .
C3:    byte + 1 >= dns_types__packet_bytes_range__first .
C4:    byte + 1 <= input_bytes - 5 .
C5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
C6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
C7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
C8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
C9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
C10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
C11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
C12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
C13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
C14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
C15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
C16:   true .
C17:   true .
C18:   true .
C19:   true .
C20:   true .
C21:   true .
C22:   true .
C23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
C24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
C25:   true .
C26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
C27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
C28:   input_bytes >= dns_types__packet_length_range__first .
C29:   input_bytes <= dns_types__packet_length_range__last .
C30:   input_bytes >= dns_types__header_bits div 8 + 1 .
C31:   input_bytes < 1000 .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 211:

procedure_get_query_name_type_class_6.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
        ->
C1:    element(fld_bytes(input_packet), [byte]) >= 
           character__first .
C2:    element(fld_bytes(input_packet), [byte]) <= 
           character__last .
C3:    element(fld_bytes(input_packet), [byte]) >= 
           character__first .
C4:    element(fld_bytes(input_packet), [byte]) <= 
           character__last .
C5:    byte >= dns_types__packet_bytes_range__first .
C6:    byte <= dns_types__packet_bytes_range__last .
C7:    i >= rr_type__wirestringtypeindex__first .
C8:    i <= rr_type__wirestringtypeindex__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 212:

procedure_get_query_name_type_class_7.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
        ->
C1:    i + 1 >= natural__first .
C2:    i + 1 <= natural__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 213:

procedure_get_query_name_type_class_8.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
        ->
C1:    byte + 1 >= dns_types__packet_bytes_range__first .
C2:    byte + 1 <= dns_types__packet_bytes_range__last .
 

For path(s) from start to run-time check associated with statement of line 215:

procedure_get_query_name_type_class_9.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
        ->
C1:    0 >= character__first .
C2:    0 <= character__last .
C3:    0 >= character__first .
C4:    0 <= character__last .
C5:    rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
C6:    rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 215:

procedure_get_query_name_type_class_10.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
        ->
C1:    0 >= character__first .
C2:    0 <= character__last .
C3:    0 >= character__first .
C4:    0 <= character__last .
C5:    i + 1 >= rr_type__wirestringtypeindex__first .
C6:    i + 1 <= rr_type__wirestringtypeindex__last .
 

For path(s) from start to run-time check associated with statement of line 220:

procedure_get_query_name_type_class_11.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
        ->
C1:    element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
C2:    element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
C3:    element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
C4:    element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
C5:    dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
C6:    dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
C7:    dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
C8:    dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
C9:    element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
C10:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
C11:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
C12:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
C13:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
C14:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
C15:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
C16:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 220:

procedure_get_query_name_type_class_12.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
        ->
C1:    element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
C2:    element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
C3:    element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
C4:    element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
C5:    byte + 1 + 2 >= dns_types__packet_bytes_range__first .
C6:    byte + 1 + 2 <= dns_types__packet_bytes_range__last .
C7:    byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
C8:    byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
C9:    element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
C10:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
C11:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
C12:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
C13:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
C14:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
C15:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
C16:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 221:

procedure_get_query_name_type_class_13.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
        ->
C1:    element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
C2:    element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
C3:    element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
C4:    element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
C5:    dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
C6:    dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
C7:    dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
C8:    dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
C9:    element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
C10:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
C11:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
C12:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
C13:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
C14:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
C15:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
C16:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 221:

procedure_get_query_name_type_class_14.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
        ->
C1:    element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
C2:    element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
C3:    element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
C4:    element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
C5:    byte + 1 + 4 >= dns_types__packet_bytes_range__first .
C6:    byte + 1 + 4 <= dns_types__packet_bytes_range__last .
C7:    byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
C8:    byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
C9:    element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
C10:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
C11:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
C12:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
C13:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
C14:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
C15:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
C16:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
 

For path(s) from start to run-time check associated with statement of line 228:

procedure_get_query_name_type_class_15.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
        ->
C1:    to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
C2:    to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 228:

procedure_get_query_name_type_class_16.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
        ->
C1:    to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
C2:    to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
 

For path(s) from start to run-time check associated with statement of line 231:

procedure_get_query_name_type_class_17.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])))) .
        ->
C1:    dns_types__unimplemented >= dns_types__query_type__first .
C2:    dns_types__unimplemented <= dns_types__query_type__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 231:

procedure_get_query_name_type_class_18.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2])))) .
        ->
C1:    dns_types__unimplemented >= dns_types__query_type__first .
C2:    dns_types__unimplemented <= dns_types__query_type__last .
 

For path(s) from start to run-time check associated with statement of line 234:

procedure_get_query_name_type_class_19.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
        ->
C1:    dns_types__unimplemented >= dns_types__query_type__first .
C2:    dns_types__unimplemented <= dns_types__query_type__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 234:

procedure_get_query_name_type_class_20.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   not ((element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
        ->
C1:    dns_types__unimplemented >= dns_types__query_type__first .
C2:    dns_types__unimplemented <= dns_types__query_type__last .
 

For path(s) from start to run-time check associated with statement of line 240:

procedure_get_query_name_type_class_21.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])))) .
H81:   dns_types__unimplemented >= dns_types__query_type__first .
H82:   dns_types__unimplemented <= dns_types__query_type__last .
H83:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H84:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
        ->
C1:    to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
C2:    to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
 

procedure_get_query_name_type_class_22.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]))))) .
H81:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H82:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
        ->
C1:    to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
C2:    to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
 

procedure_get_query_name_type_class_23.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H77:   dns_types__unimplemented >= dns_types__query_type__first .
H78:   dns_types__unimplemented <= dns_types__query_type__last .
H79:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H80:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
        ->
C1:    to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
C2:    to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 240:

procedure_get_query_name_type_class_24.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2])))) .
H95:   dns_types__unimplemented >= dns_types__query_type__first .
H96:   dns_types__unimplemented <= dns_types__query_type__last .
H97:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H98:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
        ->
C1:    to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
C2:    to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
 

procedure_get_query_name_type_class_25.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2]))))) .
H95:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H96:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
        ->
C1:    to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
C2:    to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
 

procedure_get_query_name_type_class_26.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   not ((element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H91:   dns_types__unimplemented >= dns_types__query_type__first .
H92:   dns_types__unimplemented <= dns_types__query_type__last .
H93:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H94:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
        ->
C1:    to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
C2:    to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
 

For path(s) from start to run-time check associated with statement of line 243:

procedure_get_query_name_type_class_27.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])))) .
H81:   dns_types__unimplemented >= dns_types__query_type__first .
H82:   dns_types__unimplemented <= dns_types__query_type__last .
H83:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H84:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H85:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H86:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H87:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 3]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

procedure_get_query_name_type_class_28.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]))))) .
H81:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H82:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H83:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H84:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H85:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 3]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

procedure_get_query_name_type_class_29.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H77:   dns_types__unimplemented >= dns_types__query_type__first .
H78:   dns_types__unimplemented <= dns_types__query_type__last .
H79:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H80:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H81:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H82:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H83:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 3]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 243:

procedure_get_query_name_type_class_30.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2])))) .
H95:   dns_types__unimplemented >= dns_types__query_type__first .
H96:   dns_types__unimplemented <= dns_types__query_type__last .
H97:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H98:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H99:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H100:  to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H101:  not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [byte + 1 + 3]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 4])))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

procedure_get_query_name_type_class_31.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2]))))) .
H95:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H96:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H97:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H98:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H99:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [byte + 1 + 3]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 4])))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

procedure_get_query_name_type_class_32.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   not ((element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H91:   dns_types__unimplemented >= dns_types__query_type__first .
H92:   dns_types__unimplemented <= dns_types__query_type__last .
H93:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H94:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H95:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H96:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H97:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [byte + 1 + 3]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 4])))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

For path(s) from start to run-time check associated with statement of line 246:

procedure_get_query_name_type_class_33.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])))) .
H81:   dns_types__unimplemented >= dns_types__query_type__first .
H82:   dns_types__unimplemented <= dns_types__query_type__last .
H83:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

procedure_get_query_name_type_class_34.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]))))) .
H81:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

procedure_get_query_name_type_class_35.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H77:   dns_types__unimplemented >= dns_types__query_type__first .
H78:   dns_types__unimplemented <= dns_types__query_type__last .
H79:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 246:

procedure_get_query_name_type_class_36.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2])))) .
H95:   dns_types__unimplemented >= dns_types__query_type__first .
H96:   dns_types__unimplemented <= dns_types__query_type__last .
H97:   not ((element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

procedure_get_query_name_type_class_37.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2]))))) .
H95:   not ((element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

procedure_get_query_name_type_class_38.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   not ((element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H91:   dns_types__unimplemented >= dns_types__query_type__first .
H92:   dns_types__unimplemented <= dns_types__query_type__last .
H93:   not ((element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
        ->
C1:    dns_types__none_class >= dns_types__query_class__first .
C2:    dns_types__none_class <= dns_types__query_class__last .
 

For path(s) from start to run-time check associated with statement of line 248:

procedure_get_query_name_type_class_39.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])))) .
H81:   dns_types__unimplemented >= dns_types__query_type__first .
H82:   dns_types__unimplemented <= dns_types__query_type__last .
H83:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H84:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H85:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H86:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H87:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 3]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])))) .
H88:   dns_types__none_class >= dns_types__query_class__first .
H89:   dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
C2:    dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_40.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]))))) .
H81:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H82:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H83:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H84:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H85:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 3]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])))) .
H86:   dns_types__none_class >= dns_types__query_class__first .
H87:   dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
C2:    dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_41.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H77:   dns_types__unimplemented >= dns_types__query_type__first .
H78:   dns_types__unimplemented <= dns_types__query_type__last .
H79:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H80:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H81:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H82:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H83:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 3]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])))) .
H84:   dns_types__none_class >= dns_types__query_class__first .
H85:   dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
C2:    dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_42.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])))) .
H81:   dns_types__unimplemented >= dns_types__query_type__first .
H82:   dns_types__unimplemented <= dns_types__query_type__last .
H83:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H84:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H85:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H86:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H87:   not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]))))) .
        ->
C1:    dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
C2:    dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_43.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]))))) .
H81:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H82:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H83:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H84:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H85:   not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]))))) .
        ->
C1:    dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
C2:    dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_44.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H77:   dns_types__unimplemented >= dns_types__query_type__first .
H78:   dns_types__unimplemented <= dns_types__query_type__last .
H79:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H80:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H81:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H82:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H83:   not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]))))) .
        ->
C1:    dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
C2:    dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_45.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])))) .
H81:   dns_types__unimplemented >= dns_types__query_type__first .
H82:   dns_types__unimplemented <= dns_types__query_type__last .
H83:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H84:   dns_types__none_class >= dns_types__query_class__first .
H85:   dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
C2:    dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_46.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]))))) .
H81:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H82:   dns_types__none_class >= dns_types__query_class__first .
H83:   dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
C2:    dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_47.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H77:   dns_types__unimplemented >= dns_types__query_type__first .
H78:   dns_types__unimplemented <= dns_types__query_type__last .
H79:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H80:   dns_types__none_class >= dns_types__query_class__first .
H81:   dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
C2:    dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
 

For path(s) from assertion of line 209 to run-time check associated with statement of line 248:

procedure_get_query_name_type_class_48.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2])))) .
H95:   dns_types__unimplemented >= dns_types__query_type__first .
H96:   dns_types__unimplemented <= dns_types__query_type__last .
H97:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H98:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H99:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H100:  to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H101:  not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [byte + 1 + 3]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 4])))) .
H102:  dns_types__none_class >= dns_types__query_class__first .
H103:  dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    byte + 1 + 4 >= dns_types__packet_bytes_range__first .
C2:    byte + 1 + 4 <= dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_49.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2]))))) .
H95:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H96:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H97:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H98:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H99:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [byte + 1 + 3]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 4])))) .
H100:  dns_types__none_class >= dns_types__query_class__first .
H101:  dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    byte + 1 + 4 >= dns_types__packet_bytes_range__first .
C2:    byte + 1 + 4 <= dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_50.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   not ((element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H91:   dns_types__unimplemented >= dns_types__query_type__first .
H92:   dns_types__unimplemented <= dns_types__query_type__last .
H93:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H94:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H95:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H96:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H97:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [byte + 1 + 3]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 4])))) .
H98:   dns_types__none_class >= dns_types__query_class__first .
H99:   dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    byte + 1 + 4 >= dns_types__packet_bytes_range__first .
C2:    byte + 1 + 4 <= dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_51.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2])))) .
H95:   dns_types__unimplemented >= dns_types__query_type__first .
H96:   dns_types__unimplemented <= dns_types__query_type__last .
H97:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H98:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H99:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H100:  to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H101:  not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]))))) .
        ->
C1:    byte + 1 + 4 >= dns_types__packet_bytes_range__first .
C2:    byte + 1 + 4 <= dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_52.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2]))))) .
H95:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H96:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H97:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H98:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H99:   not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]))))) .
        ->
C1:    byte + 1 + 4 >= dns_types__packet_bytes_range__first .
C2:    byte + 1 + 4 <= dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_53.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   not ((element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H91:   dns_types__unimplemented >= dns_types__query_type__first .
H92:   dns_types__unimplemented <= dns_types__query_type__last .
H93:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H94:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H95:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H96:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H97:   not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]))))) .
        ->
C1:    byte + 1 + 4 >= dns_types__packet_bytes_range__first .
C2:    byte + 1 + 4 <= dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_54.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2])))) .
H95:   dns_types__unimplemented >= dns_types__query_type__first .
H96:   dns_types__unimplemented <= dns_types__query_type__last .
H97:   not ((element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H98:   dns_types__none_class >= dns_types__query_class__first .
H99:   dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    byte + 1 + 4 >= dns_types__packet_bytes_range__first .
C2:    byte + 1 + 4 <= dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_55.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2]))))) .
H95:   not ((element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H96:   dns_types__none_class >= dns_types__query_class__first .
H97:   dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    byte + 1 + 4 >= dns_types__packet_bytes_range__first .
C2:    byte + 1 + 4 <= dns_types__packet_bytes_range__last .
 

procedure_get_query_name_type_class_56.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   not ((element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H91:   dns_types__unimplemented >= dns_types__query_type__first .
H92:   dns_types__unimplemented <= dns_types__query_type__last .
H93:   not ((element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H94:   dns_types__none_class >= dns_types__query_class__first .
H95:   dns_types__none_class <= dns_types__query_class__last .
        ->
C1:    byte + 1 + 4 >= dns_types__packet_bytes_range__first .
C2:    byte + 1 + 4 <= dns_types__packet_bytes_range__last .
 

For path(s) from start to finish:

procedure_get_query_name_type_class_57.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])))) .
H81:   dns_types__unimplemented >= dns_types__query_type__first .
H82:   dns_types__unimplemented <= dns_types__query_type__last .
H83:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H84:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H85:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H86:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H87:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 3]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])))) .
H88:   dns_types__none_class >= dns_types__query_class__first .
H89:   dns_types__none_class <= dns_types__query_class__last .
H90:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H91:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 <= 
           input_bytes .
C2:    dns_types__packet_bytes_range__first + 4 >= 4 .
 

procedure_get_query_name_type_class_58.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]))))) .
H81:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H82:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H83:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H84:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H85:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 3]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])))) .
H86:   dns_types__none_class >= dns_types__query_class__first .
H87:   dns_types__none_class <= dns_types__query_class__last .
H88:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H89:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 <= 
           input_bytes .
C2:    dns_types__packet_bytes_range__first + 4 >= 4 .
 

procedure_get_query_name_type_class_59.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H77:   dns_types__unimplemented >= dns_types__query_type__first .
H78:   dns_types__unimplemented <= dns_types__query_type__last .
H79:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H80:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H81:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H82:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H83:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 3]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])))) .
H84:   dns_types__none_class >= dns_types__query_class__first .
H85:   dns_types__none_class <= dns_types__query_class__last .
H86:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H87:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 <= 
           input_bytes .
C2:    dns_types__packet_bytes_range__first + 4 >= 4 .
 

procedure_get_query_name_type_class_60.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])))) .
H81:   dns_types__unimplemented >= dns_types__query_type__first .
H82:   dns_types__unimplemented <= dns_types__query_type__last .
H83:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H84:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H85:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H86:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H87:   not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]))))) .
H88:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H89:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 <= 
           input_bytes .
C2:    dns_types__packet_bytes_range__first + 4 >= 4 .
 

procedure_get_query_name_type_class_61.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]))))) .
H81:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H82:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H83:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H84:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H85:   not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]))))) .
H86:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H87:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 <= 
           input_bytes .
C2:    dns_types__packet_bytes_range__first + 4 >= 4 .
 

procedure_get_query_name_type_class_62.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H77:   dns_types__unimplemented >= dns_types__query_type__first .
H78:   dns_types__unimplemented <= dns_types__query_type__last .
H79:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H80:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H81:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) >= 
           dns_types__query_class__first .
H82:   to_class(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4])) <= 
           dns_types__query_class__last .
H83:   not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]))))) .
H84:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H85:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 <= 
           input_bytes .
C2:    dns_types__packet_bytes_range__first + 4 >= 4 .
 

procedure_get_query_name_type_class_63.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])))) .
H81:   dns_types__unimplemented >= dns_types__query_type__first .
H82:   dns_types__unimplemented <= dns_types__query_type__last .
H83:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H84:   dns_types__none_class >= dns_types__query_class__first .
H85:   dns_types__none_class <= dns_types__query_class__last .
H86:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H87:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 <= 
           input_bytes .
C2:    dns_types__packet_bytes_range__first + 4 >= 4 .
 

procedure_get_query_name_type_class_64.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H77:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H78:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) >= 
           dns_types__query_type__first .
H79:   to_type(element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2])) <= 
           dns_types__query_type__last .
H80:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first + 1]) * 
           256 + element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]))))) .
H81:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H82:   dns_types__none_class >= dns_types__query_class__first .
H83:   dns_types__none_class <= dns_types__query_class__last .
H84:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H85:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 <= 
           input_bytes .
C2:    dns_types__packet_bytes_range__first + 4 >= 4 .
 

procedure_get_query_name_type_class_65.
H1:    input_bytes >= dns_types__header_bits div 8 + 1 .
H2:    input_bytes < 1000 .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes >= dns_types__packet_length_range__first .
H27:   input_bytes <= dns_types__packet_length_range__last .
H28:   32 >= character__first .
H29:   32 <= character__last .
H30:   (dns_types__packet_bytes_range__first <= input_bytes - 5) -> ((
           dns_types__packet_bytes_range__first >= 
           dns_types__packet_bytes_range__first) and (
           dns_types__packet_bytes_range__first <= 
           dns_types__packet_bytes_range__last)) .
H31:   input_bytes - 5 >= integer__first .
H32:   input_bytes - 5 <= integer__last .
H33:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H34:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H35:   dns_types__packet_bytes_range__first >= integer__first .
H36:   dns_types__packet_bytes_range__first <= integer__last .
H37:   not (((dns_types__packet_bytes_range__first <= 
           input_bytes - 5) and (element(fld_bytes(
           input_packet), [dns_types__packet_bytes_range__first]) <> 0)) and (
           rr_type__wirestringtypeindex__first < 
           rr_type__wirestringtypeindex__last)) .
H38:   0 >= character__first .
H39:   0 <= character__last .
H40:   0 >= character__first .
H41:   0 <= character__last .
H42:   rr_type__wirestringtypeindex__first >= 
           rr_type__wirestringtypeindex__first .
H43:   rr_type__wirestringtypeindex__first <= 
           rr_type__wirestringtypeindex__last .
H44:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H45:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H46:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           natural__first .
H47:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           natural__last .
H48:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__first .
H49:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__last .
H50:   dns_types__packet_bytes_range__first + 2 >= 
           dns_types__packet_bytes_range__base__first .
H51:   dns_types__packet_bytes_range__first + 2 <= 
           dns_types__packet_bytes_range__base__last .
H52:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 >= 
           integer__base__first .
H53:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 <= 
           integer__base__last .
H54:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) >= 
           natural__first .
H55:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) <= 
           natural__last .
H56:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__first .
H57:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__last .
H58:   dns_types__packet_bytes_range__first + 1 >= 
           dns_types__packet_bytes_range__base__first .
H59:   dns_types__packet_bytes_range__first + 1 <= 
           dns_types__packet_bytes_range__base__last .
H60:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H62:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           natural__first .
H63:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           natural__last .
H64:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H65:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
H66:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__base__first .
H67:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__base__last .
H68:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 >= 
           integer__base__first .
H69:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 <= 
           integer__base__last .
H70:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) >= 
           natural__first .
H71:   element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) <= 
           natural__last .
H72:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__first .
H73:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__last .
H74:   dns_types__packet_bytes_range__first + 3 >= 
           dns_types__packet_bytes_range__base__first .
H75:   dns_types__packet_bytes_range__first + 3 <= 
           dns_types__packet_bytes_range__base__last .
H76:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 1]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H77:   dns_types__unimplemented >= dns_types__query_type__first .
H78:   dns_types__unimplemented <= dns_types__query_type__last .
H79:   not ((element(fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 3]) * 256 + element(
           fld_bytes(input_packet), [
           dns_types__packet_bytes_range__first + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H80:   dns_types__none_class >= dns_types__query_class__first .
H81:   dns_types__none_class <= dns_types__query_class__last .
H82:   dns_types__packet_bytes_range__first + 4 >= 
           dns_types__packet_bytes_range__first .
H83:   dns_types__packet_bytes_range__first + 4 <= 
           dns_types__packet_bytes_range__last .
        ->
C1:    dns_types__packet_bytes_range__first + 4 <= 
           input_bytes .
C2:    dns_types__packet_bytes_range__first + 4 >= 4 .
 

For path(s) from assertion of line 209 to finish:

procedure_get_query_name_type_class_66.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2])))) .
H95:   dns_types__unimplemented >= dns_types__query_type__first .
H96:   dns_types__unimplemented <= dns_types__query_type__last .
H97:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H98:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H99:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H100:  to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H101:  not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [byte + 1 + 3]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 4])))) .
H102:  dns_types__none_class >= dns_types__query_class__first .
H103:  dns_types__none_class <= dns_types__query_class__last .
H104:  byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H105:  byte + 1 + 4 <= dns_types__packet_bytes_range__last .
        ->
C1:    byte + 1 + 4 <= input_bytes .
C2:    byte + 1 + 4 >= 4 .
 

procedure_get_query_name_type_class_67.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2]))))) .
H95:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H96:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H97:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H98:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H99:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [byte + 1 + 3]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 4])))) .
H100:  dns_types__none_class >= dns_types__query_class__first .
H101:  dns_types__none_class <= dns_types__query_class__last .
H102:  byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H103:  byte + 1 + 4 <= dns_types__packet_bytes_range__last .
        ->
C1:    byte + 1 + 4 <= input_bytes .
C2:    byte + 1 + 4 >= 4 .
 

procedure_get_query_name_type_class_68.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   not ((element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H91:   dns_types__unimplemented >= dns_types__query_type__first .
H92:   dns_types__unimplemented <= dns_types__query_type__last .
H93:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H94:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H95:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H96:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H97:   not (dns_types__query_class__valid(to_class(element(fld_bytes(
           input_packet), [byte + 1 + 3]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 4])))) .
H98:   dns_types__none_class >= dns_types__query_class__first .
H99:   dns_types__none_class <= dns_types__query_class__last .
H100:  byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H101:  byte + 1 + 4 <= dns_types__packet_bytes_range__last .
        ->
C1:    byte + 1 + 4 <= input_bytes .
C2:    byte + 1 + 4 >= 4 .
 

procedure_get_query_name_type_class_69.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2])))) .
H95:   dns_types__unimplemented >= dns_types__query_type__first .
H96:   dns_types__unimplemented <= dns_types__query_type__last .
H97:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H98:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H99:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H100:  to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H101:  not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]))))) .
H102:  byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H103:  byte + 1 + 4 <= dns_types__packet_bytes_range__last .
        ->
C1:    byte + 1 + 4 <= input_bytes .
C2:    byte + 1 + 4 >= 4 .
 

procedure_get_query_name_type_class_70.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2]))))) .
H95:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H96:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H97:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H98:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H99:   not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]))))) .
H100:  byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H101:  byte + 1 + 4 <= dns_types__packet_bytes_range__last .
        ->
C1:    byte + 1 + 4 <= input_bytes .
C2:    byte + 1 + 4 >= 4 .
 

procedure_get_query_name_type_class_71.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   not ((element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H91:   dns_types__unimplemented >= dns_types__query_type__first .
H92:   dns_types__unimplemented <= dns_types__query_type__last .
H93:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first) .
H94:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last) .
H95:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) >= 
           dns_types__query_class__first .
H96:   to_class(element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4])) <= 
           dns_types__query_class__last .
H97:   not (not (dns_types__query_class__valid(to_class(element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]))))) .
H98:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H99:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
        ->
C1:    byte + 1 + 4 <= input_bytes .
C2:    byte + 1 + 4 >= 4 .
 

procedure_get_query_name_type_class_72.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2])))) .
H95:   dns_types__unimplemented >= dns_types__query_type__first .
H96:   dns_types__unimplemented <= dns_types__query_type__last .
H97:   not ((element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H98:   dns_types__none_class >= dns_types__query_class__first .
H99:   dns_types__none_class <= dns_types__query_class__last .
H100:  byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H101:  byte + 1 + 4 <= dns_types__packet_bytes_range__last .
        ->
C1:    byte + 1 + 4 <= input_bytes .
C2:    byte + 1 + 4 >= 4 .
 

procedure_get_query_name_type_class_73.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first) .
H91:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last) .
H92:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) >= 
           dns_types__query_type__first .
H93:   to_type(element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2])) <= 
           dns_types__query_type__last .
H94:   not (not (dns_types__query_type__valid(to_type(element(fld_bytes(
           input_packet), [byte + 1 + 1]) * 256 + element(fld_bytes(
           input_packet), [byte + 1 + 2]))))) .
H95:   not ((element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H96:   dns_types__none_class >= dns_types__query_class__first .
H97:   dns_types__none_class <= dns_types__query_class__last .
H98:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H99:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
        ->
C1:    byte + 1 + 4 <= input_bytes .
C2:    byte + 1 + 4 >= 4 .
 

procedure_get_query_name_type_class_74.
H1:    i >= rr_type__wirestringtypeindex__first .
H2:    i < rr_type__wirestringtypeindex__last .
H3:    byte >= dns_types__packet_bytes_range__first .
H4:    byte <= input_bytes - 5 .
H5:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet), [i___1]) <= dns_types__byte__last))) .
H6:    fld_arcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H7:    fld_arcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H8:    fld_nscount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H9:    fld_nscount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H10:   fld_ancount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H11:   fld_ancount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H12:   fld_qdcount(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H13:   fld_qdcount(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H14:   fld_rcode(fld_header(input_packet)) >= 
           dns_types__response_code__first .
H15:   fld_rcode(fld_header(input_packet)) <= 
           dns_types__response_code__last .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   true .
H22:   true .
H23:   fld_opcode(fld_header(input_packet)) >= 
           dns_types__opcode_type__first .
H24:   fld_opcode(fld_header(input_packet)) <= 
           dns_types__opcode_type__last .
H25:   true .
H26:   fld_messageid(fld_header(input_packet)) >= 
           dns_types__unsigned_short__first .
H27:   fld_messageid(fld_header(input_packet)) <= 
           dns_types__unsigned_short__last .
H28:   input_bytes >= dns_types__packet_length_range__first .
H29:   input_bytes <= dns_types__packet_length_range__last .
H30:   input_bytes >= dns_types__header_bits div 8 + 1 .
H31:   input_bytes < 1000 .
H32:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H33:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H34:   element(fld_bytes(input_packet), [byte]) >= 
           character__first .
H35:   element(fld_bytes(input_packet), [byte]) <= 
           character__last .
H36:   byte >= dns_types__packet_bytes_range__first .
H37:   byte <= dns_types__packet_bytes_range__last .
H38:   i >= rr_type__wirestringtypeindex__first .
H39:   i <= rr_type__wirestringtypeindex__last .
H40:   i + 1 >= natural__first .
H41:   i + 1 <= natural__last .
H42:   byte + 1 >= dns_types__packet_bytes_range__first .
H43:   byte + 1 <= dns_types__packet_bytes_range__last .
H44:   (byte + 1 <= input_bytes - 5) -> ((byte + 1 >= 
           dns_types__packet_bytes_range__first) and (byte + 1 <= 
           dns_types__packet_bytes_range__last)) .
H45:   input_bytes - 5 >= integer__first .
H46:   input_bytes - 5 <= integer__last .
H47:   input_bytes - 5 >= dns_types__packet_length_range__base__first .
H48:   input_bytes - 5 <= dns_types__packet_length_range__base__last .
H49:   byte + 1 >= integer__first .
H50:   byte + 1 <= integer__last .
H51:   not (((byte + 1 <= input_bytes - 5) and (element(fld_bytes(
           input_packet), [byte + 1]) <> 0)) and (i + 1 < 
           rr_type__wirestringtypeindex__last)) .
H52:   0 >= character__first .
H53:   0 <= character__last .
H54:   0 >= character__first .
H55:   0 <= character__last .
H56:   i + 1 >= rr_type__wirestringtypeindex__first .
H57:   i + 1 <= rr_type__wirestringtypeindex__last .
H58:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H59:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H60:   element(fld_bytes(input_packet), [byte + 1 + 2]) >= 
           natural__first .
H61:   element(fld_bytes(input_packet), [byte + 1 + 2]) <= 
           natural__last .
H62:   byte + 1 + 2 >= dns_types__packet_bytes_range__first .
H63:   byte + 1 + 2 <= dns_types__packet_bytes_range__last .
H64:   byte + 1 + 2 >= dns_types__packet_bytes_range__base__first .
H65:   byte + 1 + 2 <= dns_types__packet_bytes_range__base__last .
H66:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 >= 
           integer__base__first .
H67:   element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 <= 
           integer__base__last .
H68:   element(fld_bytes(input_packet), [byte + 1 + 1]) >= 
           natural__first .
H69:   element(fld_bytes(input_packet), [byte + 1 + 1]) <= 
           natural__last .
H70:   byte + 1 + 1 >= dns_types__packet_bytes_range__first .
H71:   byte + 1 + 1 <= dns_types__packet_bytes_range__last .
H72:   byte + 1 + 1 >= dns_types__packet_bytes_range__base__first .
H73:   byte + 1 + 1 <= dns_types__packet_bytes_range__base__last .
H74:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H75:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H76:   element(fld_bytes(input_packet), [byte + 1 + 4]) >= 
           natural__first .
H77:   element(fld_bytes(input_packet), [byte + 1 + 4]) <= 
           natural__last .
H78:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H79:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
H80:   byte + 1 + 4 >= dns_types__packet_bytes_range__base__first .
H81:   byte + 1 + 4 <= dns_types__packet_bytes_range__base__last .
H82:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 >= 
           integer__base__first .
H83:   element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 <= 
           integer__base__last .
H84:   element(fld_bytes(input_packet), [byte + 1 + 3]) >= 
           natural__first .
H85:   element(fld_bytes(input_packet), [byte + 1 + 3]) <= 
           natural__last .
H86:   byte + 1 + 3 >= dns_types__packet_bytes_range__first .
H87:   byte + 1 + 3 <= dns_types__packet_bytes_range__last .
H88:   byte + 1 + 3 >= dns_types__packet_bytes_range__base__first .
H89:   byte + 1 + 3 <= dns_types__packet_bytes_range__base__last .
H90:   not ((element(fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) >= 
           type_to_natural(dns_types__query_type__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 1]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 2]) <= 
           type_to_natural(dns_types__query_type__last))) .
H91:   dns_types__unimplemented >= dns_types__query_type__first .
H92:   dns_types__unimplemented <= dns_types__query_type__last .
H93:   not ((element(fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) >= 
           class_to_natural(dns_types__query_class__first)) and (element(
           fld_bytes(input_packet), [byte + 1 + 3]) * 256 + element(
           fld_bytes(input_packet), [byte + 1 + 4]) <= 
           class_to_natural(dns_types__query_class__last))) .
H94:   dns_types__none_class >= dns_types__query_class__first .
H95:   dns_types__none_class <= dns_types__query_class__last .
H96:   byte + 1 + 4 >= dns_types__packet_bytes_range__first .
H97:   byte + 1 + 4 <= dns_types__packet_bytes_range__last .
        ->
C1:    byte + 1 + 4 <= input_bytes .
C2:    byte + 1 + 4 >= 4 .
 

