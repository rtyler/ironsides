           *******************************************************
                       Semantic Analysis of SPARK Text
                             Examiner GPL Edition

           *******************************************************


                   task_type Udp_Dns_Package.Udp_Dns_Task




For path(s) from start to run-time check associated with statement of line 45:

task_type_udp_dns_task_1.
H1:    true .
        ->
C1:    0 >= dns_types__byte__first .
C2:    0 <= dns_types__byte__last .
 

For path(s) from start to assertion of line 48:

task_type_udp_dns_task_2.
*** true .          /* trivially true VC removed by Examiner */


For path(s) from assertion of line 48 to assertion of line 48:

task_type_udp_dns_task_3.
*** true .          /* trivially true VC removed by Examiner */


task_type_udp_dns_task_4.
*** true .          /* trivially true VC removed by Examiner */


task_type_udp_dns_task_5.
*** true .          /* trivially true VC removed by Examiner */


For path(s) from assertion of line 48 to run-time check associated with statement of line 49:

task_type_udp_dns_task_6.
H1:    true .
H2:    (not failure__3) -> ((input_bytes__3 >= 1 + 
           dns_types__header_bits div 8) and (input_bytes__3 <= 
           dns_network__max_query_size)) .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes__3 >= dns_types__packet_length_range__first .
H27:   input_bytes__3 <= dns_types__packet_length_range__last .
H28:   true .
        ->
C1:    input_bytes__3 >= dns_types__packet_length_range__first .
C2:    input_bytes__3 <= dns_types__packet_length_range__last .
 

For path(s) from assertion of line 48 to run-time check associated with statement of line 55:

task_type_udp_dns_task_7.
H1:    true .
H2:    (not failure__3) -> ((input_bytes__3 >= 1 + 
           dns_types__header_bits div 8) and (input_bytes__3 <= 
           dns_network__max_query_size)) .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes__3 >= dns_types__packet_length_range__first .
H27:   input_bytes__3 <= dns_types__packet_length_range__last .
H28:   true .
H29:   input_bytes__3 >= dns_types__packet_length_range__first .
H30:   input_bytes__3 <= dns_types__packet_length_range__last .
H31:   true .
H32:   failure__3 .
H33:   true .
        ->
C1:    0 >= natural__first .
C2:    0 <= natural__last .
 

For path(s) from assertion of line 48 to precondition check associated with statement of line 59:

task_type_udp_dns_task_8.
H1:    true .
H2:    (not failure__3) -> ((input_bytes__3 >= 1 + 
           dns_types__header_bits div 8) and (input_bytes__3 <= 
           dns_network__max_query_size)) .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes__3 >= dns_types__packet_length_range__first .
H27:   input_bytes__3 <= dns_types__packet_length_range__last .
H28:   true .
H29:   input_bytes__3 >= dns_types__packet_length_range__first .
H30:   input_bytes__3 <= dns_types__packet_length_range__last .
H31:   true .
H32:   not failure__3 .
H33:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H34:   fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H35:   fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H36:   fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H37:   fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H38:   fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H39:   fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H40:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H41:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H42:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H43:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   true .
H50:   true .
H51:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H52:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H53:   true .
H54:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H55:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H56:   input_bytes__3 >= dns_types__packet_length_range__first .
H57:   input_bytes__3 <= dns_types__packet_length_range__last .
H58:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H59:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H60:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H61:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H62:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H63:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H64:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H65:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H66:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H67:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H68:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H69:   true .
H70:   true .
H71:   true .
H72:   true .
H73:   true .
H74:   true .
H75:   true .
H76:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H77:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H78:   true .
H79:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H80:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
        ->
C1:    input_bytes__3 >= dns_types__packet_length_range__first .
C2:    input_bytes__3 <= dns_types__packet_length_range__last .
C3:    input_bytes__3 >= dns_types__header_bits div 8 + 1 .
C4:    input_bytes__3 < 312 .
 

For path(s) from assertion of line 48 to run-time check associated with statement of line 59:

task_type_udp_dns_task_9.
H1:    true .
H2:    (not failure__3) -> ((input_bytes__3 >= 1 + 
           dns_types__header_bits div 8) and (input_bytes__3 <= 
           dns_network__max_query_size)) .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes__3 >= dns_types__packet_length_range__first .
H27:   input_bytes__3 <= dns_types__packet_length_range__last .
H28:   true .
H29:   input_bytes__3 >= dns_types__packet_length_range__first .
H30:   input_bytes__3 <= dns_types__packet_length_range__last .
H31:   true .
H32:   not failure__3 .
H33:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H34:   fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H35:   fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H36:   fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H37:   fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H38:   fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H39:   fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H40:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H41:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H42:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H43:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   true .
H50:   true .
H51:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H52:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H53:   true .
H54:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H55:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H56:   input_bytes__3 >= dns_types__packet_length_range__first .
H57:   input_bytes__3 <= dns_types__packet_length_range__last .
H58:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H59:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H60:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H61:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H62:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H63:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H64:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H65:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H66:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H67:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H68:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H69:   true .
H70:   true .
H71:   true .
H72:   true .
H73:   true .
H74:   true .
H75:   true .
H76:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H77:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H78:   true .
H79:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H80:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H81:   input_bytes__3 >= dns_types__packet_length_range__first .
H82:   input_bytes__3 <= dns_types__packet_length_range__last .
H83:   input_bytes__3 >= dns_types__header_bits div 8 + 1 .
H84:   input_bytes__3 < 312 .
H85:   output_bytes__5 >= dns_types__header_bits div 8 + 1 .
H86:   output_bytes__5 <= dns_types__packet_size .
H87:   max_transmit__5 <= dns_types__packet_size .
H88:   max_transmit__5 >= dns_types__udp_max_size .
H89:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__5), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__5), [i___1]) <= dns_types__byte__last))) .
H90:   fld_arcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H91:   fld_arcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H92:   fld_nscount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H93:   fld_nscount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H94:   fld_ancount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H95:   fld_ancount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H96:   fld_qdcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H97:   fld_qdcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H98:   fld_rcode(fld_header(output_packet__5)) >= 
           dns_types__response_code__first .
H99:   fld_rcode(fld_header(output_packet__5)) <= 
           dns_types__response_code__last .
H100:  true .
H101:  true .
H102:  true .
H103:  true .
H104:  true .
H105:  true .
H106:  true .
H107:  fld_opcode(fld_header(output_packet__5)) >= 
           dns_types__opcode_type__first .
H108:  fld_opcode(fld_header(output_packet__5)) <= 
           dns_types__opcode_type__last .
H109:  true .
H110:  fld_messageid(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H111:  fld_messageid(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H112:  output_bytes__5 >= dns_types__packet_length_range__first .
H113:  output_bytes__5 <= dns_types__packet_length_range__last .
H114:  max_transmit__5 >= dns_types__packet_length_range__first .
H115:  max_transmit__5 <= dns_types__packet_length_range__last .
H116:  true .
        ->
C1:    max_transmit__5 >= dns_types__packet_length_range__first .
C2:    max_transmit__5 <= dns_types__packet_length_range__last .
C3:    output_bytes__5 >= dns_types__packet_length_range__first .
C4:    output_bytes__5 <= dns_types__packet_length_range__last .
 

For path(s) from assertion of line 48 to run-time check associated with statement of line 67:

task_type_udp_dns_task_10.
H1:    true .
H2:    (not failure__3) -> ((input_bytes__3 >= 1 + 
           dns_types__header_bits div 8) and (input_bytes__3 <= 
           dns_network__max_query_size)) .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes__3 >= dns_types__packet_length_range__first .
H27:   input_bytes__3 <= dns_types__packet_length_range__last .
H28:   true .
H29:   input_bytes__3 >= dns_types__packet_length_range__first .
H30:   input_bytes__3 <= dns_types__packet_length_range__last .
H31:   true .
H32:   not failure__3 .
H33:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H34:   fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H35:   fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H36:   fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H37:   fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H38:   fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H39:   fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H40:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H41:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H42:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H43:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   true .
H50:   true .
H51:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H52:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H53:   true .
H54:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H55:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H56:   input_bytes__3 >= dns_types__packet_length_range__first .
H57:   input_bytes__3 <= dns_types__packet_length_range__last .
H58:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H59:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H60:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H61:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H62:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H63:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H64:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H65:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H66:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H67:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H68:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H69:   true .
H70:   true .
H71:   true .
H72:   true .
H73:   true .
H74:   true .
H75:   true .
H76:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H77:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H78:   true .
H79:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H80:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H81:   input_bytes__3 >= dns_types__packet_length_range__first .
H82:   input_bytes__3 <= dns_types__packet_length_range__last .
H83:   input_bytes__3 >= dns_types__header_bits div 8 + 1 .
H84:   input_bytes__3 < 312 .
H85:   output_bytes__5 >= dns_types__header_bits div 8 + 1 .
H86:   output_bytes__5 <= dns_types__packet_size .
H87:   max_transmit__5 <= dns_types__packet_size .
H88:   max_transmit__5 >= dns_types__udp_max_size .
H89:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__5), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__5), [i___1]) <= dns_types__byte__last))) .
H90:   fld_arcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H91:   fld_arcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H92:   fld_nscount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H93:   fld_nscount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H94:   fld_ancount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H95:   fld_ancount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H96:   fld_qdcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H97:   fld_qdcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H98:   fld_rcode(fld_header(output_packet__5)) >= 
           dns_types__response_code__first .
H99:   fld_rcode(fld_header(output_packet__5)) <= 
           dns_types__response_code__last .
H100:  true .
H101:  true .
H102:  true .
H103:  true .
H104:  true .
H105:  true .
H106:  true .
H107:  fld_opcode(fld_header(output_packet__5)) >= 
           dns_types__opcode_type__first .
H108:  fld_opcode(fld_header(output_packet__5)) <= 
           dns_types__opcode_type__last .
H109:  true .
H110:  fld_messageid(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H111:  fld_messageid(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H112:  output_bytes__5 >= dns_types__packet_length_range__first .
H113:  output_bytes__5 <= dns_types__packet_length_range__last .
H114:  max_transmit__5 >= dns_types__packet_length_range__first .
H115:  max_transmit__5 <= dns_types__packet_length_range__last .
H116:  true .
H117:  max_transmit__5 >= dns_types__packet_length_range__first .
H118:  max_transmit__5 <= dns_types__packet_length_range__last .
H119:  output_bytes__5 >= dns_types__packet_length_range__first .
H120:  output_bytes__5 <= dns_types__packet_length_range__last .
H121:  output_bytes__5 >= dns_types__packet_length_range__first .
H122:  output_bytes__5 <= dns_types__packet_length_range__last .
H123:  max_transmit__5 >= dns_types__packet_length_range__first .
H124:  max_transmit__5 <= dns_types__packet_length_range__last .
        ->
C1:    dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) >= dns_types__packet_length_range__first .
C2:    dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) <= dns_types__packet_length_range__last .
 

For path(s) from assertion of line 48 to precondition check associated with statement of line 70:

task_type_udp_dns_task_11.
H1:    true .
H2:    (not failure__3) -> ((input_bytes__3 >= 1 + 
           dns_types__header_bits div 8) and (input_bytes__3 <= 
           dns_network__max_query_size)) .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes__3 >= dns_types__packet_length_range__first .
H27:   input_bytes__3 <= dns_types__packet_length_range__last .
H28:   true .
H29:   input_bytes__3 >= dns_types__packet_length_range__first .
H30:   input_bytes__3 <= dns_types__packet_length_range__last .
H31:   true .
H32:   not failure__3 .
H33:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H34:   fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H35:   fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H36:   fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H37:   fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H38:   fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H39:   fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H40:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H41:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H42:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H43:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   true .
H50:   true .
H51:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H52:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H53:   true .
H54:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H55:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H56:   input_bytes__3 >= dns_types__packet_length_range__first .
H57:   input_bytes__3 <= dns_types__packet_length_range__last .
H58:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H59:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H60:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H61:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H62:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H63:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H64:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H65:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H66:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H67:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H68:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H69:   true .
H70:   true .
H71:   true .
H72:   true .
H73:   true .
H74:   true .
H75:   true .
H76:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H77:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H78:   true .
H79:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H80:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H81:   input_bytes__3 >= dns_types__packet_length_range__first .
H82:   input_bytes__3 <= dns_types__packet_length_range__last .
H83:   input_bytes__3 >= dns_types__header_bits div 8 + 1 .
H84:   input_bytes__3 < 312 .
H85:   output_bytes__5 >= dns_types__header_bits div 8 + 1 .
H86:   output_bytes__5 <= dns_types__packet_size .
H87:   max_transmit__5 <= dns_types__packet_size .
H88:   max_transmit__5 >= dns_types__udp_max_size .
H89:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__5), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__5), [i___1]) <= dns_types__byte__last))) .
H90:   fld_arcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H91:   fld_arcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H92:   fld_nscount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H93:   fld_nscount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H94:   fld_ancount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H95:   fld_ancount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H96:   fld_qdcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H97:   fld_qdcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H98:   fld_rcode(fld_header(output_packet__5)) >= 
           dns_types__response_code__first .
H99:   fld_rcode(fld_header(output_packet__5)) <= 
           dns_types__response_code__last .
H100:  true .
H101:  true .
H102:  true .
H103:  true .
H104:  true .
H105:  true .
H106:  true .
H107:  fld_opcode(fld_header(output_packet__5)) >= 
           dns_types__opcode_type__first .
H108:  fld_opcode(fld_header(output_packet__5)) <= 
           dns_types__opcode_type__last .
H109:  true .
H110:  fld_messageid(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H111:  fld_messageid(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H112:  output_bytes__5 >= dns_types__packet_length_range__first .
H113:  output_bytes__5 <= dns_types__packet_length_range__last .
H114:  max_transmit__5 >= dns_types__packet_length_range__first .
H115:  max_transmit__5 <= dns_types__packet_length_range__last .
H116:  true .
H117:  max_transmit__5 >= dns_types__packet_length_range__first .
H118:  max_transmit__5 <= dns_types__packet_length_range__last .
H119:  output_bytes__5 >= dns_types__packet_length_range__first .
H120:  output_bytes__5 <= dns_types__packet_length_range__last .
H121:  output_bytes__5 >= dns_types__packet_length_range__first .
H122:  output_bytes__5 <= dns_types__packet_length_range__last .
H123:  max_transmit__5 >= dns_types__packet_length_range__first .
H124:  max_transmit__5 <= dns_types__packet_length_range__last .
H125:  dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) >= dns_types__packet_length_range__first .
H126:  dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) <= dns_types__packet_length_range__last .
H127:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__5), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__5), [i___1]) <= dns_types__byte__last))) .
H128:  fld_arcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H129:  fld_arcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H130:  fld_nscount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H131:  fld_nscount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H132:  fld_ancount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H133:  fld_ancount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H134:  fld_qdcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H135:  fld_qdcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H136:  fld_rcode(fld_header(output_packet__5)) >= 
           dns_types__response_code__first .
H137:  fld_rcode(fld_header(output_packet__5)) <= 
           dns_types__response_code__last .
H138:  true .
H139:  true .
H140:  true .
H141:  true .
H142:  true .
H143:  true .
H144:  true .
H145:  fld_opcode(fld_header(output_packet__5)) >= 
           dns_types__opcode_type__first .
H146:  fld_opcode(fld_header(output_packet__5)) <= 
           dns_types__opcode_type__last .
H147:  true .
H148:  fld_messageid(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H149:  fld_messageid(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H150:  dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) >= dns_types__packet_length_range__first .
H151:  dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) <= dns_types__packet_length_range__last .
H152:  true .
        ->
C1:    dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) >= dns_types__packet_length_range__first .
C2:    dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) <= dns_types__packet_length_range__last .
C3:    dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) > dns_types__header_bits div 8 .
 

For path(s) from assertion of line 48 to run-time check associated with statement of line 77:

task_type_udp_dns_task_12.
H1:    true .
H2:    (not failure__3) -> ((input_bytes__3 >= 1 + 
           dns_types__header_bits div 8) and (input_bytes__3 <= 
           dns_network__max_query_size)) .
H3:    for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H4:    fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H5:    fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H6:    fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H7:    fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H8:    fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H9:    fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H10:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H11:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H12:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H13:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H14:   true .
H15:   true .
H16:   true .
H17:   true .
H18:   true .
H19:   true .
H20:   true .
H21:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H22:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H23:   true .
H24:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H25:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H26:   input_bytes__3 >= dns_types__packet_length_range__first .
H27:   input_bytes__3 <= dns_types__packet_length_range__last .
H28:   true .
H29:   input_bytes__3 >= dns_types__packet_length_range__first .
H30:   input_bytes__3 <= dns_types__packet_length_range__last .
H31:   true .
H32:   not failure__3 .
H33:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(input_packet__3), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           input_packet__3), [i___1]) <= dns_types__byte__last))) .
H34:   fld_arcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H35:   fld_arcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H36:   fld_nscount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H37:   fld_nscount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H38:   fld_ancount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H39:   fld_ancount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H40:   fld_qdcount(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H41:   fld_qdcount(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H42:   fld_rcode(fld_header(input_packet__3)) >= 
           dns_types__response_code__first .
H43:   fld_rcode(fld_header(input_packet__3)) <= 
           dns_types__response_code__last .
H44:   true .
H45:   true .
H46:   true .
H47:   true .
H48:   true .
H49:   true .
H50:   true .
H51:   fld_opcode(fld_header(input_packet__3)) >= 
           dns_types__opcode_type__first .
H52:   fld_opcode(fld_header(input_packet__3)) <= 
           dns_types__opcode_type__last .
H53:   true .
H54:   fld_messageid(fld_header(input_packet__3)) >= 
           dns_types__unsigned_short__first .
H55:   fld_messageid(fld_header(input_packet__3)) <= 
           dns_types__unsigned_short__last .
H56:   input_bytes__3 >= dns_types__packet_length_range__first .
H57:   input_bytes__3 <= dns_types__packet_length_range__last .
H58:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet), [i___1]) <= dns_types__byte__last))) .
H59:   fld_arcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H60:   fld_arcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H61:   fld_nscount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H62:   fld_nscount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H63:   fld_ancount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H64:   fld_ancount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H65:   fld_qdcount(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H66:   fld_qdcount(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H67:   fld_rcode(fld_header(output_packet)) >= 
           dns_types__response_code__first .
H68:   fld_rcode(fld_header(output_packet)) <= 
           dns_types__response_code__last .
H69:   true .
H70:   true .
H71:   true .
H72:   true .
H73:   true .
H74:   true .
H75:   true .
H76:   fld_opcode(fld_header(output_packet)) >= 
           dns_types__opcode_type__first .
H77:   fld_opcode(fld_header(output_packet)) <= 
           dns_types__opcode_type__last .
H78:   true .
H79:   fld_messageid(fld_header(output_packet)) >= 
           dns_types__unsigned_short__first .
H80:   fld_messageid(fld_header(output_packet)) <= 
           dns_types__unsigned_short__last .
H81:   input_bytes__3 >= dns_types__packet_length_range__first .
H82:   input_bytes__3 <= dns_types__packet_length_range__last .
H83:   input_bytes__3 >= dns_types__header_bits div 8 + 1 .
H84:   input_bytes__3 < 312 .
H85:   output_bytes__5 >= dns_types__header_bits div 8 + 1 .
H86:   output_bytes__5 <= dns_types__packet_size .
H87:   max_transmit__5 <= dns_types__packet_size .
H88:   max_transmit__5 >= dns_types__udp_max_size .
H89:   for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__5), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__5), [i___1]) <= dns_types__byte__last))) .
H90:   fld_arcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H91:   fld_arcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H92:   fld_nscount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H93:   fld_nscount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H94:   fld_ancount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H95:   fld_ancount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H96:   fld_qdcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H97:   fld_qdcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H98:   fld_rcode(fld_header(output_packet__5)) >= 
           dns_types__response_code__first .
H99:   fld_rcode(fld_header(output_packet__5)) <= 
           dns_types__response_code__last .
H100:  true .
H101:  true .
H102:  true .
H103:  true .
H104:  true .
H105:  true .
H106:  true .
H107:  fld_opcode(fld_header(output_packet__5)) >= 
           dns_types__opcode_type__first .
H108:  fld_opcode(fld_header(output_packet__5)) <= 
           dns_types__opcode_type__last .
H109:  true .
H110:  fld_messageid(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H111:  fld_messageid(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H112:  output_bytes__5 >= dns_types__packet_length_range__first .
H113:  output_bytes__5 <= dns_types__packet_length_range__last .
H114:  max_transmit__5 >= dns_types__packet_length_range__first .
H115:  max_transmit__5 <= dns_types__packet_length_range__last .
H116:  true .
H117:  max_transmit__5 >= dns_types__packet_length_range__first .
H118:  max_transmit__5 <= dns_types__packet_length_range__last .
H119:  output_bytes__5 >= dns_types__packet_length_range__first .
H120:  output_bytes__5 <= dns_types__packet_length_range__last .
H121:  output_bytes__5 >= dns_types__packet_length_range__first .
H122:  output_bytes__5 <= dns_types__packet_length_range__last .
H123:  max_transmit__5 >= dns_types__packet_length_range__first .
H124:  max_transmit__5 <= dns_types__packet_length_range__last .
H125:  dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) >= dns_types__packet_length_range__first .
H126:  dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) <= dns_types__packet_length_range__last .
H127:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__5), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__5), [i___1]) <= dns_types__byte__last))) .
H128:  fld_arcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H129:  fld_arcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H130:  fld_nscount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H131:  fld_nscount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H132:  fld_ancount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H133:  fld_ancount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H134:  fld_qdcount(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H135:  fld_qdcount(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H136:  fld_rcode(fld_header(output_packet__5)) >= 
           dns_types__response_code__first .
H137:  fld_rcode(fld_header(output_packet__5)) <= 
           dns_types__response_code__last .
H138:  true .
H139:  true .
H140:  true .
H141:  true .
H142:  true .
H143:  true .
H144:  true .
H145:  fld_opcode(fld_header(output_packet__5)) >= 
           dns_types__opcode_type__first .
H146:  fld_opcode(fld_header(output_packet__5)) <= 
           dns_types__opcode_type__last .
H147:  true .
H148:  fld_messageid(fld_header(output_packet__5)) >= 
           dns_types__unsigned_short__first .
H149:  fld_messageid(fld_header(output_packet__5)) <= 
           dns_types__unsigned_short__last .
H150:  dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) >= dns_types__packet_length_range__first .
H151:  dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) <= dns_types__packet_length_range__last .
H152:  true .
H153:  dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) >= dns_types__packet_length_range__first .
H154:  dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) <= dns_types__packet_length_range__last .
H155:  dns_types__packet_length_range__min(max_transmit__5, 
           output_bytes__5) > dns_types__header_bits div 8 .
H156:  (system__default_bit_order = system__high_order_first) -> (
           output_packet__6 = output_packet__5) .
H157:  for_all(i___1: dns_types__packet_bytes_range, ((
           i___1 >= dns_types__packet_bytes_range__first) and (
           i___1 <= dns_types__packet_bytes_range__last)) -> ((element(
           fld_bytes(output_packet__6), [i___1]) >= 
           dns_types__byte__first) and (element(fld_bytes(
           output_packet__6), [i___1]) <= dns_types__byte__last))) .
H158:  fld_arcount(fld_header(output_packet__6)) >= 
           dns_types__unsigned_short__first .
H159:  fld_arcount(fld_header(output_packet__6)) <= 
           dns_types__unsigned_short__last .
H160:  fld_nscount(fld_header(output_packet__6)) >= 
           dns_types__unsigned_short__first .
H161:  fld_nscount(fld_header(output_packet__6)) <= 
           dns_types__unsigned_short__last .
H162:  fld_ancount(fld_header(output_packet__6)) >= 
           dns_types__unsigned_short__first .
H163:  fld_ancount(fld_header(output_packet__6)) <= 
           dns_types__unsigned_short__last .
H164:  fld_qdcount(fld_header(output_packet__6)) >= 
           dns_types__unsigned_short__first .
H165:  fld_qdcount(fld_header(output_packet__6)) <= 
           dns_types__unsigned_short__last .
H166:  fld_rcode(fld_header(output_packet__6)) >= 
           dns_types__response_code__first .
H167:  fld_rcode(fld_header(output_packet__6)) <= 
           dns_types__response_code__last .
H168:  true .
H169:  true .
H170:  true .
H171:  true .
H172:  true .
H173:  true .
H174:  true .
H175:  fld_opcode(fld_header(output_packet__6)) >= 
           dns_types__opcode_type__first .
H176:  fld_opcode(fld_header(output_packet__6)) <= 
           dns_types__opcode_type__last .
H177:  true .
H178:  fld_messageid(fld_header(output_packet__6)) >= 
           dns_types__unsigned_short__first .
H179:  fld_messageid(fld_header(output_packet__6)) <= 
           dns_types__unsigned_short__last .
H180:  true .
H181:  true .
H182:  failure__6 .
H183:  true .
        ->
C1:    0 >= natural__first .
C2:    0 <= natural__last .
 

For path(s) from assertion of line 48 to finish:

task_type_udp_dns_task_13.
*** true .          /* trivially true VC removed by Examiner */


task_type_udp_dns_task_14.
*** true .          /* trivially true VC removed by Examiner */


task_type_udp_dns_task_15.
*** true .          /* trivially true VC removed by Examiner */


